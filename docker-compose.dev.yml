services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: mlflow
      POSTGRES_PASSWORD: mlflow_pass
      POSTGRES_DB: mlflow_db
    ports: ["5432:5432"]
    volumes:
      - pgdata:/var/lib/postgresql/data

  mlflow:
    build: { context: ., dockerfile: services/mlflow/Dockerfile }
    depends_on: [postgres]
    ports: ["5000:5000"]
    volumes:
      - mlruns:/mlruns

  api:
    build: { context: ., dockerfile: services/api/Dockerfile }
    environment:
      MLFLOW_TRACKING_URI: http://mlflow:5000
      JWT_SECRET: "change-me"        
    ports: ["8000:8000"]
    depends_on: [mlflow]
    volumes:
      - ./dsdc:/app/dsdc
      - ./models:/app/models

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./services/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports: ["9090:9090"]
    depends_on: [api]

  grafana:
    image: grafana/grafana:latest
    ports: ["3000:3000"]
    depends_on: [prometheus]
    volumes:
      - ./services/grafana/provisioning:/etc/grafana/provisioning

  auth:
    build: { context: ., dockerfile: services/auth/Dockerfile }
    environment:
      JWT_SECRET: change-me
    ports: ["7000:7000"]

  streamlit:
    build: { context: ., dockerfile: Dockerfile.streamlit }
    ports: ["8501:8501"]
    depends_on: [api, auth]
    environment:
      API_BASE_URL: http://api:8000
      AUTH_URL: http://auth:7000

volumes:
  pgdata:
  mlruns:
