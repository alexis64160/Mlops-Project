apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasource
  namespace: mlops
data:
  datasource.yaml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://prometheus.mlops.svc.cluster.local:9090
        isDefault: true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
  namespace: mlops
data:
  dashboards.yaml: |
    apiVersion: 1
    providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: true
        options:
          path: /var/lib/grafana/dashboards
  mlops.json: |
    {
      "annotations": {
        "list": []
      },
      "editable": true,
      "graphTooltip": 0,
      "panels": [
        {
          "type": "stat",
          "title": "Total Requests",
          "targets": [
            {
              "expr": "sum(clip_total_requests)"
            }
          ],
          "gridPos": {
            "h": 6,
            "w": 8,
            "x": 0,
            "y": 0
          }
        },
        {
          "type": "timeseries",
          "title": "Requests Rate (1m)",
          "targets": [
            {
              "expr": "sum(rate(clip_total_requests[1m]))"
            }
          ],
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 6
          }
        },
        {
          "type": "timeseries",
          "title": "Latency p95 (5m)",
          "targets": [
            {
              "expr": "histogram_quantile(0.95, sum(rate(clip_request_latency_seconds_bucket[5m])) by (le))"
            }
          ],
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 14
          }
        }
      ],
      "schemaVersion": 38,
      "title": "MLOps - CLIP API",
      "version": 1
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: mlops
spec:
  replicas: 1
  selector: { matchLabels: { app: grafana } }
  template:
    metadata: { labels: { app: grafana } }
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:latest
          ports: [{ containerPort: 3000 }]
          volumeMounts:
            - name: datasources
              mountPath: /etc/grafana/provisioning/datasources
            - name: dashboards
              mountPath: /etc/grafana/provisioning/dashboards
            - name: dashboards-json
              mountPath: /var/lib/grafana/dashboards
      volumes:
        - name: datasources
          configMap:
            name: grafana-datasource
        - name: dashboards
          configMap:
            name: grafana-dashboards
            items:
              - key: dashboards.yaml
                path: dashboards.yaml
        - name: dashboards-json
          configMap:
            name: grafana-dashboards
            items:
              - key: mlops.json
                path: mlops.json
