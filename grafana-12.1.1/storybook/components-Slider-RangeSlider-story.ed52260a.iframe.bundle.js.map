{"version":3,"file":"components-Slider-RangeSlider-story.ed52260a.iframe.bundle.js","mappings":";;;;;;;;AAgCA;;;AAGA;AACA;;;AAGA;;;;AAIA;AACA;;;;;;;;AAQA;;;;;;AAMA;;;;;AAKA;AACA;;;;AAIA;;;AAGA;;;AAMA;;;;;AAMA;;;;AAIA;;;;;;;;;;;;;;AAeA","sources":["webpack://@grafana/ui/./src/components/Slider/styles.ts"],"sourcesContent":["import { css } from '@emotion/css';\nimport { css as cssCore } from '@emotion/react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport 'rc-slider/assets/index.css';\n\nexport const getStyles = (theme: GrafanaTheme2, isHorizontal: boolean, hasMarks = false) => {\n  const { spacing } = theme;\n  const railColor = theme.colors.border.strong;\n  const trackColor = theme.colors.primary.main;\n  const handleColor = theme.colors.primary.main;\n  const blueOpacity = theme.colors.primary.transparent;\n  const hoverStyle = `box-shadow: 0px 0px 0px 6px ${blueOpacity}`;\n\n  return {\n    container: css({\n      width: '100%',\n      margin: isHorizontal ? 'inherit' : spacing(1, 3, 1, 1),\n      paddingBottom: isHorizontal && hasMarks ? theme.spacing(1) : 'inherit',\n      height: isHorizontal ? 'auto' : '100%',\n    }),\n    // can't write this as an object since it needs to overwrite rc-slider styles\n    // object syntax doesn't support kebab case keys\n    // eslint-disable-next-line @emotion/syntax-preference\n    slider: css`\n      .rc-slider {\n        display: flex;\n        flex-grow: 1;\n        margin-left: 7px; // half the size of the handle to align handle to the left on 0 value\n      }\n      .rc-slider-mark {\n        top: ${theme.spacing(1.75)};\n      }\n      .rc-slider-mark-text {\n        color: ${theme.colors.text.disabled};\n        font-size: ${theme.typography.bodySmall.fontSize};\n      }\n      .rc-slider-mark-text-active {\n        color: ${theme.colors.text.primary};\n      }\n      .rc-slider-handle {\n        border: none;\n        background-color: ${handleColor};\n        box-shadow: ${theme.shadows.z1};\n        cursor: pointer;\n        opacity: 1;\n      }\n\n      .rc-slider-handle:hover,\n      .rc-slider-handle:active,\n      .rc-slider-handle-click-focused:focus {\n        ${hoverStyle};\n      }\n\n      // The triple class names is needed because that's the specificity used in the source css :(\n      .rc-slider-handle-dragging.rc-slider-handle-dragging.rc-slider-handle-dragging,\n      .rc-slider-handle:focus-visible {\n        box-shadow: 0 0 0 5px ${theme.colors.text.primary};\n      }\n\n      .rc-slider-dot,\n      .rc-slider-dot-active {\n        background-color: ${theme.colors.text.primary};\n        border-color: ${theme.colors.text.primary};\n      }\n\n      .rc-slider-track {\n        background-color: ${trackColor};\n      }\n      .rc-slider-rail {\n        background-color: ${railColor};\n        cursor: pointer;\n      }\n    `,\n    /** Global component from @emotion/core doesn't accept computed classname string returned from css from emotion.\n     * It accepts object containing the computed name and flattened styles returned from css from @emotion/core\n     * */\n    tooltip: cssCore`\n      body {\n        .rc-slider-tooltip {\n          cursor: grab;\n          user-select: none;\n          z-index: ${theme.zIndex.tooltip};\n        }\n\n        .rc-slider-tooltip-inner {\n          color: ${theme.colors.text.primary};\n          background-color: transparent !important;\n          border-radius: 0;\n          box-shadow: none;\n        }\n\n        .rc-slider-tooltip-placement-top .rc-slider-tooltip-arrow {\n          display: none;\n        }\n\n        .rc-slider-tooltip-placement-top {\n          padding: 0;\n        }\n      }\n    `,\n    sliderInput: css({\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      width: '100%',\n    }),\n    sliderInputVertical: css({\n      flexDirection: 'column',\n      height: '100%',\n\n      '.rc-slider': {\n        margin: 0,\n        order: 2,\n      },\n    }),\n    sliderInputField: css({\n      marginLeft: theme.spacing(3),\n      input: {\n        textAlign: 'center',\n      },\n    }),\n    sliderInputFieldVertical: css({\n      margin: `0 0 ${theme.spacing(3)} 0`,\n      order: 1,\n    }),\n  };\n};\n"],"names":[],"sourceRoot":""}