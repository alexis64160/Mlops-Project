"use strict";(self.webpackChunk_grafana_ui=self.webpackChunk_grafana_ui||[]).push([[6493],{"./src/components/Forms/InlineFieldRow.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{C:function(){return InlineFieldRow}});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/jsx-runtime.js"),_emotion_css__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/@emotion/css/dist/emotion-css.esm.js"),_themes_ThemeContext__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/themes/ThemeContext.tsx");const InlineFieldRow=({children:children,className:className,...htmlProps})=>{const styles=(0,_themes_ThemeContext__WEBPACK_IMPORTED_MODULE_2__.of)(getStyles);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:(0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.cx)(styles.container,className),...htmlProps,children:children})},getStyles=theme=>({container:(0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.AH)({label:"InlineFieldRow",display:"flex",flexDirection:"row",flexWrap:"wrap",alignContent:"flex-start",rowGap:theme.spacing(.5)})});try{InlineFieldRow.displayName="InlineFieldRow",InlineFieldRow.__docgenInfo={description:"",displayName:"InlineFieldRow",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Forms/InlineFieldRow.tsx#InlineFieldRow"]={docgenInfo:InlineFieldRow.__docgenInfo,name:"InlineFieldRow",path:"src/components/Forms/InlineFieldRow.tsx#InlineFieldRow"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Forms/InlineLabel.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{c:function(){return InlineLabel}});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/jsx-runtime.js"),_emotion_css__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/@emotion/css/dist/emotion-css.esm.js"),_themes_ThemeContext__WEBPACK_IMPORTED_MODULE_3__=(__webpack_require__("../../node_modules/react/index.js"),__webpack_require__("./src/themes/ThemeContext.tsx")),_Icon_Icon__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/components/Icon/Icon.tsx"),_Tooltip_Tooltip__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/Tooltip/Tooltip.tsx");const InlineLabel=({children:children,className:className,tooltip:tooltip,width:width,transparent:transparent,interactive:interactive,as:Component="label",...rest})=>{const styles=(0,_themes_ThemeContext__WEBPACK_IMPORTED_MODULE_3__.of)(getInlineLabelStyles,transparent,width);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Component,{className:(0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.cx)(styles.label,className),...rest,children:[children,tooltip&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Tooltip_Tooltip__WEBPACK_IMPORTED_MODULE_4__.m,{interactive:interactive,placement:"top",content:tooltip,theme:"info",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Icon_Icon__WEBPACK_IMPORTED_MODULE_5__.I,{tabIndex:0,name:"info-circle",size:"sm",className:styles.icon})})]})},getInlineLabelStyles=(theme,transparent=!1,width)=>({label:(0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.AH)({display:"flex",alignItems:"center",justifyContent:"space-between",flexShrink:0,padding:theme.spacing(0,1),fontWeight:theme.typography.fontWeightMedium,fontSize:theme.typography.size.sm,backgroundColor:transparent?"transparent":theme.colors.background.secondary,height:theme.spacing(theme.components.height.md),lineHeight:theme.spacing(theme.components.height.md),marginRight:theme.spacing(.5),borderRadius:theme.shape.radius.default,border:"none",width:width?"auto"!==width?8*width+"px":width:"100%",color:theme.colors.text.primary}),icon:(0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.AH)({color:theme.colors.text.secondary,marginLeft:"10px",":hover":{color:theme.colors.text.primary}})});try{InlineLabel.displayName="InlineLabel",InlineLabel.__docgenInfo={description:"",displayName:"InlineLabel",props:{tooltip:{defaultValue:null,description:"Content for the labels tooltip. If provided, an info icon with the tooltip content\nwill be displayed",name:"tooltip",required:!1,type:{name:"PopoverContent"}},width:{defaultValue:null,description:"Custom width for the label",name:"width",required:!1,type:{name:'number | "auto"'}},transparent:{defaultValue:null,description:"Make labels's background transparent",name:"transparent",required:!1,type:{name:"boolean"}},interactive:{defaultValue:null,description:"Make tooltip interactive",name:"interactive",required:!1,type:{name:"boolean"}},as:{defaultValue:null,description:"Controls which element the InlineLabel should be rendered into",name:"as",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Forms/InlineLabel.tsx#InlineLabel"]={docgenInfo:InlineLabel.__docgenInfo,name:"InlineLabel",path:"src/components/Forms/InlineLabel.tsx#InlineLabel"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Segment/SegmentSection.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{L:function(){return SegmentSection}});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/jsx-runtime.js"),_emotion_css__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/@emotion/css/dist/emotion-css.esm.js"),_themes_ThemeContext__WEBPACK_IMPORTED_MODULE_3__=(__webpack_require__("../../node_modules/react/index.js"),__webpack_require__("./src/themes/ThemeContext.tsx")),_Forms_InlineFieldRow__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/Forms/InlineFieldRow.tsx"),_Forms_InlineLabel__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/components/Forms/InlineLabel.tsx");const SegmentSection=({label:label,htmlFor:htmlFor,children:children,fill:fill})=>{const styles=(0,_themes_ThemeContext__WEBPACK_IMPORTED_MODULE_3__.of)(getStyles);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_Forms_InlineFieldRow__WEBPACK_IMPORTED_MODULE_4__.C,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Forms_InlineLabel__WEBPACK_IMPORTED_MODULE_5__.c,{htmlFor:htmlFor,width:12,className:styles.label,children:label}),children,fill&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:styles.fill,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Forms_InlineLabel__WEBPACK_IMPORTED_MODULE_5__.c,{children:""})})]})})},getStyles=theme=>({label:(0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.AH)({color:theme.colors.primary.text}),fill:(0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.AH)({flexGrow:1,marginBottom:theme.spacing(.5)})});try{SegmentSection.displayName="SegmentSection",SegmentSection.__docgenInfo={description:"Horizontal section for editor components.",displayName:"SegmentSection",props:{label:{defaultValue:null,description:"",name:"label",required:!0,type:{name:"string"}},htmlFor:{defaultValue:null,description:"",name:"htmlFor",required:!1,type:{name:"string"}},fill:{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Segment/SegmentSection.tsx#SegmentSection"]={docgenInfo:SegmentSection.__docgenInfo,name:"SegmentSection",path:"src/components/Segment/SegmentSection.tsx#SegmentSection"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Segment/SegmentSelect.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{a:function(){return SegmentSelect}});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react/index.js"),_themes_ThemeContext__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/themes/ThemeContext.tsx"),_Select_Select__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/Select/Select.tsx");function SegmentSelect({value:value,placeholder:placeholder="",options:options=[],onChange:onChange,onClickOutside:onClickOutside,loadOptions:loadOptions,width:widthPixels,noOptionsMessage:noOptionsMessage="",allowCustomValue:allowCustomValue=!1,allowEmptyValue:allowEmptyValue=!1,...rest}){const ref=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),theme=(0,_themes_ThemeContext__WEBPACK_IMPORTED_MODULE_2__.$j)();let Component,width=widthPixels>0?widthPixels/theme.spacing.gridSize:void 0,asyncOptions={};return loadOptions?(Component=_Select_Select__WEBPACK_IMPORTED_MODULE_3__.DW,asyncOptions={loadOptions:loadOptions,defaultOptions:!0}):Component=_Select_Select__WEBPACK_IMPORTED_MODULE_3__.l6,(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{...rest,ref:ref,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Component,{width:width,noOptionsMessage:noOptionsMessage,placeholder:placeholder,autoFocus:!0,isOpen:!0,onChange:onChange,options:options,value:value,closeMenuOnSelect:!1,onCloseMenu:()=>{if(ref&&ref.current){const input=ref.current.querySelector('input[id^="react-select-"]');input&&(input.value||allowEmptyValue)?onChange({value:input.value,label:input.value}):onClickOutside()}},allowCustomValue:allowCustomValue,...asyncOptions})})}try{SegmentSelect.displayName="SegmentSelect",SegmentSelect.__docgenInfo={description:"",displayName:"SegmentSelect",props:{value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"T | SelectableValue<T>"}},options:{defaultValue:{value:"[]"},description:"",name:"options",required:!1,type:{name:"SelectableValue<T>[]"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(item: SelectableValue<T>) => void"}},loadOptions:{defaultValue:{value:"undefined"},description:"If provided - AsyncSelect will be used allowing to reload options when the value in the input changes",name:"loadOptions",required:!1,type:{name:"((inputValue: string) => Promise<SelectableValue<T>[]>)"}},onClickOutside:{defaultValue:null,description:"",name:"onClickOutside",required:!0,type:{name:"() => void"}},width:{defaultValue:null,description:"",name:"width",required:!0,type:{name:"number"}},noOptionsMessage:{defaultValue:{value:""},description:"",name:"noOptionsMessage",required:!1,type:{name:"string"}},allowCustomValue:{defaultValue:{value:"false"},description:"",name:"allowCustomValue",required:!1,type:{name:"boolean"}},allowEmptyValue:{defaultValue:{value:"false"},description:"If true, empty value will be passed to onChange callback otherwise using empty value\nwill work as canceling and using the previous value",name:"allowEmptyValue",required:!1,type:{name:"boolean"}},placeholder:{defaultValue:{value:""},description:"",name:"placeholder",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Segment/SegmentSelect.tsx#SegmentSelect"]={docgenInfo:SegmentSelect.__docgenInfo,name:"SegmentSelect",path:"src/components/Segment/SegmentSelect.tsx#SegmentSelect"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Segment/styles.ts":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{m:function(){return getSegmentStyles}});var _emotion_css__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/@emotion/css/dist/emotion-css.esm.js");const getSegmentStyles=theme=>{const palette="v1"in theme?theme.v1.palette:theme.palette;return{segment:(0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.AH)({cursor:"pointer",width:"auto"}),queryPlaceholder:(0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.AH)({color:palette.gray2}),disabled:(0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.AH)({cursor:"not-allowed",opacity:.65,boxShadow:"none"})}}},"./src/components/Segment/useExpandableLabel.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{Q:function(){return useExpandableLabel}});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react/index.js"),_themes_ThemeContext__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/themes/ThemeContext.tsx"),_Button_Button__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/Button/Button.tsx");const useExpandableLabel=(initialExpanded,onExpandedChange)=>{const ref=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),buttonStyles=(0,_themes_ThemeContext__WEBPACK_IMPORTED_MODULE_2__.of)(_Button_Button__WEBPACK_IMPORTED_MODULE_3__.my),[expanded,setExpanded]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(initialExpanded),[width,setWidth]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0),setExpandedWrapper=expanded=>{setExpanded(expanded),onExpandedChange&&onExpandedChange(expanded)};return[({Component:Component,onClick:onClick,disabled:disabled})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("button",{type:"button",className:buttonStyles,ref:ref,disabled:disabled,onClick:()=>{setExpandedWrapper(!0),ref&&ref.current&&setWidth(1.25*ref.current.clientWidth),onClick?.()},children:Component}),width,expanded,setExpandedWrapper]}},"./src/components/Segment/SegmentAsync.story.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ArrayOptions:function(){return ArrayOptions},ArrayOptionsWithPrimitiveValue:function(){return ArrayOptionsWithPrimitiveValue},Basic:function(){return Basic},CustomLabel:function(){return CustomLabel},CustomOptionsAllowed:function(){return CustomOptionsAllowed},CustomStateMessageHandler:function(){return CustomStateMessageHandler},GroupedArrayOptions:function(){return GroupedArrayOptions},HtmlAttributes:function(){return HtmlAttributes},default:function(){return SegmentAsync_story}});var jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),dist=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/index.mjs"),react=__webpack_require__("../../node_modules/react/index.js"),Icon=__webpack_require__("./src/components/Icon/Icon.tsx"),emotion_css_esm=__webpack_require__("../../node_modules/@emotion/css/dist/emotion-css.esm.js"),lodash=__webpack_require__("../../node_modules/lodash/lodash.js"),useAsyncFn=__webpack_require__("../../node_modules/react-use/esm/useAsyncFn.js"),i18n=__webpack_require__("../grafana-i18n/src/i18n.tsx"),ThemeContext=__webpack_require__("./src/themes/ThemeContext.tsx"),InlineLabel=__webpack_require__("./src/components/Forms/InlineLabel.tsx"),SegmentSelect=__webpack_require__("./src/components/Segment/SegmentSelect.tsx"),Segment_styles=__webpack_require__("./src/components/Segment/styles.ts"),useExpandableLabel=__webpack_require__("./src/components/Segment/useExpandableLabel.tsx");function SegmentAsync({value:value,onChange:onChange,loadOptions:loadOptions,reloadOptionsOnChange:reloadOptionsOnChange=!1,Component:Component,className:className,allowCustomValue:allowCustomValue,allowEmptyValue:allowEmptyValue,disabled:disabled,placeholder:placeholder,inputMinWidth:inputMinWidth,inputPlaceholder:inputPlaceholder,autofocus:autofocus=!1,onExpandedChange:onExpandedChange,noOptionMessageHandler:noOptionMessageHandler=mapStateToNoOptionsMessage,...rest}){const[state,fetchOptions]=(0,useAsyncFn.A)(loadOptions,[loadOptions]),[Label,labelWidth,expanded,setExpanded]=(0,useExpandableLabel.Q)(autofocus,onExpandedChange),width=inputMinWidth?Math.max(inputMinWidth,labelWidth):labelWidth,styles=(0,ThemeContext.of)(Segment_styles.m);if(!expanded){const label=(0,lodash.isObject)(value)?value.label:value,labelAsString=null!=label?String(label):void 0;return(0,jsx_runtime.jsx)(Label,{onClick:reloadOptionsOnChange?void 0:fetchOptions,disabled:disabled,Component:Component||(0,jsx_runtime.jsx)(InlineLabel.c,{className:(0,emotion_css_esm.cx)(styles.segment,{[styles.queryPlaceholder]:void 0!==placeholder&&!value,[styles.disabled]:disabled},className),children:labelAsString||placeholder})})}return(0,jsx_runtime.jsx)(SegmentSelect.a,{...rest,value:value&&!(0,lodash.isObject)(value)?{value:value}:value,placeholder:inputPlaceholder,options:state.value??[],loadOptions:reloadOptionsOnChange?fetchOptions:void 0,width:width,noOptionsMessage:noOptionMessageHandler(state),allowCustomValue:allowCustomValue,allowEmptyValue:allowEmptyValue,onClickOutside:()=>{setExpanded(!1)},onChange:item=>{setExpanded(!1),onChange(item)}})}function mapStateToNoOptionsMessage(state){return state.loading?(0,i18n.t)("grafana-ui.segment-async.loading","Loading options..."):state.error?(0,i18n.t)("grafana-ui.segment-async.error","Failed to load options"):(0,i18n.t)("grafana-ui.segment-async.no-options","No options found")}try{SegmentAsync.displayName="SegmentAsync",SegmentAsync.__docgenInfo={description:"",displayName:"SegmentAsync",props:{value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"T | SelectableValue<T>"}},loadOptions:{defaultValue:null,description:"",name:"loadOptions",required:!0,type:{name:"(query?: string | undefined) => Promise<SelectableValue<T>[]>"}},reloadOptionsOnChange:{defaultValue:{value:"false"},description:"If true options will be reloaded when user changes the value in the input,\notherwise, options will be loaded when the segment is clicked",name:"reloadOptionsOnChange",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(item: SelectableValue<T>) => void"}},noOptionMessageHandler:{defaultValue:null,description:"",name:"noOptionMessageHandler",required:!1,type:{name:"((state: AsyncState<SelectableValue<T>[]>) => string)"}},inputMinWidth:{defaultValue:null,description:"",name:"inputMinWidth",required:!1,type:{name:"number"}},Component:{defaultValue:null,description:"",name:"Component",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>>"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},allowCustomValue:{defaultValue:null,description:"",name:"allowCustomValue",required:!1,type:{name:"boolean"}},placeholder:{defaultValue:null,description:"",name:"placeholder",required:!1,type:{name:"string"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},onExpandedChange:{defaultValue:null,description:"",name:"onExpandedChange",required:!1,type:{name:"((expanded: boolean) => void)"}},autofocus:{defaultValue:{value:"false"},description:"",name:"autofocus",required:!1,type:{name:"boolean"}},allowEmptyValue:{defaultValue:null,description:"",name:"allowEmptyValue",required:!1,type:{name:"boolean"}},inputPlaceholder:{defaultValue:null,description:"",name:"inputPlaceholder",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Segment/SegmentAsync.tsx#SegmentAsync"]={docgenInfo:SegmentAsync.__docgenInfo,name:"SegmentAsync",path:"src/components/Segment/SegmentAsync.tsx#SegmentAsync"})}catch(__react_docgen_typescript_loader_error){}var SegmentSection=__webpack_require__("./src/components/Segment/SegmentSection.tsx");const AddButton=(0,jsx_runtime.jsx)("span",{className:"gf-form-label query-part",children:(0,jsx_runtime.jsx)(Icon.I,{name:"plus"})}),toOption=value=>({label:String(value),value:value}),options=["Option1","Option2","OptionWithLooongLabel","Option4"].map(toOption),loadOptions=options=>new Promise((res=>setTimeout((()=>res(options)),2e3))),loadOptionsErr=()=>new Promise(((_,rej)=>setTimeout((()=>rej(Error("Could not find data"))),2e3))),SegmentFrame=({loadOptions:loadOptions,children:children})=>(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsxs)(SegmentSection.L,{label:"Segment",children:[children,(0,jsx_runtime.jsx)(SegmentAsync,{Component:AddButton,onChange:value=>(0,dist.XI)("New value added")(value),loadOptions:()=>loadOptions(options),inputMinWidth:100})]})}),ArrayOptions=()=>{const[value,setValue]=(0,react.useState)(options[0]);return(0,jsx_runtime.jsx)(SegmentFrame,{loadOptions:()=>loadOptions(options),children:(0,jsx_runtime.jsx)(SegmentAsync,{value:value,loadOptions:()=>loadOptions(options),onChange:item=>{setValue(item),(0,dist.XI)("Segment value changed")(item.value)}})})},meta={title:"Inputs/SegmentAsync",component:SegmentAsync},ArrayOptionsWithPrimitiveValue=()=>{const[value,setValue]=(0,react.useState)(options[0].value);return(0,jsx_runtime.jsx)(SegmentFrame,{loadOptions:()=>loadOptions(options),children:(0,jsx_runtime.jsx)(SegmentAsync,{value:value,loadOptions:()=>loadOptions(options),onChange:({value:value})=>{setValue(value),(0,dist.XI)("Segment value changed")(value)}})})},groupedOptions=[{label:"Names",options:["Jane","Tom","Lisa"].map(toOption)},{label:"Prime",options:[2,3,5,7,11,13].map(toOption)}],GroupedArrayOptions=()=>{const[value,setValue]=(0,react.useState)(groupedOptions[0].options[0]);return(0,jsx_runtime.jsx)(SegmentFrame,{loadOptions:()=>loadOptions(groupedOptions),children:(0,jsx_runtime.jsx)(SegmentAsync,{value:value,loadOptions:()=>loadOptions(groupedOptions),onChange:item=>{setValue(item),(0,dist.XI)("Segment value changed")(item.value)}})})},CustomOptionsAllowed=()=>{const[value,setValue]=(0,react.useState)(groupedOptions[0].options[0]);return(0,jsx_runtime.jsx)(SegmentFrame,{loadOptions:()=>loadOptions(groupedOptions),children:(0,jsx_runtime.jsx)(SegmentAsync,{allowCustomValue:!0,value:value,loadOptions:()=>loadOptions(options),onChange:item=>{setValue(item),(0,dist.XI)("Segment value changed")(item.value)}})})},CustomLabelComponent=({value:value})=>(0,jsx_runtime.jsxs)("div",{className:"gf-form-label",children:["custom(",String(value),")"]}),CustomLabel=()=>{const[value,setValue]=(0,react.useState)(groupedOptions[0].options[0].value);return(0,jsx_runtime.jsx)(SegmentFrame,{loadOptions:()=>loadOptions(groupedOptions),children:(0,jsx_runtime.jsx)(SegmentAsync,{Component:(0,jsx_runtime.jsx)(CustomLabelComponent,{value:value}),loadOptions:()=>loadOptions(groupedOptions),onChange:({value:value})=>{setValue(value),(0,dist.XI)("Segment value changed")(value)}})})},CustomStateMessageHandler=()=>{const stateToTextFunction=state=>state.loading?"You're going too fast for me, please wait...":state.error?"Outch ! We encountered an error...":Array.isArray(state.value)&&0!==state.value.length?"":"It is empty :)",[value,setValue]=(0,react.useState)(options[0].value);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(SegmentFrame,{loadOptions:()=>loadOptions(groupedOptions),children:(0,jsx_runtime.jsx)(SegmentAsync,{value:value,noOptionMessageHandler:stateToTextFunction,loadOptions:()=>loadOptions(groupedOptions),onChange:({value:value})=>{setValue(value),(0,dist.XI)("Segment value changed")(value)}})}),(0,jsx_runtime.jsx)(SegmentFrame,{loadOptions:()=>loadOptions([]),children:(0,jsx_runtime.jsx)(SegmentAsync,{value:value,noOptionMessageHandler:stateToTextFunction,loadOptions:()=>loadOptions([]),onChange:({value:value})=>{setValue(value),(0,dist.XI)("Segment value changed")(value)}})}),(0,jsx_runtime.jsx)(SegmentFrame,{loadOptions:()=>loadOptionsErr(),children:(0,jsx_runtime.jsx)(SegmentAsync,{value:value,noOptionMessageHandler:stateToTextFunction,loadOptions:()=>loadOptionsErr(),onChange:({value:value})=>{setValue(value),(0,dist.XI)("Segment value changed")(value)}})})]})},HtmlAttributes=()=>{const[value,setValue]=(0,react.useState)(options[0]);return(0,jsx_runtime.jsx)(SegmentFrame,{loadOptions:()=>loadOptions(options),children:(0,jsx_runtime.jsx)(SegmentAsync,{"data-testid":"segment-async-test",id:"segment-async",value:value,loadOptions:()=>loadOptions(options),onChange:item=>{setValue(item),(0,dist.XI)("Segment value changed")(item.value)}})})},Basic=args=>{const[value,setValue]=(0,react.useState)(args.value),props={...args,value:value,loadOptions:async(query="")=>{(0,dist.XI)("loadOptions fired")({query:query});const result=await loadOptions(options);return query?result.filter((data=>data.label?.includes(query))):loadOptions(options)},onChange:({value:value})=>{setValue(value),(0,dist.XI)("onChange fired")(value)},onExpandedChange:expanded=>(0,dist.XI)("onExpandedChange fired")({expanded:expanded}),noOptionMessageHandler:state=>((0,dist.XI)("noOptionMessageHandler fired")(state),state.loading?"Loading...":state.error?"Failed to load options":Array.isArray(state.value)&&0!==state.value.length?"":"No options found")};return(0,jsx_runtime.jsx)(SegmentSection.L,{label:"Segment:",children:(0,jsx_runtime.jsx)(SegmentAsync,{...props})})};Basic.parameters={controls:{exclude:["value","loadOptions","onChange","noOptionMessageHandler","Component","className","onExpandedChange"]}},Basic.args={inputMinWidth:0,allowCustomValue:!1,reloadOptionsOnChange:!1,placeholder:"Placeholder text",disabled:!1,autofocus:!1,allowEmptyValue:!1,inputPlaceholder:"Start typing..."};var SegmentAsync_story=meta;ArrayOptions.parameters={...ArrayOptions.parameters,docs:{...ArrayOptions.parameters?.docs,source:{originalSource:"() => {\n  const [value, setValue] = useState(options[0]);\n  return <SegmentFrame loadOptions={() => loadOptions(options)}>\n      <SegmentAsync value={value} loadOptions={() => loadOptions(options)} onChange={item => {\n      setValue(item);\n      action('Segment value changed')(item.value);\n    }} />\n    </SegmentFrame>;\n}",...ArrayOptions.parameters?.docs?.source}}},ArrayOptionsWithPrimitiveValue.parameters={...ArrayOptionsWithPrimitiveValue.parameters,docs:{...ArrayOptionsWithPrimitiveValue.parameters?.docs,source:{originalSource:"() => {\n  const [value, setValue] = useState(options[0].value);\n  return <SegmentFrame loadOptions={() => loadOptions(options)}>\n      <SegmentAsync value={value} loadOptions={() => loadOptions(options)} onChange={({\n      value\n    }) => {\n      setValue(value);\n      action('Segment value changed')(value);\n    }} />\n    </SegmentFrame>;\n}",...ArrayOptionsWithPrimitiveValue.parameters?.docs?.source}}},GroupedArrayOptions.parameters={...GroupedArrayOptions.parameters,docs:{...GroupedArrayOptions.parameters?.docs,source:{originalSource:"() => {\n  const [value, setValue] = useState(groupedOptions[0].options[0]);\n  return <SegmentFrame loadOptions={() => loadOptions(groupedOptions)}>\n      <SegmentAsync<string | number> value={value} loadOptions={() => loadOptions(groupedOptions)} onChange={item => {\n      setValue(item);\n      action('Segment value changed')(item.value);\n    }} />\n    </SegmentFrame>;\n}",...GroupedArrayOptions.parameters?.docs?.source}}},CustomOptionsAllowed.parameters={...CustomOptionsAllowed.parameters,docs:{...CustomOptionsAllowed.parameters?.docs,source:{originalSource:"() => {\n  const [value, setValue] = useState(groupedOptions[0].options[0]);\n  return <SegmentFrame loadOptions={() => loadOptions(groupedOptions)}>\n      <SegmentAsync allowCustomValue value={value} loadOptions={() => loadOptions(options)} onChange={item => {\n      setValue(item);\n      action('Segment value changed')(item.value);\n    }} />\n    </SegmentFrame>;\n}",...CustomOptionsAllowed.parameters?.docs?.source}}},CustomLabel.parameters={...CustomLabel.parameters,docs:{...CustomLabel.parameters?.docs,source:{originalSource:"() => {\n  const [value, setValue] = useState(groupedOptions[0].options[0].value);\n  return <SegmentFrame loadOptions={() => loadOptions(groupedOptions)}>\n      <SegmentAsync<string | number> Component={<CustomLabelComponent value={value} />} loadOptions={() => loadOptions(groupedOptions)} onChange={({\n      value\n    }) => {\n      setValue(value);\n      action('Segment value changed')(value);\n    }} />\n    </SegmentFrame>;\n}",...CustomLabel.parameters?.docs?.source}}},CustomStateMessageHandler.parameters={...CustomStateMessageHandler.parameters,docs:{...CustomStateMessageHandler.parameters?.docs,source:{originalSource:"() => {\n  const stateToTextFunction = (state: AsyncState<Array<SelectableValue<string>>>) => {\n    if (state.loading) {\n      return \"You're going too fast for me, please wait...\";\n    }\n    if (state.error) {\n      return 'Outch ! We encountered an error...';\n    }\n    if (!Array.isArray(state.value) || state.value.length === 0) {\n      return 'It is empty :)';\n    }\n    return '';\n  };\n  const [value, setValue] = useState(options[0].value);\n  return <>\n      <SegmentFrame loadOptions={() => loadOptions(groupedOptions)}>\n        <SegmentAsync value={value} noOptionMessageHandler={stateToTextFunction} loadOptions={() => loadOptions(groupedOptions)} onChange={({\n        value\n      }) => {\n        setValue(value);\n        action('Segment value changed')(value);\n      }} />\n      </SegmentFrame>\n      <SegmentFrame loadOptions={() => loadOptions([])}>\n        <SegmentAsync value={value} noOptionMessageHandler={stateToTextFunction} loadOptions={() => loadOptions([])} onChange={({\n        value\n      }) => {\n        setValue(value);\n        action('Segment value changed')(value);\n      }} />\n      </SegmentFrame>\n      <SegmentFrame loadOptions={() => loadOptionsErr()}>\n        <SegmentAsync value={value} noOptionMessageHandler={stateToTextFunction} loadOptions={() => loadOptionsErr()} onChange={({\n        value\n      }) => {\n        setValue(value);\n        action('Segment value changed')(value);\n      }} />\n      </SegmentFrame>\n    </>;\n}",...CustomStateMessageHandler.parameters?.docs?.source}}},HtmlAttributes.parameters={...HtmlAttributes.parameters,docs:{...HtmlAttributes.parameters?.docs,source:{originalSource:'() => {\n  const [value, setValue] = useState(options[0]);\n  return <SegmentFrame loadOptions={() => loadOptions(options)}>\n      <SegmentAsync data-testid="segment-async-test" id="segment-async" value={value} loadOptions={() => loadOptions(options)} onChange={item => {\n      setValue(item);\n      action(\'Segment value changed\')(item.value);\n    }} />\n    </SegmentFrame>;\n}',...HtmlAttributes.parameters?.docs?.source}}},Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:"(args: SegmentAsyncProps<string>) => {\n  const [value, setValue] = useState(args.value);\n  const props: SegmentAsyncProps<string> = {\n    ...args,\n    value,\n    loadOptions: async (query = '') => {\n      action('loadOptions fired')({\n        query\n      });\n      const result = await loadOptions(options);\n      if (query) {\n        return result.filter(data => data.label?.includes(query));\n      }\n      return loadOptions(options);\n    },\n    onChange: ({\n      value\n    }) => {\n      setValue(value);\n      action('onChange fired')(value);\n    },\n    onExpandedChange: expanded => action('onExpandedChange fired')({\n      expanded\n    }),\n    noOptionMessageHandler: state => {\n      action('noOptionMessageHandler fired')(state);\n      if (state.loading) {\n        return 'Loading...';\n      }\n      if (state.error) {\n        return 'Failed to load options';\n      }\n      if (!Array.isArray(state.value) || state.value.length === 0) {\n        return 'No options found';\n      }\n      return '';\n    }\n  };\n  return <SegmentSection label=\"Segment:\">\n      <SegmentAsync<string> {...props} />\n    </SegmentSection>;\n}",...Basic.parameters?.docs?.source}}}}}]);