"use strict";(self.webpackChunk_grafana_ui=self.webpackChunk_grafana_ui||[]).push([[3909],{"./src/components/Alert/Alert.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{F:function(){return Alert}});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/jsx-runtime.js"),_emotion_css__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/@emotion/css/dist/emotion-css.esm.js"),react__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/react/index.js"),_grafana_e2e_selectors__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("../grafana-e2e-selectors/src/selectors/index.ts"),_grafana_i18n__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("../grafana-i18n/src/i18n.tsx"),_themes_ThemeContext__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/themes/ThemeContext.tsx"),_Button_Button__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./src/components/Button/Button.tsx"),_Icon_Icon__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./src/components/Icon/Icon.tsx"),_Layout_Box_Box__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/components/Layout/Box/Box.tsx"),_Text_Text__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./src/components/Text/Text.tsx");const Alert=react__WEBPACK_IMPORTED_MODULE_2__.forwardRef((({title:title,onRemove:onRemove,children:children,buttonContent:buttonContent,elevated:elevated,bottomSpacing:bottomSpacing,topSpacing:topSpacing,className:className,severity:severity="error",...restProps},ref)=>{const theme=(0,_themes_ThemeContext__WEBPACK_IMPORTED_MODULE_3__.$j)(),hasTitle=Boolean(title),styles=getStyles(theme,severity,hasTitle,elevated,bottomSpacing,topSpacing),role=restProps.role||{error:"alert",warning:"alert",info:"status",success:"status"}[severity],ariaLabel=restProps["aria-label"]||title,closeLabel=(0,_grafana_i18n__WEBPACK_IMPORTED_MODULE_4__.t)("grafana-ui.alert.close-button","Close alert");return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{ref:ref,className:(0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.cx)(styles.wrapper,className),role:role,"aria-label":ariaLabel,...restProps,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_Layout_Box_Box__WEBPACK_IMPORTED_MODULE_5__.a,{"data-testid":_grafana_e2e_selectors__WEBPACK_IMPORTED_MODULE_6__.Tp.components.Alert.alertV2(severity),display:"flex",backgroundColor:severity,borderRadius:"default",paddingY:1,paddingX:2,borderStyle:"solid",borderColor:severity,alignItems:"stretch",boxShadow:elevated?"z3":void 0,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Layout_Box_Box__WEBPACK_IMPORTED_MODULE_5__.a,{paddingTop:1,paddingRight:2,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:styles.icon,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Icon_Icon__WEBPACK_IMPORTED_MODULE_7__.I,{size:"xl",name:getIconFromSeverity(severity)})})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_Layout_Box_Box__WEBPACK_IMPORTED_MODULE_5__.a,{paddingY:1,grow:1,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Text_Text__WEBPACK_IMPORTED_MODULE_8__.E,{color:"primary",weight:"medium",children:title}),children&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:styles.content,children:children})]}),onRemove&&!buttonContent&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:styles.close,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Button_Button__WEBPACK_IMPORTED_MODULE_9__.$n,{"aria-label":closeLabel,icon:"times",onClick:onRemove,type:"button",fill:"text",variant:"secondary"})}),onRemove&&buttonContent&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Layout_Box_Box__WEBPACK_IMPORTED_MODULE_5__.a,{marginLeft:1,display:"flex",alignItems:"center",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Button_Button__WEBPACK_IMPORTED_MODULE_9__.$n,{"aria-label":closeLabel,variant:"secondary",onClick:onRemove,type:"button",children:buttonContent})})]})})}));Alert.displayName="Alert";const getIconFromSeverity=severity=>{switch(severity){case"error":return"exclamation-circle";case"warning":return"exclamation-triangle";case"info":return"info-circle";case"success":return"check"}},getStyles=(theme,severity,hasTitle,elevated,bottomSpacing,topSpacing)=>{const color=theme.colors[severity];return{wrapper:(0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.AH)({flexGrow:1,marginBottom:theme.spacing(bottomSpacing??2),marginTop:theme.spacing(topSpacing??0),position:"relative","&:before":{content:'""',position:"absolute",top:0,left:0,bottom:0,right:0,background:theme.colors.background.primary,zIndex:-1}}),icon:(0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.AH)({color:color.text,position:"relative",top:"-1px"}),content:(0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.AH)({color:theme.colors.text.primary,paddingTop:hasTitle?theme.spacing(.5):0,maxHeight:"50vh",overflowY:"auto"}),close:(0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.AH)({position:"relative",color:theme.colors.text.secondary,background:"none",display:"flex",top:"-6px",right:"-14px"})}};try{Alert.displayName="Alert",Alert.__docgenInfo={description:"",displayName:"Alert",props:{title:{defaultValue:null,description:"",name:"title",required:!0,type:{name:"string"}},onRemove:{defaultValue:null,description:"On click handler for alert button, mostly used for dismissing the alert",name:"onRemove",required:!1,type:{name:"((event: MouseEvent<Element, MouseEvent>) => void)"}},severity:{defaultValue:{value:"error"},description:"",name:"severity",required:!1,type:{name:"enum",value:[{value:'"info"'},{value:'"success"'},{value:'"error"'},{value:'"warning"'}]}},elevated:{defaultValue:null,description:"",name:"elevated",required:!1,type:{name:"boolean"}},buttonContent:{defaultValue:null,description:"",name:"buttonContent",required:!1,type:{name:"ReactNode"}},bottomSpacing:{defaultValue:null,description:"",name:"bottomSpacing",required:!1,type:{name:"number"}},topSpacing:{defaultValue:null,description:"",name:"topSpacing",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Alert/Alert.tsx#Alert"]={docgenInfo:Alert.__docgenInfo,name:"Alert",path:"src/components/Alert/Alert.tsx#Alert"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Select/mockOptions.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{Q:function(){return generateOptions},W:function(){return generateThousandsOfOptions}});var lodash__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/lodash/lodash.js");const generateOptions=(desc=!1)=>["Sharilyn Markowitz","Naomi Striplin","Beau Bevel","Garrett Starkes","Hildegarde Pedro","Gudrun Seyler","Eboni Raines","Hye Felix","Chau Brito","Heidy Zook","Karima Husain","Virgil Mckinny","Kaley Dodrill","Sharan Ruf","Edgar Loveland","Judie Sanger","Season Bundrick","Ok Vicente","Garry Spitz","Han Harnish","A very long value that is very long and takes up a lot of space and should be truncated preferrably if it does not fit"].map((name=>({value:(0,lodash__WEBPACK_IMPORTED_MODULE_0__.kebabCase)(name),label:name,description:desc?`This is a description of ${name}`:void 0}))),generateThousandsOfOptions=()=>new Array(1e4).fill(null).map(((_,index)=>({value:String(index),label:"Option "+index,description:"This is option number "+index})));try{generateOptions.displayName="generateOptions",generateOptions.__docgenInfo={description:"",displayName:"generateOptions",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Select/mockOptions.tsx#generateOptions"]={docgenInfo:generateOptions.__docgenInfo,name:"generateOptions",path:"src/components/Select/mockOptions.tsx#generateOptions"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Select/Select.story.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AutoMenuPlacement:function(){return AutoMenuPlacement},Basic:function(){return Basic},BasicSelectAsync:function(){return BasicSelectAsync},BasicSelectPlainValue:function(){return BasicSelectPlainValue},BasicVirtualizedList:function(){return BasicVirtualizedList},CustomValueCreation:function(){return CustomValueCreation},MultiPlainValue:function(){return MultiPlainValue},MultiSelectAsync:function(){return MultiSelectAsync},MultiSelectBasic:function(){return MultiSelectBasic},MultiSelectBasicWithSelectAll:function(){return MultiSelectBasicWithSelectAll},MultiSelectWithOptionGroups:function(){return MultiSelectWithOptionGroups},MultiSelectWithOptionGroupsVirtualized:function(){return MultiSelectWithOptionGroupsVirtualized},SelectWithOptionDescriptions:function(){return SelectWithOptionDescriptions},WidthAuto:function(){return WidthAuto},default:function(){return Select_story}});var jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),enums=__webpack_require__("../../node_modules/@popperjs/core/lib/enums.js"),dist=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/index.mjs"),chance=__webpack_require__("../../node_modules/chance/chance.js"),chance_default=__webpack_require__.n(chance),react=__webpack_require__("../../node_modules/react/index.js"),icon=__webpack_require__("../grafana-data/src/types/icon.ts"),types_icon=__webpack_require__("./src/types/icon.ts"),Alert=__webpack_require__("./src/components/Alert/Alert.tsx"),Icon=__webpack_require__("./src/components/Icon/Icon.tsx"),Select=__webpack_require__("./src/components/Select/Select.tsx"),lib=__webpack_require__("../../node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js"),blocks_dist=__webpack_require__("../../node_modules/@storybook/addon-docs/node_modules/@storybook/blocks/dist/index.mjs");function _createMdxContent(props){const _components={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,lib.R)(),...props.components};return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(_components.h1,{id:"select",children:"Select"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Select is the base for every component on this page. The approaches mentioned here are also applicable to ",(0,jsx_runtime.jsx)(_components.code,{children:"AsyncSelect"}),", ",(0,jsx_runtime.jsx)(_components.code,{children:"MultiSelect"}),", ",(0,jsx_runtime.jsx)(_components.code,{children:"AsyncMultiSelect"}),"."]}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"select-variants",children:"Select variants"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Select is an input with the ability to search and create new values. It should be used when you have a list of options. If the data has a tree structure, consider using ",(0,jsx_runtime.jsx)(_components.code,{children:"Cascader"})," instead.\nSelect has some features:"]}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsx)(_components.li,{children:"Search a list of values"}),"\n",(0,jsx_runtime.jsx)(_components.li,{children:"Select multiple values"}),"\n",(0,jsx_runtime.jsx)(_components.li,{children:"Select from async data"}),"\n",(0,jsx_runtime.jsx)(_components.li,{children:"Create custom values that aren't in the list"}),"\n"]}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"options-format",children:"Options format"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"There are four properties for each option:"}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"label"})," - Text that is visible in the menu."]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"value"})," - Could be anything, but is usually a string. Used to identify what is ",(0,jsx_runtime.jsx)(_components.strong,{children:"actually"})," selected."]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"description"})," - Longer description that describes the choice. Use this sparingly."]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"imgUrl"})," - URL to an image. Use this when an image or icon provides more context for the option."]}),"\n"]}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"const options = [\n  { label: 'Basic option', value: 0 },\n  { label: 'Option with description', value: 1, description: 'this is a description' },\n  {\n    label: 'Option with description and image',\n    value: 2,\n    description: 'This is a very elaborate description, describing all the wonders in the world.',\n    imgUrl: 'https://placekitten.com/40/40',\n  },\n];\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"creatable-option",children:"Creatable option"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Creatable option is used when you want to be able to add a custom value to the list of options. ",(0,jsx_runtime.jsx)(_components.code,{children:"allowCustomValue"})," needs to be true and you must handle the value creation with ",(0,jsx_runtime.jsx)(_components.code,{children:"onCreateOption"}),"."]}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:'import { Select } from "@grafana/ui";\n\nconst SelectComponent = () => {\n  const [value, setValue] = useState<SelectableValue<number>>();\n\n  return (\n    <Select\n      options={option}\n      value={value}\n      allowCustomValue\n      onCreateOption={customValue => {\n        setValue(customValue);\n      }}\n    />\n  );\n};\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"resetting-selected-value-from-outside-the-component",children:"Resetting selected value from outside the component"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["If you want to reset the selected value from outside the component, e.g. if there are two Select components that should be in sync, you can set the dependent Select value to ",(0,jsx_runtime.jsx)(_components.code,{children:"null"})," in the ",(0,jsx_runtime.jsx)(_components.code,{children:"onChange"})," handler of the first Select component."]}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-tsx",children:"import { useState } from 'react';\nimport { Select } from '@grafana/ui';\n\nconst SelectComponent = () => {\n  const [person, setPerson] = useState<string | undefined>('');\n  const [team, setTeam] = useState<string | undefined | null>('');\n\n  return (\n    <form>\n      <Select\n        onChange={({ value }) => {\n          setPerson(value);\n          setTeam(null); // Setting the team to null will reset the selected value in the team Select\n        }}\n        options={[\n          {\n            value: 'option1',\n            label: 'Option 1',\n          },\n          {\n            value: 'option2',\n            label: 'Option 2',\n          },\n        ]}\n        value={person}\n        backspaceRemovesValue\n      />\n      <Select\n        onChange={({ value }) => setTeam(value)}\n        options={[\n          {\n            value: 'team1',\n            label: 'Team 1',\n          },\n          {\n            value: 'team',\n            label: 'Team 2',\n          },\n        ]}\n        value={team}\n      />\n    </form>\n  );\n};\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"asyncselect",children:"AsyncSelect"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Like regular Select, but handles fetching options asynchronously. Use the ",(0,jsx_runtime.jsx)(_components.code,{children:"loadOptions"})," prop for the async function that loads the options. If ",(0,jsx_runtime.jsx)(_components.code,{children:"defaultOptions"})," is set to ",(0,jsx_runtime.jsx)(_components.code,{children:"true"}),", ",(0,jsx_runtime.jsx)(_components.code,{children:"loadOptions"})," will be called when the component is mounted."]}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"\nimport { AsyncSelect } from '@grafana/ui';\n\nconst basicSelectAsync = () => {\n  const [value, setValue] = useState<SelectableValue<string>>();\n\n  return (\n    <AsyncSelect\n      loadOptions={loadAsyncOptions}\n      defaultOptions\n      value={value}\n      onChange={v => {\n        setValue(v);\n      }}\n    />\n  );\n};\n"})}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Where the async function could look like this:"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-tsx",children:"const loadAsyncOptions = () => {\n  return new Promise<Array<SelectableValue<string>>>((resolve) => {\n    setTimeout(() => {\n      resolve(options);\n    }, 2000);\n  });\n};\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"multiselect",children:"MultiSelect"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Possible to Select multiple values at the same time."}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-tsx",children:"import { MultiSelect } from '@grafana/ui';\n\nconst multiSelect = () => {\n  const [value, setValue] = useState<Array<SelectableValue<string>>>([]);\n\n  return (\n    <>\n      <MultiSelect\n        options={options}\n        value={value}\n        onChange={(v) => {\n          setValue(v);\n        }}\n      />\n    </>\n  );\n};\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"asyncmultiselect",children:"AsyncMultiSelect"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Like MultiSelect but handles data asynchronously with the ",(0,jsx_runtime.jsx)(_components.code,{children:"loadOptions"})," prop."]}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"testing",children:"Testing"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Using React Testing Library, you can select the ",(0,jsx_runtime.jsx)(_components.code,{children:"<Select />"})," using its matching label, such as the label assigned with the ",(0,jsx_runtime.jsx)(_components.code,{children:"inputId"})," prop. Use the ",(0,jsx_runtime.jsx)(_components.code,{children:"react-select-event"})," package to select values from the options."]}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-tsx",children:"import { render, screen } from '@testing-library/react';\nimport selectEvent from 'react-select-event';\nimport { Select } from '@grafana/ui';\n\nit('should call onChange', () => {\n  const onChange = jest.fn();\n\n  render(\n    <>\n      <label htmlFor=\"my-select\">My select</label>\n      <Select onChange={onChange} options={options} inputId=\"my-select\" />\n    </>\n  );\n\n  const selectEl = screen.getByLabelText('My select');\n  expect(selectEl).toBeInTheDocument();\n\n  await selectEvent.select(selectEl, 'Option 2', { container: document.body });\n  expect(onChange).toHaveBeenCalledWith({\n    label: 'Option 2',\n    value: 2,\n  });\n});\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"props",children:"Props"}),"\n",(0,jsx_runtime.jsx)(blocks_dist.ov,{of:Select.l6})]})}var mockOptions=__webpack_require__("./src/components/Select/mockOptions.tsx");const Select_story_chance=new(chance_default()),manyGroupedOptions=[{label:"Foo",value:"1"},{label:"Animals",options:new Array(100).fill(0).map(((_,i)=>{const animal=Select_story_chance.animal();return{label:animal,value:animal}}))},{label:"People",options:new Array(100).fill(0).map(((_,i)=>{const person=Select_story_chance.name();return{label:person,value:person}}))},{label:"Bar",value:"3"}],meta={title:"Inputs/Deprecated/Select",component:Select.l6,parameters:{docs:{page:function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.R)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}},controls:{exclude:["getOptionValue","getOptionLabel","formatCreateLabel","filterOption","className","components","defaultValue","id","inputId","onBlur","onChange","onCloseMenu","onCreateOption","onInputChange","onKeyDown","onOpenMenu","prefix","renderControl","options","isOptionDisabled","aria-label","noOptionsMessage","menuPosition","isValidNewOption","value"]}},args:{width:0,disabled:!1,isLoading:!1,invalid:!1,icon:"arrow-down"},argTypes:{width:{control:{type:"range",min:1,max:100}},icon:{control:{type:"select",options:(0,types_icon.GO)()}}},decorators:[function DeprecatedDecorator(Story){return(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsxs)(Alert.F,{title:"Deprecated!",severity:"warning",children:["The Select component is deprecated.",(0,jsx_runtime.jsx)("br",{}),"Use Combobox instead - it supports most use cases, is performant by default, and can handle hundreds of thousands of options, and has a simpler API."]}),(0,jsx_runtime.jsx)(Story,{})]})}]},loadAsyncOptions=()=>new Promise((resolve=>{setTimeout((()=>{resolve((0,mockOptions.Q)())}),2e3)})),getPrefix=prefix=>(0,jsx_runtime.jsx)(Icon.I,{name:(0,icon.Uo)(prefix)??"question-circle"}),Basic=args=>{const[value,setValue]=(0,react.useState)();return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)(Select.l6,{options:(0,mockOptions.Q)(),value:value,onChange:v=>{setValue(v),(0,dist.XI)("onChange")(v)},...args})})},BasicVirtualizedList=args=>{const[value,setValue]=(0,react.useState)();return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)(Select.l6,{options:(0,mockOptions.W)(),virtualized:!0,value:value,onChange:v=>{setValue(v),(0,dist.XI)("onChange")(v)},...args})})},BasicSelectPlainValue=args=>{const[value,setValue]=(0,react.useState)();return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)(Select.l6,{options:(0,mockOptions.Q)(),value:value,onChange:v=>{setValue(v.value),(0,dist.XI)("onChange")(v)},prefix:getPrefix(args.icon),...args})})},SelectWithOptionDescriptions=args=>{const[value,setValue]=(0,react.useState)();return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)(Select.l6,{options:[{label:"Basic option",value:0},{label:"Option with description",value:1,description:"this is a description"},{label:"Option with description and image",value:2,description:"This is a very elaborate description, describing all the wonders in the world.",imgUrl:"https://placekitten.com/40/40"}],value:value,onChange:v=>{setValue(v.value),(0,dist.XI)("onChange")(v)},prefix:getPrefix(args.icon),...args})})},MultiPlainValue=args=>{const[value,setValue]=(0,react.useState)();return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)(Select.KF,{options:(0,mockOptions.Q)(),value:value,onChange:v=>{setValue(v.map((v=>v.value)))},prefix:getPrefix(args.icon),...args})})},MultiSelectWithOptionGroups=args=>{const[value,setValue]=(0,react.useState)();return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)(Select.KF,{options:[{label:"Foo",value:"1"},{label:"Colours",value:"2",options:[{label:"Blue",value:"5"},{label:"Red",value:"6"},{label:"Black",value:"7"},{label:"Yellow",value:"8"}]},{label:"Animals",value:"9",options:[{label:"Cat",value:"10"},{label:"Cow",value:"11"},{label:"Dog",value:"12"},{label:"Eagle",value:"13"}]},{label:"Bar",value:"3"}],value:value,onChange:v=>{setValue(v.map((v=>v.value))),(0,dist.XI)("onChange")(v)},prefix:getPrefix(args.icon),...args})})},MultiSelectWithOptionGroupsVirtualized=args=>{const[value,setValue]=(0,react.useState)();return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)(Select.KF,{options:manyGroupedOptions,virtualized:!0,value:value,onChange:v=>{setValue(v.map((v=>v.value))),(0,dist.XI)("onChange")(v)},prefix:getPrefix(args.icon),...args})})},MultiSelectBasic=args=>{const[value,setValue]=(0,react.useState)([]);return(0,jsx_runtime.jsx)("div",{style:{maxWidth:"450px"},children:(0,jsx_runtime.jsx)(Select.KF,{options:(0,mockOptions.Q)(),value:value,onChange:v=>{setValue(v),(0,dist.XI)("onChange")(v)},prefix:getPrefix(args.icon),...args})})};MultiSelectBasic.args={isClearable:!1,closeMenuOnSelect:!1,maxVisibleValues:5,noMultiValueWrap:!1};const MultiSelectBasicWithSelectAll=args=>{const[value,setValue]=(0,react.useState)([]);return(0,jsx_runtime.jsx)("div",{style:{maxWidth:"450px"},children:(0,jsx_runtime.jsx)(Select.KF,{options:(0,mockOptions.Q)(),value:value,toggleAllOptions:{enabled:!0},onChange:v=>{setValue(v),(0,dist.XI)("onChange")(v)},prefix:getPrefix(args.icon),...args})})};MultiSelectBasicWithSelectAll.args={isClearable:!1,closeMenuOnSelect:!1,maxVisibleValues:5,noMultiValueWrap:!1};const MultiSelectAsync=args=>{const[value,setValue]=(0,react.useState)();return(0,jsx_runtime.jsx)(Select.Iv,{loadOptions:loadAsyncOptions,defaultOptions:!0,value:value,onChange:v=>{setValue(v),(0,dist.XI)("onChange")(v)},prefix:getPrefix(args.icon),...args})};MultiSelectAsync.args={allowCustomValue:!1};const BasicSelectAsync=args=>{const[value,setValue]=(0,react.useState)();return(0,jsx_runtime.jsx)(Select.DW,{loadOptions:loadAsyncOptions,defaultOptions:!0,value:value,onChange:v=>{setValue(v),(0,dist.XI)("onChange")(v)},prefix:getPrefix(args.icon),...args})},AutoMenuPlacement=args=>{const[value,setValue]=(0,react.useState)();return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)("div",{style:{width:"100%",height:"calc(95vh - 118px)",display:"flex",alignItems:"flex-end"},children:(0,jsx_runtime.jsx)(Select.l6,{options:(0,mockOptions.Q)(),value:value,onChange:v=>{setValue(v),(0,dist.XI)("onChange")(v)},prefix:getPrefix(args.icon),...args})})})};AutoMenuPlacement.args={menuPlacement:enums.qZ};const WidthAuto=args=>{const[value,setValue]=(0,react.useState)();return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)("div",{style:{width:"100%"},children:(0,jsx_runtime.jsx)(Select.l6,{options:(0,mockOptions.Q)(),value:value,onChange:v=>{setValue(v),(0,dist.XI)("onChange")(v)},prefix:getPrefix(args.icon),...args,width:"auto"})})})},CustomValueCreation=args=>{const[value,setValue]=(0,react.useState)(),[customOptions,setCustomOptions]=(0,react.useState)([]),options=(0,mockOptions.Q)();return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)(Select.l6,{options:[...options,...customOptions],value:value,onChange:v=>{setValue(v),(0,dist.XI)("onChange")(v)},allowCustomValue:args.allowCustomValue,onCreateOption:v=>{const customValue={value:v,label:v};setCustomOptions([...customOptions,customValue]),setValue(customValue),(0,dist.XI)("onCreateOption")(v)},prefix:getPrefix(args.icon),...args})})};CustomValueCreation.args={allowCustomValue:!0};var Select_story=meta;Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:"args => {\n  const [value, setValue] = useState<SelectableValue<string>>();\n  return <>\n      <Select options={generateOptions()} value={value} onChange={v => {\n      setValue(v);\n      action('onChange')(v);\n    }} {...args} />\n    </>;\n}",...Basic.parameters?.docs?.source}}},BasicVirtualizedList.parameters={...BasicVirtualizedList.parameters,docs:{...BasicVirtualizedList.parameters?.docs,source:{originalSource:"args => {\n  const [value, setValue] = useState<SelectableValue<string>>();\n  return <>\n      <Select options={generateThousandsOfOptions()} virtualized value={value} onChange={v => {\n      setValue(v);\n      action('onChange')(v);\n    }} {...args} />\n    </>;\n}",...BasicVirtualizedList.parameters?.docs?.source}}},BasicSelectPlainValue.parameters={...BasicSelectPlainValue.parameters,docs:{...BasicSelectPlainValue.parameters?.docs,source:{originalSource:"args => {\n  const [value, setValue] = useState<string>();\n  return <>\n      <Select options={generateOptions()} value={value} onChange={v => {\n      setValue(v.value);\n      action('onChange')(v);\n    }} prefix={getPrefix(args.icon)} {...args} />\n    </>;\n}",...BasicSelectPlainValue.parameters?.docs?.source},description:{story:"Uses plain values instead of SelectableValue<T>",...BasicSelectPlainValue.parameters?.docs?.description}}},SelectWithOptionDescriptions.parameters={...SelectWithOptionDescriptions.parameters,docs:{...SelectWithOptionDescriptions.parameters?.docs,source:{originalSource:"args => {\n  // TODO this is not working with new Select\n\n  const [value, setValue] = useState<number>();\n  const options = [{\n    label: 'Basic option',\n    value: 0\n  }, {\n    label: 'Option with description',\n    value: 1,\n    description: 'this is a description'\n  }, {\n    label: 'Option with description and image',\n    value: 2,\n    description: 'This is a very elaborate description, describing all the wonders in the world.',\n    imgUrl: 'https://placekitten.com/40/40'\n  }];\n  return <>\n      <Select options={options} value={value} onChange={v => {\n      setValue(v.value);\n      action('onChange')(v);\n    }} prefix={getPrefix(args.icon)} {...args} />\n    </>;\n}",...SelectWithOptionDescriptions.parameters?.docs?.source},description:{story:"Uses plain values instead of SelectableValue<T>",...SelectWithOptionDescriptions.parameters?.docs?.description}}},MultiPlainValue.parameters={...MultiPlainValue.parameters,docs:{...MultiPlainValue.parameters?.docs,source:{originalSource:"args => {\n  const [value, setValue] = useState<string[]>();\n  return <>\n      <MultiSelect options={generateOptions()} value={value} onChange={v => {\n      setValue(v.map(v => v.value!));\n    }} prefix={getPrefix(args.icon)} {...args} />\n    </>;\n}",...MultiPlainValue.parameters?.docs?.source},description:{story:"Uses plain values instead of SelectableValue<T>",...MultiPlainValue.parameters?.docs?.description}}},MultiSelectWithOptionGroups.parameters={...MultiSelectWithOptionGroups.parameters,docs:{...MultiSelectWithOptionGroups.parameters?.docs,source:{originalSource:"args => {\n  const [value, setValue] = useState<string[]>();\n  return <>\n      <MultiSelect options={[{\n      label: 'Foo',\n      value: '1'\n    }, {\n      label: 'Colours',\n      value: '2',\n      options: [{\n        label: 'Blue',\n        value: '5'\n      }, {\n        label: 'Red',\n        value: '6'\n      }, {\n        label: 'Black',\n        value: '7'\n      }, {\n        label: 'Yellow',\n        value: '8'\n      }]\n    }, {\n      label: 'Animals',\n      value: '9',\n      options: [{\n        label: 'Cat',\n        value: '10'\n      }, {\n        label: 'Cow',\n        value: '11'\n      }, {\n        label: 'Dog',\n        value: '12'\n      }, {\n        label: 'Eagle',\n        value: '13'\n      }]\n    }, {\n      label: 'Bar',\n      value: '3'\n    }]} value={value} onChange={v => {\n      setValue(v.map(v => v.value!));\n      action('onChange')(v);\n    }} prefix={getPrefix(args.icon)} {...args} />\n    </>;\n}",...MultiSelectWithOptionGroups.parameters?.docs?.source}}},MultiSelectWithOptionGroupsVirtualized.parameters={...MultiSelectWithOptionGroupsVirtualized.parameters,docs:{...MultiSelectWithOptionGroupsVirtualized.parameters?.docs,source:{originalSource:"args => {\n  const [value, setValue] = useState<string[]>();\n  return <>\n      <MultiSelect options={manyGroupedOptions} virtualized value={value} onChange={v => {\n      setValue(v.map(v => v.value!));\n      action('onChange')(v);\n    }} prefix={getPrefix(args.icon)} {...args} />\n    </>;\n}",...MultiSelectWithOptionGroupsVirtualized.parameters?.docs?.source}}},MultiSelectBasic.parameters={...MultiSelectBasic.parameters,docs:{...MultiSelectBasic.parameters?.docs,source:{originalSource:"args => {\n  const [value, setValue] = useState<Array<SelectableValue<string>>>([]);\n  return <div style={{\n    maxWidth: '450px'\n  }}>\n      <MultiSelect options={generateOptions()} value={value} onChange={v => {\n      setValue(v);\n      action('onChange')(v);\n    }} prefix={getPrefix(args.icon)} {...args} />\n    </div>;\n}",...MultiSelectBasic.parameters?.docs?.source}}},MultiSelectBasicWithSelectAll.parameters={...MultiSelectBasicWithSelectAll.parameters,docs:{...MultiSelectBasicWithSelectAll.parameters?.docs,source:{originalSource:"args => {\n  const [value, setValue] = useState<Array<SelectableValue<string>>>([]);\n  return <div style={{\n    maxWidth: '450px'\n  }}>\n      <MultiSelect options={generateOptions()} value={value} toggleAllOptions={{\n      enabled: true\n    }} onChange={v => {\n      setValue(v);\n      action('onChange')(v);\n    }} prefix={getPrefix(args.icon)} {...args} />\n    </div>;\n}",...MultiSelectBasicWithSelectAll.parameters?.docs?.source}}},MultiSelectAsync.parameters={...MultiSelectAsync.parameters,docs:{...MultiSelectAsync.parameters?.docs,source:{originalSource:"args => {\n  const [value, setValue] = useState<Array<SelectableValue<string>>>();\n  return <AsyncMultiSelect loadOptions={loadAsyncOptions} defaultOptions value={value} onChange={v => {\n    setValue(v);\n    action('onChange')(v);\n  }} prefix={getPrefix(args.icon)} {...args} />;\n}",...MultiSelectAsync.parameters?.docs?.source}}},BasicSelectAsync.parameters={...BasicSelectAsync.parameters,docs:{...BasicSelectAsync.parameters?.docs,source:{originalSource:"args => {\n  const [value, setValue] = useState<SelectableValue<string>>();\n  return <AsyncSelect loadOptions={loadAsyncOptions} defaultOptions value={value} onChange={v => {\n    setValue(v);\n    action('onChange')(v);\n  }} prefix={getPrefix(args.icon)} {...args} />;\n}",...BasicSelectAsync.parameters?.docs?.source}}},AutoMenuPlacement.parameters={...AutoMenuPlacement.parameters,docs:{...AutoMenuPlacement.parameters?.docs,source:{originalSource:"args => {\n  const [value, setValue] = useState<SelectableValue<string>>();\n  return <>\n      <div style={{\n      width: '100%',\n      height: 'calc(95vh - 118px)',\n      display: 'flex',\n      alignItems: 'flex-end'\n    }}>\n        <Select options={generateOptions()} value={value} onChange={v => {\n        setValue(v);\n        action('onChange')(v);\n      }} prefix={getPrefix(args.icon)} {...args} />\n      </div>\n    </>;\n}",...AutoMenuPlacement.parameters?.docs?.source}}},WidthAuto.parameters={...WidthAuto.parameters,docs:{...WidthAuto.parameters?.docs,source:{originalSource:"args => {\n  const [value, setValue] = useState<SelectableValue<string>>();\n  return <>\n      <div style={{\n      width: '100%'\n    }}>\n        <Select options={generateOptions()} value={value} onChange={v => {\n        setValue(v);\n        action('onChange')(v);\n      }} prefix={getPrefix(args.icon)} {...args} width=\"auto\" />\n      </div>\n    </>;\n}",...WidthAuto.parameters?.docs?.source}}},CustomValueCreation.parameters={...CustomValueCreation.parameters,docs:{...CustomValueCreation.parameters?.docs,source:{originalSource:"args => {\n  const [value, setValue] = useState<SelectableValue<string>>();\n  const [customOptions, setCustomOptions] = useState<Array<SelectableValue<string>>>([]);\n  const options = generateOptions();\n  return <>\n      <Select options={[...options, ...customOptions]} value={value} onChange={v => {\n      setValue(v);\n      action('onChange')(v);\n    }} allowCustomValue={args.allowCustomValue} onCreateOption={v => {\n      const customValue: SelectableValue<string> = {\n        value: v,\n        label: v\n      };\n      setCustomOptions([...customOptions, customValue]);\n      setValue(customValue);\n      action('onCreateOption')(v);\n    }} prefix={getPrefix(args.icon)} {...args} />\n    </>;\n}",...CustomValueCreation.parameters?.docs?.source}}};try{BasicSelectPlainValue.displayName="BasicSelectPlainValue",BasicSelectPlainValue.__docgenInfo={description:"Uses plain values instead of SelectableValue<T>",displayName:"BasicSelectPlainValue",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Select/Select.story.tsx#BasicSelectPlainValue"]={docgenInfo:BasicSelectPlainValue.__docgenInfo,name:"BasicSelectPlainValue",path:"src/components/Select/Select.story.tsx#BasicSelectPlainValue"})}catch(__react_docgen_typescript_loader_error){}try{SelectWithOptionDescriptions.displayName="SelectWithOptionDescriptions",SelectWithOptionDescriptions.__docgenInfo={description:"Uses plain values instead of SelectableValue<T>",displayName:"SelectWithOptionDescriptions",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Select/Select.story.tsx#SelectWithOptionDescriptions"]={docgenInfo:SelectWithOptionDescriptions.__docgenInfo,name:"SelectWithOptionDescriptions",path:"src/components/Select/Select.story.tsx#SelectWithOptionDescriptions"})}catch(__react_docgen_typescript_loader_error){}try{MultiPlainValue.displayName="MultiPlainValue",MultiPlainValue.__docgenInfo={description:"Uses plain values instead of SelectableValue<T>",displayName:"MultiPlainValue",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Select/Select.story.tsx#MultiPlainValue"]={docgenInfo:MultiPlainValue.__docgenInfo,name:"MultiPlainValue",path:"src/components/Select/Select.story.tsx#MultiPlainValue"})}catch(__react_docgen_typescript_loader_error){}}}]);