"use strict";(self.webpackChunk_grafana_ui=self.webpackChunk_grafana_ui||[]).push([[2670],{"./src/components/DateTimePickers/DatePicker/DatePicker.story.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:function(){return Basic},default:function(){return DatePicker_story}});var jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),react=__webpack_require__("../../node_modules/react/index.js"),Button=__webpack_require__("./src/components/Button/Button.tsx"),DatePicker=__webpack_require__("./src/components/DateTimePickers/DatePicker/DatePicker.tsx"),lib=__webpack_require__("../../node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("../../node_modules/@storybook/addon-docs/node_modules/@storybook/blocks/dist/index.mjs");function _createMdxContent(props){const _components={code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",...(0,lib.R)(),...props.components};return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(_components.h1,{id:"datepicker",children:"DatePicker"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"A component with a calendar view for selecting a date."}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"usage",children:"Usage"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-tsx",children:"import { useState } from 'react';\nimport { DatePicker, Button } from '@grafana/ui';\n\nconst [date, setDate] = useState<Date>(new Date());\nconst [open, setOpen] = useState(false);\n\nreturn (\n  <>\n    <Button onClick={() => setOpen(true)}>Show Calendar</Button>\n    <DatePicker isOpen={open} value={date} onChange={(newDate) => setDate(newDate)} onClose={() => setOpen(false)} />\n  </>\n);\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"props",children:"Props"}),"\n",(0,jsx_runtime.jsx)(dist.ov,{of:DatePicker.l})]})}const meta={title:"Date time pickers/DatePicker",component:DatePicker.l,argTypes:{minDate:{control:"date"}},parameters:{docs:{page:function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.R)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}},controls:{exclude:["onChange","onClose","value","isOpen"]}}},Basic=args=>{const[date,setDate]=(0,react.useState)(new Date),[open,setOpen]=(0,react.useState)(!1);return void 0!==args?.minDate&&(args.minDate=new Date(args.minDate)),args={...args,isOpen:open,value:date,onChange:newDate=>setDate(newDate),onClose:()=>setOpen(!1)},(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(Button.$n,{onClick:()=>setOpen(!0),children:"Show Calendar"}),(0,jsx_runtime.jsx)(DatePicker.l,{...args})]})};var DatePicker_story=meta;Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:"(args: DatePickerProps) => {\n  const [date, setDate] = useState<Date>(new Date());\n  const [open, setOpen] = useState(false);\n  if (args?.minDate !== undefined) {\n    args.minDate = new Date(args.minDate);\n  }\n  args = {\n    ...args,\n    isOpen: open,\n    value: date,\n    onChange: newDate => setDate(newDate),\n    onClose: () => setOpen(false)\n  };\n  return <>\n      <Button onClick={() => setOpen(true)}>Show Calendar</Button>\n      <DatePicker {...args} />\n    </>;\n}",...Basic.parameters?.docs?.source}}};try{Basic.displayName="Basic",Basic.__docgenInfo={description:"",displayName:"Basic",props:{isOpen:{defaultValue:null,description:"",name:"isOpen",required:!1,type:{name:"boolean"}},onClose:{defaultValue:null,description:"",name:"onClose",required:!0,type:{name:"() => void"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(value: Date) => void"}},value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"Date"}},minDate:{defaultValue:null,description:"",name:"minDate",required:!1,type:{name:"Date"}},maxDate:{defaultValue:null,description:"",name:"maxDate",required:!1,type:{name:"Date"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/DateTimePickers/DatePicker/DatePicker.story.tsx#Basic"]={docgenInfo:Basic.__docgenInfo,name:"Basic",path:"src/components/DateTimePickers/DatePicker/DatePicker.story.tsx#Basic"})}catch(__react_docgen_typescript_loader_error){}}}]);