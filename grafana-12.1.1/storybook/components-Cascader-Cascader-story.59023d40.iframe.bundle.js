"use strict";(self.webpackChunk_grafana_ui=self.webpackChunk_grafana_ui||[]).push([[3277],{"../../node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{R:function(){return useMDXComponents},x:function(){return MDXProvider}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js");const emptyComponents={},MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents);function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((function(){return"function"==typeof components?components(contextComponents):{...contextComponents,...components}}),[contextComponents,components])}function MDXProvider(properties){let allComponents;return allComponents=properties.disableParentContext?"function"==typeof properties.components?properties.components(emptyComponents):properties.components||emptyComponents:useMDXComponents(properties.components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},properties.children)}},"./src/components/Cascader/Cascader.story.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Simple:function(){return Simple},WithCustomValue:function(){return WithCustomValue},WithDisplayAllSelectedLevels:function(){return WithDisplayAllSelectedLevels},WithInitialValue:function(){return WithInitialValue},WithOptionsStateUpdate:function(){return WithOptionsStateUpdate},default:function(){return Cascader_story}});var jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),react=__webpack_require__("../../node_modules/react/index.js"),Cascader=__webpack_require__("./src/components/Cascader/Cascader.tsx"),lib=__webpack_require__("../../node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("../../node_modules/@storybook/addon-docs/node_modules/@storybook/blocks/dist/index.mjs");function _createMdxContent(props){const _components={code:"code",h1:"h1",p:"p",...(0,lib.R)(),...props.components};return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.W8,{title:"MDX|Cascader",component:Cascader.v}),"\n",(0,jsx_runtime.jsx)(_components.h1,{id:"cascader",children:"Cascader"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["The cascader component is a ",(0,jsx_runtime.jsx)(_components.code,{children:"Select"})," with a cascading flyout menu. When you have lots of options in your select, they can be hard to navigate from a regular dropdown list. In that case you can use the cascader to organize your options into groups hierarchically. Just like in the ",(0,jsx_runtime.jsx)(_components.code,{children:"Select"})," component, the cascader input doubles as a search field to quickly jump to a selection without navigating the list."]}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["You can either use the ",(0,jsx_runtime.jsx)(_components.code,{children:"Simple"})," cascader component for an empty input as default state or use the ",(0,jsx_runtime.jsx)(_components.code,{children:"initialValue"})," or ",(0,jsx_runtime.jsx)(_components.code,{children:"allowCustomValue"})," fields to pre-fill your cascader. Initial value means that one of the options from your cascaded list is pre-selected. Custom value means that apart from existing options from the list, your users can add custom values to the list by typing them in the ",(0,jsx_runtime.jsx)(_components.code,{children:"Select"})," input."]}),"\n",(0,jsx_runtime.jsx)(dist.ov,{of:Cascader.v})]})}const onSelect=val=>console.log(val),options=[{label:"First",value:"1",items:[{label:"Second",value:"2"},{label:"Third",value:"3"},{label:"Fourth",value:"4"}]},{label:"FirstFirst",value:"5"}],meta={title:"Inputs/Cascader",component:Cascader.v,parameters:{docs:{page:function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.R)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}},controls:{exclude:["placeholder","initialValue","changeOnSelect","onSelect","loadData","onChange","onPopupVisibleChange","formatCreateLabel"]}},args:{onSelect:onSelect,options:options},argTypes:{width:{control:{type:"range",min:0,max:70}}}},Template=args=>(0,jsx_runtime.jsx)(Cascader.v,{...args}),Simple=Template.bind({});Simple.args={separator:""};const WithInitialValue=Template.bind({});WithInitialValue.args={initialValue:"3"};const WithCustomValue=Template.bind({});WithCustomValue.args={initialValue:"Custom Initial Value",allowCustomValue:!0,formatCreateLabel:val=>"Custom Label"+val};const WithDisplayAllSelectedLevels=Template.bind({});WithDisplayAllSelectedLevels.args={displayAllSelectedLevels:!0,separator:","};const WithOptionsStateUpdate=()=>{const[updatedOptions,setOptions]=(0,react.useState)([{label:"Initial state option",value:"initial"}]);return setTimeout((()=>setOptions(options)),2e3),(0,jsx_runtime.jsx)(Cascader.v,{options:updatedOptions,onSelect:onSelect})};var Cascader_story=meta;Simple.parameters={...Simple.parameters,docs:{...Simple.parameters?.docs,source:{originalSource:"args => <Cascader {...args} />",...Simple.parameters?.docs?.source}}},WithInitialValue.parameters={...WithInitialValue.parameters,docs:{...WithInitialValue.parameters?.docs,source:{originalSource:"args => <Cascader {...args} />",...WithInitialValue.parameters?.docs?.source}}},WithCustomValue.parameters={...WithCustomValue.parameters,docs:{...WithCustomValue.parameters?.docs,source:{originalSource:"args => <Cascader {...args} />",...WithCustomValue.parameters?.docs?.source}}},WithDisplayAllSelectedLevels.parameters={...WithDisplayAllSelectedLevels.parameters,docs:{...WithDisplayAllSelectedLevels.parameters?.docs,source:{originalSource:"args => <Cascader {...args} />",...WithDisplayAllSelectedLevels.parameters?.docs?.source}}},WithOptionsStateUpdate.parameters={...WithOptionsStateUpdate.parameters,docs:{...WithOptionsStateUpdate.parameters?.docs,source:{originalSource:"() => {\n  const [updatedOptions, setOptions] = useState<CascaderOption[]>([{\n    label: 'Initial state option',\n    value: 'initial'\n  }]);\n  setTimeout(() => setOptions(options), 2000);\n  return <Cascader options={updatedOptions} onSelect={onSelect} />;\n}",...WithOptionsStateUpdate.parameters?.docs?.source}}}}}]);