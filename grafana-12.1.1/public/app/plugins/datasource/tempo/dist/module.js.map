{"version":3,"file":"module.js","mappings":"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AkB,cAClBC,GAAmB,eACnBC,GAAyB,qBACzBC,GAAyB,qBACzBC,GAA0B,sBAC1BC,GAAyB,qBACzBC,GAA0B,sBAC1BC,GAA0B,sBAC1BC,GAA2B,uBAC3BC,GAAwB,oBACxBC,GAAyB,qBACzBC,GAAkB,cAClBC,GAAmB,eACnBC,GAAsB,kBACtBC,GAAuB,mBACvBC,GAAc,UACdC,GAAqB,iBACrBC,GAAc,UACdC,GAAiB,aACjBC,GAAkB,cAClBC,GAA8B,0BAC9BC,GAA8B,0BAC9BC,GAAsB,kBACtBC,GAA2B,uBAC3BC,GAA2B,uBAC3BC,GAAoB,gBACpBC,GAA2B,uBAC3BC,GAA8B,0BAC9BC,GAAkC,8BAClCC,GAAmB,eACnBC,GAAwB,oBACxBC,GAA0B,sBAC1BC,GAAsB,kBACtBC,GAAyB,qBACzBC,GAA6B,yBAC7BC,GAA4B,wBAC5BC,GAA6B,yBAC7BC,GAAqB,iBACrBC,GAAwB,oBACxBC,GAA4B,wBAgiBrBC,GACCrF,EAAe,CACzBI,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,wcCltBG,SAASE,GAAsBzJ,GACpC,MAAM,MAAEY,EAAK,MAAEC,GAajB,SAA6Bb,GAC3B,MAAMY,EAAgB,GAChBC,EAAgB,GAEhB6I,EAAO,IAAIpJ,EAAAA,cAAwBN,GAEnC2J,EAwKR,SAA2BD,GACzB,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","sources":["webpack://tempo/webpack/runtime/load script","webpack://tempo/../../../../../node_modules/react-use/lib/useAsync.js","webpack://tempo/../../../../../node_modules/react-use/lib/useAsyncFn.js","webpack://tempo/../../../../../node_modules/react-use/lib/useMountedState.js","webpack://tempo/../../../../../node_modules/react/cjs/react-jsx-runtime.production.min.js","webpack://tempo/../../../../../node_modules/react/jsx-runtime.js","webpack://tempo/../../../../../node_modules/semver/classes/comparator.js","webpack://tempo/../../../../../node_modules/semver/classes/range.js","webpack://tempo/../../../../../node_modules/semver/classes/semver.js","webpack://tempo/../../../../../node_modules/semver/functions/clean.js","webpack://tempo/../../../../../node_modules/semver/functions/cmp.js","webpack://tempo/../../../../../node_modules/semver/functions/coerce.js","webpack://tempo/../../../../../node_modules/semver/functions/compare-build.js","webpack://tempo/../../../../../node_modules/semver/functions/compare-loose.js","webpack://tempo/../../../../../node_modules/semver/functions/compare.js","webpack://tempo/../../../../../node_modules/semver/functions/diff.js","webpack://tempo/../../../../../node_modules/semver/functions/eq.js","webpack://tempo/../../../../../node_modules/semver/functions/gt.js","webpack://tempo/../../../../../node_modules/semver/functions/gte.js","webpack://tempo/../../../../../node_modules/semver/functions/inc.js","webpack://tempo/../../../../../node_modules/semver/functions/lt.js","webpack://tempo/../../../../../node_modules/semver/functions/lte.js","webpack://tempo/../../../../../node_modules/semver/functions/major.js","webpack://tempo/../../../../../node_modules/semver/functions/minor.js","webpack://tempo/../../../../../node_modules/semver/functions/neq.js","webpack://tempo/../../../../../node_modules/semver/functions/parse.js","webpack://tempo/../../../../../node_modules/semver/functions/patch.js","webpack://tempo/../../../../../node_modules/semver/functions/prerelease.js","webpack://tempo/../../../../../node_modules/semver/functions/rcompare.js","webpack://tempo/../../../../../node_modules/semver/functions/rsort.js","webpack://tempo/../../../../../node_modules/semver/functions/satisfies.js","webpack://tempo/../../../../../node_modules/semver/functions/sort.js","webpack://tempo/../../../../../node_modules/semver/functions/valid.js","webpack://tempo/../../../../../node_modules/semver/index.js","webpack://tempo/../../../../../node_modules/semver/internal/constants.js","webpack://tempo/../../../../../node_modules/semver/internal/debug.js","webpack://tempo/../../../../../node_modules/semver/internal/identifiers.js","webpack://tempo/../../../../../node_modules/semver/internal/lrucache.js","webpack://tempo/../../../../../node_modules/semver/internal/parse-options.js","webpack://tempo/../../../../../node_modules/semver/internal/re.js","webpack://tempo/../../../../../node_modules/semver/ranges/gtr.js","webpack://tempo/../../../../../node_modules/semver/ranges/intersects.js","webpack://tempo/../../../../../node_modules/semver/ranges/ltr.js","webpack://tempo/../../../../../node_modules/semver/ranges/max-satisfying.js","webpack://tempo/../../../../../node_modules/semver/ranges/min-satisfying.js","webpack://tempo/../../../../../node_modules/semver/ranges/min-version.js","webpack://tempo/../../../../../node_modules/semver/ranges/outside.js","webpack://tempo/../../../../../node_modules/semver/ranges/simplify.js","webpack://tempo/../../../../../node_modules/semver/ranges/subset.js","webpack://tempo/../../../../../node_modules/semver/ranges/to-comparators.js","webpack://tempo/../../../../../node_modules/semver/ranges/valid.js","webpack://tempo/../../../../../packages/grafana-o11y-ds-frontend/src/TemporaryAlert.tsx","webpack://tempo/../../../../../packages/grafana-schema/src/common/common.gen.ts","webpack://tempo/./SearchTraceQLEditor/SearchField.tsx","webpack://tempo/../../../../../node_modules/@grafana/plugin-ui/dist/esm/components/QueryEditor/AccessoryButton.js","webpack://tempo/./SearchTraceQLEditor/TagsInput.tsx","webpack://tempo/./SearchTraceQLEditor/utils.ts","webpack://tempo/./dataquery.gen.ts","webpack://tempo/./VariableQueryEditor.tsx","webpack://tempo/./graphTransform.ts","webpack://tempo/../../../../../node_modules/@opentelemetry/semantic-conventions/build/esm/internal/utils.js","webpack://tempo/../../../../../node_modules/@opentelemetry/semantic-conventions/build/esm/resource/SemanticResourceAttributes.js","webpack://tempo/../../../../../packages/grafana-o11y-ds-frontend/src/createNodeGraphFrames.ts","webpack://tempo/./resultTransformer.ts","webpack://tempo/../../../../../packages/grafana-o11y-ds-frontend/src/combineResponses.ts","webpack://tempo/./streaming.ts","webpack://tempo/./variables.ts","webpack://tempo/./datasource.ts","webpack://tempo/./language_provider.ts","webpack://tempo/./traceql/traceql.ts","webpack://tempo/./utils.ts","webpack://tempo/external amd \"@emotion/css\"","webpack://tempo/external amd \"@grafana/data\"","webpack://tempo/external amd \"@grafana/runtime\"","webpack://tempo/external amd \"@grafana/ui\"","webpack://tempo/external amd \"lodash\"","webpack://tempo/external amd \"module\"","webpack://tempo/external amd \"prismjs\"","webpack://tempo/external amd \"react\"","webpack://tempo/external amd \"rxjs\"","webpack://tempo/external amd \"rxjs/operators\"","webpack://tempo/../../../../../node_modules/tslib/tslib.es6.mjs","webpack://tempo/../../../../../node_modules/uuid/dist/esm-browser/native.js","webpack://tempo/../../../../../node_modules/uuid/dist/esm-browser/rng.js","webpack://tempo/../../../../../node_modules/uuid/dist/esm-browser/stringify.js","webpack://tempo/../../../../../node_modules/uuid/dist/esm-browser/v4.js","webpack://tempo/webpack/bootstrap","webpack://tempo/webpack/runtime/amd options","webpack://tempo/webpack/runtime/compat get default export","webpack://tempo/webpack/runtime/define property getters","webpack://tempo/webpack/runtime/ensure chunk","webpack://tempo/webpack/runtime/get javascript chunk filename","webpack://tempo/webpack/runtime/global","webpack://tempo/webpack/runtime/hasOwnProperty shorthand","webpack://tempo/webpack/runtime/make namespace object","webpack://tempo/webpack/runtime/publicPath","webpack://tempo/webpack/runtime/jsonp chunk loading","webpack://tempo/webpack/runtime/nonce","webpack://tempo/./node_modules/grafana-public-path.js","webpack://tempo/./tracking.ts","webpack://tempo/./module.tsx"],"sourcesContent":["var inProgress = {};\nvar dataWebpackPrefix = \"tempo:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar react_1 = require(\"react\");\nvar useAsyncFn_1 = tslib_1.__importDefault(require(\"./useAsyncFn\"));\nfunction useAsync(fn, deps) {\n    if (deps === void 0) { deps = []; }\n    var _a = useAsyncFn_1.default(fn, deps, {\n        loading: true,\n    }), state = _a[0], callback = _a[1];\n    react_1.useEffect(function () {\n        callback();\n    }, [callback]);\n    return state;\n}\nexports.default = useAsync;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar react_1 = require(\"react\");\nvar useMountedState_1 = tslib_1.__importDefault(require(\"./useMountedState\"));\nfunction useAsyncFn(fn, deps, initialState) {\n    if (deps === void 0) { deps = []; }\n    if (initialState === void 0) { initialState = { loading: false }; }\n    var lastCallId = react_1.useRef(0);\n    var isMounted = useMountedState_1.default();\n    var _a = react_1.useState(initialState), state = _a[0], set = _a[1];\n    var callback = react_1.useCallback(function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var callId = ++lastCallId.current;\n        if (!state.loading) {\n            set(function (prevState) { return (tslib_1.__assign(tslib_1.__assign({}, prevState), { loading: true })); });\n        }\n        return fn.apply(void 0, args).then(function (value) {\n            isMounted() && callId === lastCallId.current && set({ value: value, loading: false });\n            return value;\n        }, function (error) {\n            isMounted() && callId === lastCallId.current && set({ error: error, loading: false });\n            return error;\n        });\n    }, deps);\n    return [state, callback];\n}\nexports.default = useAsyncFn;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = require(\"react\");\nfunction useMountedState() {\n    var mountedRef = react_1.useRef(false);\n    var get = react_1.useCallback(function () { return mountedRef.current; }, []);\n    react_1.useEffect(function () {\n        mountedRef.current = true;\n        return function () {\n            mountedRef.current = false;\n        };\n    }, []);\n    return get;\n}\nexports.default = useMountedState;\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict'\n\nconst ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    comp = comp.trim().split(/\\s+/).join(' ')\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    options = parseOptions(options)\n\n    // Special cases where nothing can possibly be lower\n    if (options.includePrerelease &&\n      (this.value === '<0.0.0-0' || comp.value === '<0.0.0-0')) {\n      return false\n    }\n    if (!options.includePrerelease &&\n      (this.value.startsWith('<0.0.0') || comp.value.startsWith('<0.0.0'))) {\n      return false\n    }\n\n    // Same direction increasing (> or >=)\n    if (this.operator.startsWith('>') && comp.operator.startsWith('>')) {\n      return true\n    }\n    // Same direction decreasing (< or <=)\n    if (this.operator.startsWith('<') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // same SemVer and both sides are inclusive (<= or >=)\n    if (\n      (this.semver.version === comp.semver.version) &&\n      this.operator.includes('=') && comp.operator.includes('=')) {\n      return true\n    }\n    // opposite directions less than\n    if (cmp(this.semver, '<', comp.semver, options) &&\n      this.operator.startsWith('>') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // opposite directions greater than\n    if (cmp(this.semver, '>', comp.semver, options) &&\n      this.operator.startsWith('<') && comp.operator.startsWith('>')) {\n      return true\n    }\n    return false\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { safeRe: re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","'use strict'\n\nconst SPACE_CHARACTERS = /\\s+/g\n\n// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.formatted = undefined\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First reduce all whitespace as much as possible so we do not have to rely\n    // on potentially slow regexes like \\s*. This is then stored and used for\n    // future error messages as well.\n    this.raw = range.trim().replace(SPACE_CHARACTERS, ' ')\n\n    // First, split on ||\n    this.set = this.raw\n      .split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${this.raw}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0) {\n        this.set = [first]\n      } else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.formatted = undefined\n  }\n\n  get range () {\n    if (this.formatted === undefined) {\n      this.formatted = ''\n      for (let i = 0; i < this.set.length; i++) {\n        if (i > 0) {\n          this.formatted += '||'\n        }\n        const comps = this.set[i]\n        for (let k = 0; k < comps.length; k++) {\n          if (k > 0) {\n            this.formatted += ' '\n          }\n          this.formatted += comps[k].toString().trim()\n        }\n      }\n    }\n    return this.formatted\n  }\n\n  format () {\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts =\n      (this.options.includePrerelease && FLAG_INCLUDE_PRERELEASE) |\n      (this.options.loose && FLAG_LOOSE)\n    const memoKey = memoOpts + ':' + range\n    const cached = cache.get(memoKey)\n    if (cached) {\n      return cached\n    }\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range)\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n    debug('tilde trim', range)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n    debug('caret trim', range)\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    let rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n\n    if (loose) {\n      // in loose mode, throw out any that are not valid comparators\n      rangeList = rangeList.filter(comp => {\n        debug('loose invalid filter', comp, this.options)\n        return !!comp.match(re[t.COMPARATORLOOSE])\n      })\n    }\n    debug('range list', rangeList)\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const rangeMap = new Map()\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\n    for (const comp of comparators) {\n      if (isNullSet(comp)) {\n        return [comp]\n      }\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has('')) {\n      rangeMap.delete('')\n    }\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\n\nmodule.exports = Range\n\nconst LRU = require('../internal/lrucache')\nconst cache = new LRU()\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  safeRe: re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace,\n} = require('../internal/re')\nconst { FLAG_INCLUDE_PRERELEASE, FLAG_LOOSE } = require('../internal/constants')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\n// ~0.0.1 --> >=0.0.1 <0.1.0-0\nconst replaceTildes = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceTilde(c, options))\n    .join(' ')\n}\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\n// ^0.0.1 --> >=0.0.1 <0.0.2-0\n// ^0.1.0 --> >=0.1.0 <0.2.0-0\nconst replaceCarets = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceCaret(c, options))\n    .join(' ')\n}\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp\n    .split(/\\s+/)\n    .map((c) => replaceXRange(c, options))\n    .join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<') {\n        pr = '-0'\n      }\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp\n    .trim()\n    .replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp\n    .trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\n// TODO build?\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return `${from} ${to}`.trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","'use strict'\n\nconst debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n        version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid version. Must be a string. Got type \"${typeof version}\".`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('build compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier, identifierBase) {\n    if (release.startsWith('pre')) {\n      if (!identifier && identifierBase === false) {\n        throw new Error('invalid increment argument: identifier is empty')\n      }\n      // Avoid an invalid semver results\n      if (identifier) {\n        const match = `-${identifier}`.match(this.options.loose ? re[t.PRERELEASELOOSE] : re[t.PRERELEASE])\n        if (!match || match[1] !== identifier) {\n          throw new Error(`invalid identifier: ${identifier}`)\n        }\n      }\n    }\n\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier, identifierBase)\n        this.inc('pre', identifier, identifierBase)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier, identifierBase)\n        }\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'release':\n        if (this.prerelease.length === 0) {\n          throw new Error(`version ${this.raw} is not a prerelease`)\n        }\n        this.prerelease.length = 0\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre': {\n        const base = Number(identifierBase) ? 1 : 0\n\n        if (this.prerelease.length === 0) {\n          this.prerelease = [base]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            if (identifier === this.prerelease.join('.') && identifierBase === false) {\n              throw new Error('invalid increment argument: identifier already exists')\n            }\n            this.prerelease.push(base)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          let prerelease = [identifier, base]\n          if (identifierBase === false) {\n            prerelease = [identifier]\n          }\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = prerelease\n            }\n          } else {\n            this.prerelease = prerelease\n          }\n        }\n        break\n      }\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.raw = this.format()\n    if (this.build.length) {\n      this.raw += `+${this.build.join('.')}`\n    }\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","'use strict'\n\nconst parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","'use strict'\n\nconst eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(options.includePrerelease ? re[t.COERCEFULL] : re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    // With includePrerelease option set, '1.2.3.4-rc' wants to coerce '2.3.4-rc', not '2.3.4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    const coerceRtlRegex = options.includePrerelease ? re[t.COERCERTLFULL] : re[t.COERCERTL]\n    let next\n    while ((next = coerceRtlRegex.exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      coerceRtlRegex.lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    coerceRtlRegex.lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  const major = match[2]\n  const minor = match[3] || '0'\n  const patch = match[4] || '0'\n  const prerelease = options.includePrerelease && match[5] ? `-${match[5]}` : ''\n  const build = options.includePrerelease && match[6] ? `+${match[6]}` : ''\n\n  return parse(`${major}.${minor}.${patch}${prerelease}${build}`, options)\n}\nmodule.exports = coerce\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","'use strict'\n\nconst compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","'use strict'\n\nconst parse = require('./parse.js')\n\nconst diff = (version1, version2) => {\n  const v1 = parse(version1, null, true)\n  const v2 = parse(version2, null, true)\n  const comparison = v1.compare(v2)\n\n  if (comparison === 0) {\n    return null\n  }\n\n  const v1Higher = comparison > 0\n  const highVersion = v1Higher ? v1 : v2\n  const lowVersion = v1Higher ? v2 : v1\n  const highHasPre = !!highVersion.prerelease.length\n  const lowHasPre = !!lowVersion.prerelease.length\n\n  if (lowHasPre && !highHasPre) {\n    // Going from prerelease -> no prerelease requires some special casing\n\n    // If the low version has only a major, then it will always be a major\n    // Some examples:\n    // 1.0.0-1 -> 1.0.0\n    // 1.0.0-1 -> 1.1.1\n    // 1.0.0-1 -> 2.0.0\n    if (!lowVersion.patch && !lowVersion.minor) {\n      return 'major'\n    }\n\n    // If the main part has no difference\n    if (lowVersion.compareMain(highVersion) === 0) {\n      if (lowVersion.minor && !lowVersion.patch) {\n        return 'minor'\n      }\n      return 'patch'\n    }\n  }\n\n  // add the `pre` prefix if we are going to a prerelease version\n  const prefix = highHasPre ? 'pre' : ''\n\n  if (v1.major !== v2.major) {\n    return prefix + 'major'\n  }\n\n  if (v1.minor !== v2.minor) {\n    return prefix + 'minor'\n  }\n\n  if (v1.patch !== v2.patch) {\n    return prefix + 'patch'\n  }\n\n  // high and low are preleases\n  return 'prerelease'\n}\n\nmodule.exports = diff\n","'use strict'\n\nconst compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","'use strict'\n\nconst compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","'use strict'\n\nconst compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","'use strict'\n\nconst SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier, identifierBase) => {\n  if (typeof (options) === 'string') {\n    identifierBase = identifier\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(\n      version instanceof SemVer ? version.version : version,\n      options\n    ).inc(release, identifier, identifierBase).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","'use strict'\n\nconst compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","'use strict'\n\nconst compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","'use strict'\n\nconst compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst parse = (version, options, throwErrors = false) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    if (!throwErrors) {\n      return null\n    }\n    throw er\n  }\n}\n\nmodule.exports = parse\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","'use strict'\n\nconst parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","'use strict'\n\nconst compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","'use strict'\n\nconst compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","'use strict'\n\nconst Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","'use strict'\n\nconst compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","'use strict'\n\nconst parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","'use strict'\n\n// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nconst constants = require('./internal/constants')\nconst SemVer = require('./classes/semver')\nconst identifiers = require('./internal/identifiers')\nconst parse = require('./functions/parse')\nconst valid = require('./functions/valid')\nconst clean = require('./functions/clean')\nconst inc = require('./functions/inc')\nconst diff = require('./functions/diff')\nconst major = require('./functions/major')\nconst minor = require('./functions/minor')\nconst patch = require('./functions/patch')\nconst prerelease = require('./functions/prerelease')\nconst compare = require('./functions/compare')\nconst rcompare = require('./functions/rcompare')\nconst compareLoose = require('./functions/compare-loose')\nconst compareBuild = require('./functions/compare-build')\nconst sort = require('./functions/sort')\nconst rsort = require('./functions/rsort')\nconst gt = require('./functions/gt')\nconst lt = require('./functions/lt')\nconst eq = require('./functions/eq')\nconst neq = require('./functions/neq')\nconst gte = require('./functions/gte')\nconst lte = require('./functions/lte')\nconst cmp = require('./functions/cmp')\nconst coerce = require('./functions/coerce')\nconst Comparator = require('./classes/comparator')\nconst Range = require('./classes/range')\nconst satisfies = require('./functions/satisfies')\nconst toComparators = require('./ranges/to-comparators')\nconst maxSatisfying = require('./ranges/max-satisfying')\nconst minSatisfying = require('./ranges/min-satisfying')\nconst minVersion = require('./ranges/min-version')\nconst validRange = require('./ranges/valid')\nconst outside = require('./ranges/outside')\nconst gtr = require('./ranges/gtr')\nconst ltr = require('./ranges/ltr')\nconst intersects = require('./ranges/intersects')\nconst simplifyRange = require('./ranges/simplify')\nconst subset = require('./ranges/subset')\nmodule.exports = {\n  parse,\n  valid,\n  clean,\n  inc,\n  diff,\n  major,\n  minor,\n  patch,\n  prerelease,\n  compare,\n  rcompare,\n  compareLoose,\n  compareBuild,\n  sort,\n  rsort,\n  gt,\n  lt,\n  eq,\n  neq,\n  gte,\n  lte,\n  cmp,\n  coerce,\n  Comparator,\n  Range,\n  satisfies,\n  toComparators,\n  maxSatisfying,\n  minSatisfying,\n  minVersion,\n  validRange,\n  outside,\n  gtr,\n  ltr,\n  intersects,\n  simplifyRange,\n  subset,\n  SemVer,\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,\n  RELEASE_TYPES: constants.RELEASE_TYPES,\n  compareIdentifiers: identifiers.compareIdentifiers,\n  rcompareIdentifiers: identifiers.rcompareIdentifiers,\n}\n","'use strict'\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\n// Max safe length for a build identifier. The max length minus 6 characters for\n// the shortest version with a build 0.0.0+BUILD.\nconst MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6\n\nconst RELEASE_TYPES = [\n  'major',\n  'premajor',\n  'minor',\n  'preminor',\n  'patch',\n  'prepatch',\n  'prerelease',\n]\n\nmodule.exports = {\n  MAX_LENGTH,\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_SAFE_INTEGER,\n  RELEASE_TYPES,\n  SEMVER_SPEC_VERSION,\n  FLAG_INCLUDE_PRERELEASE: 0b001,\n  FLAG_LOOSE: 0b010,\n}\n","'use strict'\n\nconst debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","'use strict'\n\nconst numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n","'use strict'\n\nclass LRUCache {\n  constructor () {\n    this.max = 1000\n    this.map = new Map()\n  }\n\n  get (key) {\n    const value = this.map.get(key)\n    if (value === undefined) {\n      return undefined\n    } else {\n      // Remove the key from the map and add it to the end\n      this.map.delete(key)\n      this.map.set(key, value)\n      return value\n    }\n  }\n\n  delete (key) {\n    return this.map.delete(key)\n  }\n\n  set (key, value) {\n    const deleted = this.delete(key)\n\n    if (!deleted && value !== undefined) {\n      // If cache is full, delete the least recently used item\n      if (this.map.size >= this.max) {\n        const firstKey = this.map.keys().next().value\n        this.delete(firstKey)\n      }\n\n      this.map.set(key, value)\n    }\n\n    return this\n  }\n}\n\nmodule.exports = LRUCache\n","'use strict'\n\n// parse out just the options we care about\nconst looseOption = Object.freeze({ loose: true })\nconst emptyOpts = Object.freeze({ })\nconst parseOptions = options => {\n  if (!options) {\n    return emptyOpts\n  }\n\n  if (typeof options !== 'object') {\n    return looseOption\n  }\n\n  return options\n}\nmodule.exports = parseOptions\n","'use strict'\n\nconst {\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_LENGTH,\n} = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst safeRe = exports.safeRe = []\nconst src = exports.src = []\nconst safeSrc = exports.safeSrc = []\nconst t = exports.t = {}\nlet R = 0\n\nconst LETTERDASHNUMBER = '[a-zA-Z0-9-]'\n\n// Replace some greedy regex tokens to prevent regex dos issues. These regex are\n// used internally via the safeRe object since all inputs in this library get\n// normalized first to trim and collapse all extra whitespace. The original\n// regexes are exported for userland consumption and lower level usage. A\n// future breaking change could export the safer regex only with a note that\n// all input should have extra whitespace removed.\nconst safeRegexReplacements = [\n  ['\\\\s', 1],\n  ['\\\\d', MAX_LENGTH],\n  [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH],\n]\n\nconst makeSafeRegex = (value) => {\n  for (const [token, max] of safeRegexReplacements) {\n    value = value\n      .split(`${token}*`).join(`${token}{0,${max}}`)\n      .split(`${token}+`).join(`${token}{1,${max}}`)\n  }\n  return value\n}\n\nconst createToken = (name, value, isGlobal) => {\n  const safe = makeSafeRegex(value)\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  safeSrc[index] = safe\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n  safeRe[index] = new RegExp(safe, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '\\\\d+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', `\\\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`)\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n// Non-numberic identifiers include numberic identifiers but can be longer.\n// Therefore non-numberic identifiers must go first.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NONNUMERICIDENTIFIER]\n}|${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NONNUMERICIDENTIFIER]\n}|${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', `${LETTERDASHNUMBER}+`)\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCEPLAIN', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?`)\ncreateToken('COERCE', `${src[t.COERCEPLAIN]}(?:$|[^\\\\d])`)\ncreateToken('COERCEFULL', src[t.COERCEPLAIN] +\n              `(?:${src[t.PRERELEASE]})?` +\n              `(?:${src[t.BUILD]})?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\ncreateToken('COERCERTLFULL', src[t.COERCEFULL], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n","'use strict'\n\n// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","'use strict'\n\nconst Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2, options)\n}\nmodule.exports = intersects\n","'use strict'\n\nconst outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin))) {\n      minver = setMin\n    }\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst { ANY } = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","'use strict'\n\n// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let first = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!first) {\n        first = version\n      }\n    } else {\n      if (prev) {\n        set.push([first, prev])\n      }\n      prev = null\n      first = null\n    }\n  }\n  if (first) {\n    set.push([first, null])\n  }\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max) {\n      ranges.push(min)\n    } else if (!max && min === v[0]) {\n      ranges.push('*')\n    } else if (!max) {\n      ranges.push(`>=${min}`)\n    } else if (min === v[0]) {\n      ranges.push(`<=${max}`)\n    } else {\n      ranges.push(`${min} - ${max}`)\n    }\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","'use strict'\n\nconst Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom) {\n    return true\n  }\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub) {\n        continue OUTER\n      }\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull) {\n      return false\n    }\n  }\n  return true\n}\n\nconst minimumVersionWithPreRelease = [new Comparator('>=0.0.0-0')]\nconst minimumVersion = [new Comparator('>=0.0.0')]\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom) {\n    return true\n  }\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY) {\n      return true\n    } else if (options.includePrerelease) {\n      sub = minimumVersionWithPreRelease\n    } else {\n      sub = minimumVersion\n    }\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease) {\n      return true\n    } else {\n      dom = minimumVersion\n    }\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=') {\n      gt = higherGT(gt, c, options)\n    } else if (c.operator === '<' || c.operator === '<=') {\n      lt = lowerLT(lt, c, options)\n    } else {\n      eqSet.add(c.semver)\n    }\n  }\n\n  if (eqSet.size > 1) {\n    return null\n  }\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0) {\n      return null\n    } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {\n      return null\n    }\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options)) {\n      return null\n    }\n\n    if (lt && !satisfies(eq, String(lt), options)) {\n      return null\n    }\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt) {\n          return false\n        }\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt) {\n          return false\n        }\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0) {\n      return false\n    }\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0) {\n    return false\n  }\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0) {\n    return false\n  }\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre) {\n    return false\n  }\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","'use strict'\n\nconst Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","'use strict'\n\nconst Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n","import { css } from '@emotion/css';\nimport { useEffect, useState } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Alert, AlertVariant, useTheme2 } from '@grafana/ui';\n\nenum AlertTimeout {\n  Error = 7000,\n  Info = 3000,\n  Success = 3000,\n  Warning = 5000,\n}\n\nconst getStyle = (theme: GrafanaTheme2) => {\n  return css({\n    position: 'absolute',\n    zIndex: theme.zIndex.portal,\n    top: 0,\n    right: 10,\n  });\n};\n\nconst timeoutMap = {\n  ['error']: AlertTimeout.Error,\n  ['info']: AlertTimeout.Info,\n  ['success']: AlertTimeout.Success,\n  ['warning']: AlertTimeout.Warning,\n};\n\ntype AlertProps = {\n  // Severity of the alert. Controls the style of the alert (e.g., background color)\n  severity: AlertVariant;\n  // Displayed message. If set to empty string, the alert is not displayed\n  text: string;\n};\n\nexport const TemporaryAlert = (props: AlertProps) => {\n  const style = getStyle(useTheme2());\n  const [visible, setVisible] = useState(false);\n  const [timer, setTimer] = useState<NodeJS.Timeout>();\n\n  useEffect(() => {\n    return () => {\n      if (timer) {\n        clearTimeout(timer);\n      }\n    };\n  }, [timer]);\n\n  useEffect(() => {\n    if (props.text !== '') {\n      setVisible(true);\n\n      const timer = setTimeout(() => {\n        setVisible(false);\n      }, timeoutMap[props.severity]);\n      setTimer(timer);\n    }\n  }, [props.severity, props.text]);\n\n  return (\n    <>\n      {visible && (\n        <Alert\n          className={style}\n          elevated={true}\n          onRemove={() => setVisible(false)}\n          severity={props.severity}\n          title={props.text}\n        />\n      )}\n    </>\n  );\n};\n","// Code generated - EDITING IS FUTILE. DO NOT EDIT.\n//\n// Generated by:\n//     kinds/gen.go\n// Using jennies:\n//     CommonSchemaJenny\n//\n// Run 'make gen-cue' from repository root to regenerate.\n\n\n/**\n * A topic is attached to DataFrame metadata in query results.\n * This specifies where the data should be used.\n */\nexport enum DataTopic {\n  AlertStates = 'alertStates',\n  Annotations = 'annotations',\n  Series = 'series',\n}\n\n/**\n * TODO docs\n */\nexport interface DataSourceJsonData {\n  alertmanagerUid?: string;\n  authType?: string;\n  defaultRegion?: string;\n  manageAlerts?: boolean;\n  profile?: string;\n}\n\n/**\n * These are the common properties available to all queries in all datasources.\n * Specific implementations will *extend* this interface, adding the required\n * properties for the given context.\n */\nexport interface DataQuery {\n  /**\n   * For mixed data sources the selected datasource is on the query level.\n   * For non mixed scenarios this is undefined.\n   * TODO find a better way to do this ^ that's friendly to schema\n   * TODO this shouldn't be unknown but DataSourceRef | null\n   */\n  datasource?: unknown;\n  /**\n   * If hide is set to true, Grafana will filter out the response(s) associated with this query before returning it to the panel.\n   */\n  hide?: boolean;\n  /**\n   * Specify the query flavor\n   * TODO make this required and give it a default\n   */\n  queryType?: string;\n  /**\n   * A unique identifier for the query within the list of targets.\n   * In server side expressions, the refId is used as a variable name to identify results.\n   * By default, the UI will assign A->Z; however setting meaningful names may be useful.\n   */\n  refId: string;\n}\n\nexport interface BaseDimensionConfig {\n  /**\n   * fixed: T -- will be added by each element\n   */\n  field?: string;\n}\n\nexport enum ScaleDimensionMode {\n  Linear = 'linear',\n  Quad = 'quad',\n}\n\nexport interface ScaleDimensionConfig extends BaseDimensionConfig {\n  fixed?: number;\n  max: number;\n  min: number;\n  mode?: ScaleDimensionMode; // | *\"linear\"\n}\n\nexport interface ColorDimensionConfig extends BaseDimensionConfig {\n  fixed?: string; // color value\n}\n\nexport enum ScalarDimensionMode {\n  Clamped = 'clamped',\n  Mod = 'mod',\n}\n\nexport interface ScalarDimensionConfig extends BaseDimensionConfig {\n  fixed?: number;\n  max: number;\n  min: number;\n  mode?: ScalarDimensionMode;\n}\n\nexport enum TextDimensionMode {\n  Field = 'field',\n  Fixed = 'fixed',\n  Template = 'template',\n}\n\nexport interface TextDimensionConfig extends BaseDimensionConfig {\n  fixed?: string;\n  mode: TextDimensionMode;\n}\n\nexport enum ResourceDimensionMode {\n  Field = 'field',\n  Fixed = 'fixed',\n  Mapping = 'mapping',\n}\n\nexport interface MapLayerOptions {\n  /**\n   * Custom options depending on the type\n   */\n  config?: unknown;\n  /**\n   * Defines a frame MatcherConfig that may filter data for the given layer\n   */\n  filterData?: unknown;\n  /**\n   * Common method to define geometry fields\n   */\n  location?: FrameGeometrySource;\n  /**\n   * configured unique display name\n   */\n  name: string;\n  /**\n   * Common properties:\n   * https://openlayers.org/en/latest/apidoc/module-ol_layer_Base-BaseLayer.html\n   * Layer opacity (0-1)\n   */\n  opacity?: number;\n  /**\n   * Check tooltip (defaults to true)\n   */\n  tooltip?: boolean;\n  type: string;\n}\n\nexport enum FrameGeometrySourceMode {\n  Auto = 'auto',\n  Coords = 'coords',\n  Geohash = 'geohash',\n  Lookup = 'lookup',\n}\n\nexport enum HeatmapCalculationMode {\n  Count = 'count',\n  Size = 'size',\n}\n\nexport enum HeatmapCellLayout {\n  auto = 'auto',\n  ge = 'ge',\n  le = 'le',\n  unknown = 'unknown',\n}\n\nexport interface HeatmapCalculationBucketConfig {\n  /**\n   * Sets the bucket calculation mode\n   */\n  mode?: HeatmapCalculationMode;\n  /**\n   * Controls the scale of the buckets\n   */\n  scale?: ScaleDistributionConfig;\n  /**\n   * The number of buckets to use for the axis in the heatmap\n   */\n  value?: string;\n}\n\nexport enum LogsSortOrder {\n  Ascending = 'Ascending',\n  Descending = 'Descending',\n}\n\n/**\n * TODO docs\n */\nexport enum AxisPlacement {\n  Auto = 'auto',\n  Bottom = 'bottom',\n  Hidden = 'hidden',\n  Left = 'left',\n  Right = 'right',\n  Top = 'top',\n}\n\n/**\n * TODO docs\n */\nexport enum AxisColorMode {\n  Series = 'series',\n  Text = 'text',\n}\n\n/**\n * TODO docs\n */\nexport enum VisibilityMode {\n  Always = 'always',\n  Auto = 'auto',\n  Never = 'never',\n}\n\n/**\n * TODO docs\n */\nexport enum GraphDrawStyle {\n  Bars = 'bars',\n  Line = 'line',\n  Points = 'points',\n}\n\n/**\n * TODO docs\n */\nexport enum GraphTransform {\n  Constant = 'constant',\n  NegativeY = 'negative-Y',\n}\n\n/**\n * TODO docs\n */\nexport enum LineInterpolation {\n  Linear = 'linear',\n  Smooth = 'smooth',\n  StepAfter = 'stepAfter',\n  StepBefore = 'stepBefore',\n}\n\n/**\n * TODO docs\n */\nexport enum ScaleDistribution {\n  Linear = 'linear',\n  Log = 'log',\n  Ordinal = 'ordinal',\n  Symlog = 'symlog',\n}\n\n/**\n * TODO docs\n */\nexport enum GraphGradientMode {\n  Hue = 'hue',\n  None = 'none',\n  Opacity = 'opacity',\n  Scheme = 'scheme',\n}\n\n/**\n * TODO docs\n */\nexport enum StackingMode {\n  None = 'none',\n  Normal = 'normal',\n  Percent = 'percent',\n}\n\n/**\n * TODO docs\n */\nexport enum BarAlignment {\n  After = 1,\n  Before = -1,\n  Center = 0,\n}\n\n/**\n * TODO docs\n */\nexport enum ScaleOrientation {\n  Horizontal = 0,\n  Vertical = 1,\n}\n\n/**\n * TODO docs\n */\nexport enum ScaleDirection {\n  Down = -1,\n  Left = -1,\n  Right = 1,\n  Up = 1,\n}\n\n/**\n * TODO docs\n */\nexport interface LineStyle {\n  dash?: Array<number>;\n  fill?: ('solid' | 'dash' | 'dot' | 'square');\n}\n\nexport const defaultLineStyle: Partial<LineStyle> = {\n  dash: [],\n};\n\n/**\n * TODO docs\n */\nexport interface LineConfig {\n  lineColor?: string;\n  lineInterpolation?: LineInterpolation;\n  lineStyle?: LineStyle;\n  lineWidth?: number;\n  /**\n   * Indicate if null values should be treated as gaps or connected.\n   * When the value is a number, it represents the maximum delta in the\n   * X axis that should be considered connected.  For timeseries, this is milliseconds\n   */\n  spanNulls?: (boolean | number);\n}\n\n/**\n * TODO docs\n */\nexport interface BarConfig {\n  barAlignment?: BarAlignment;\n  barMaxWidth?: number;\n  barWidthFactor?: number;\n}\n\n/**\n * TODO docs\n */\nexport interface FillConfig {\n  fillBelowTo?: string;\n  fillColor?: string;\n  fillOpacity?: number;\n}\n\n/**\n * TODO docs\n */\nexport interface PointsConfig {\n  pointColor?: string;\n  pointSize?: number;\n  pointSymbol?: string;\n  showPoints?: VisibilityMode;\n}\n\n/**\n * TODO docs\n */\nexport interface ScaleDistributionConfig {\n  linearThreshold?: number;\n  log?: number;\n  type: ScaleDistribution;\n}\n\n/**\n * TODO docs\n */\nexport interface AxisConfig {\n  axisBorderShow?: boolean;\n  axisCenteredZero?: boolean;\n  axisColorMode?: AxisColorMode;\n  axisGridShow?: boolean;\n  axisLabel?: string;\n  axisPlacement?: AxisPlacement;\n  axisSoftMax?: number;\n  axisSoftMin?: number;\n  axisWidth?: number;\n  scaleDistribution?: ScaleDistributionConfig;\n}\n\n/**\n * TODO docs\n */\nexport interface HideSeriesConfig {\n  legend: boolean;\n  tooltip: boolean;\n  viz: boolean;\n}\n\n/**\n * TODO docs\n */\nexport interface StackingConfig {\n  group?: string;\n  mode?: StackingMode;\n}\n\n/**\n * TODO docs\n */\nexport interface StackableFieldConfig {\n  stacking?: StackingConfig;\n}\n\n/**\n * TODO docs\n */\nexport interface HideableFieldConfig {\n  hideFrom?: HideSeriesConfig;\n}\n\n/**\n * TODO docs\n */\nexport enum GraphThresholdsStyleMode {\n  Area = 'area',\n  Dashed = 'dashed',\n  DashedAndArea = 'dashed+area',\n  Line = 'line',\n  LineAndArea = 'line+area',\n  Off = 'off',\n  Series = 'series',\n}\n\n/**\n * TODO docs\n */\nexport interface GraphThresholdsStyleConfig {\n  mode: GraphThresholdsStyleMode;\n}\n\n/**\n * TODO docs\n */\nexport type LegendPlacement = ('bottom' | 'right');\n\n/**\n * TODO docs\n * Note: \"hidden\" needs to remain as an option for plugins compatibility\n */\nexport enum LegendDisplayMode {\n  Hidden = 'hidden',\n  List = 'list',\n  Table = 'table',\n}\n\n/**\n * TODO docs\n */\nexport interface SingleStatBaseOptions extends OptionsWithTextFormatting {\n  orientation: VizOrientation;\n  reduceOptions: ReduceDataOptions;\n}\n\n/**\n * TODO docs\n */\nexport interface ReduceDataOptions {\n  /**\n   * When !values, pick one value for the whole field\n   */\n  calcs: Array<string>;\n  /**\n   * Which fields to show.  By default this is only numeric fields\n   */\n  fields?: string;\n  /**\n   * if showing all values limit\n   */\n  limit?: number;\n  /**\n   * If true show each row value\n   */\n  values?: boolean;\n}\n\nexport const defaultReduceDataOptions: Partial<ReduceDataOptions> = {\n  calcs: [],\n};\n\n/**\n * TODO docs\n */\nexport enum VizOrientation {\n  Auto = 'auto',\n  Horizontal = 'horizontal',\n  Vertical = 'vertical',\n}\n\n/**\n * TODO docs\n */\nexport interface OptionsWithTooltip {\n  tooltip: VizTooltipOptions;\n}\n\n/**\n * TODO docs\n */\nexport interface OptionsWithLegend {\n  legend: VizLegendOptions;\n}\n\n/**\n * TODO docs\n */\nexport interface OptionsWithTimezones {\n  timezone?: Array<TimeZone>;\n}\n\nexport const defaultOptionsWithTimezones: Partial<OptionsWithTimezones> = {\n  timezone: [],\n};\n\n/**\n * TODO docs\n */\nexport interface OptionsWithTextFormatting {\n  text?: VizTextDisplayOptions;\n}\n\n/**\n * TODO docs\n */\nexport enum BigValueColorMode {\n  Background = 'background',\n  BackgroundSolid = 'background_solid',\n  None = 'none',\n  Value = 'value',\n}\n\n/**\n * TODO docs\n */\nexport enum BigValueGraphMode {\n  Area = 'area',\n  Line = 'line',\n  None = 'none',\n}\n\n/**\n * TODO docs\n */\nexport enum BigValueJustifyMode {\n  Auto = 'auto',\n  Center = 'center',\n}\n\n/**\n * TODO docs\n */\nexport enum BigValueTextMode {\n  Auto = 'auto',\n  Name = 'name',\n  None = 'none',\n  Value = 'value',\n  ValueAndName = 'value_and_name',\n}\n\n/**\n * TODO docs\n */\nexport enum PercentChangeColorMode {\n  Inverted = 'inverted',\n  SameAsValue = 'same_as_value',\n  Standard = 'standard',\n}\n\n/**\n * TODO -- should not be table specific!\n * TODO docs\n */\nexport type FieldTextAlignment = ('auto' | 'left' | 'right' | 'center');\n\n/**\n * Controls the value alignment in the TimelineChart component\n */\nexport type TimelineValueAlignment = ('center' | 'left' | 'right');\n\n/**\n * TODO docs\n */\nexport interface VizTextDisplayOptions {\n  /**\n   * Explicit percent text size\n   */\n  percentSize?: number;\n  /**\n   * Explicit title text size\n   */\n  titleSize?: number;\n  /**\n   * Explicit value text size\n   */\n  valueSize?: number;\n}\n\n/**\n * TODO docs\n */\nexport enum TooltipDisplayMode {\n  Multi = 'multi',\n  None = 'none',\n  Single = 'single',\n}\n\n/**\n * TODO docs\n */\nexport enum SortOrder {\n  Ascending = 'asc',\n  Descending = 'desc',\n  None = 'none',\n}\n\n/**\n * TODO docs\n */\nexport interface GraphFieldConfig extends LineConfig, FillConfig, PointsConfig, AxisConfig, BarConfig, StackableFieldConfig, HideableFieldConfig {\n  drawStyle?: GraphDrawStyle;\n  gradientMode?: GraphGradientMode;\n  insertNulls?: (boolean | number);\n  thresholdsStyle?: GraphThresholdsStyleConfig;\n  transform?: GraphTransform;\n}\n\n/**\n * TODO docs\n */\nexport interface VizLegendOptions {\n  asTable?: boolean;\n  calcs: Array<string>;\n  displayMode: LegendDisplayMode;\n  isVisible?: boolean;\n  placement: LegendPlacement;\n  showLegend: boolean;\n  sortBy?: string;\n  sortDesc?: boolean;\n  width?: number;\n}\n\nexport const defaultVizLegendOptions: Partial<VizLegendOptions> = {\n  calcs: [],\n};\n\n/**\n * Enum expressing the possible display modes\n * for the bar gauge component of Grafana UI\n */\nexport enum BarGaugeDisplayMode {\n  Basic = 'basic',\n  Gradient = 'gradient',\n  Lcd = 'lcd',\n}\n\n/**\n * Allows for the table cell gauge display type to set the gauge mode.\n */\nexport enum BarGaugeValueMode {\n  Color = 'color',\n  Hidden = 'hidden',\n  Text = 'text',\n}\n\n/**\n * Allows for the bar gauge name to be placed explicitly\n */\nexport enum BarGaugeNamePlacement {\n  Auto = 'auto',\n  Hidden = 'hidden',\n  Left = 'left',\n  Top = 'top',\n}\n\n/**\n * Allows for the bar gauge size to be set explicitly\n */\nexport enum BarGaugeSizing {\n  Auto = 'auto',\n  Manual = 'manual',\n}\n\n/**\n * TODO docs\n */\nexport interface VizTooltipOptions {\n  hideZeros?: boolean;\n  maxHeight?: number;\n  maxWidth?: number;\n  mode: TooltipDisplayMode;\n  sort: SortOrder;\n}\n\nexport interface Labels {}\n\n/**\n * Internally, this is the \"type\" of cell that's being displayed\n * in the table such as colored text, JSON, gauge, etc.\n * The color-background-solid, gradient-gauge, and lcd-gauge\n * modes are deprecated in favor of new cell subOptions\n */\nexport enum TableCellDisplayMode {\n  Actions = 'actions',\n  Auto = 'auto',\n  BasicGauge = 'basic',\n  ColorBackground = 'color-background',\n  ColorBackgroundSolid = 'color-background-solid',\n  ColorText = 'color-text',\n  Custom = 'custom',\n  DataLinks = 'data-links',\n  Gauge = 'gauge',\n  GradientGauge = 'gradient-gauge',\n  Image = 'image',\n  JSONView = 'json-view',\n  LcdGauge = 'lcd-gauge',\n  Pill = 'pill',\n  Sparkline = 'sparkline',\n}\n\n/**\n * Display mode to the \"Colored Background\" display\n * mode for table cells. Either displays a solid color (basic mode)\n * or a gradient.\n */\nexport enum TableCellBackgroundDisplayMode {\n  Basic = 'basic',\n  Gradient = 'gradient',\n}\n\n/**\n * Sort by field state\n */\nexport interface TableSortByFieldState {\n  /**\n   * Flag used to indicate descending sort order\n   */\n  desc?: boolean;\n  /**\n   * Sets the display name of the field to sort by\n   */\n  displayName: string;\n}\n\n/**\n * Footer options\n */\nexport interface TableFooterOptions {\n  countRows?: boolean;\n  enablePagination?: boolean;\n  fields?: Array<string>;\n  reducer: Array<string>; // actually 1 value\n  show: boolean;\n}\n\nexport const defaultTableFooterOptions: Partial<TableFooterOptions> = {\n  fields: [],\n  reducer: [],\n};\n\n/**\n * Auto mode table cell options\n */\nexport interface TableAutoCellOptions {\n  type: TableCellDisplayMode.Auto;\n  wrapText?: boolean;\n}\n\n/**\n * Colored text cell options\n */\nexport interface TableColorTextCellOptions {\n  type: TableCellDisplayMode.ColorText;\n  wrapText?: boolean;\n}\n\n/**\n * Json view cell options\n */\nexport interface TableJsonViewCellOptions {\n  type: TableCellDisplayMode.JSONView;\n}\n\n/**\n * Json view cell options\n */\nexport interface TableImageCellOptions {\n  alt?: string;\n  title?: string;\n  type: TableCellDisplayMode.Image;\n}\n\n/**\n * Show data links in the cell\n */\nexport interface TableDataLinksCellOptions {\n  type: TableCellDisplayMode.DataLinks;\n}\n\n/**\n * Show actions in the cell\n */\nexport interface TableActionsCellOptions {\n  type: TableCellDisplayMode.Actions;\n}\n\n/**\n * Gauge cell options\n */\nexport interface TableBarGaugeCellOptions {\n  mode?: BarGaugeDisplayMode;\n  type: TableCellDisplayMode.Gauge;\n  valueDisplayMode?: BarGaugeValueMode;\n}\n\n/**\n * Sparkline cell options\n */\nexport interface TableSparklineCellOptions extends GraphFieldConfig {\n  hideValue?: boolean;\n  type: TableCellDisplayMode.Sparkline;\n}\n\n/**\n * Colored background cell options\n */\nexport interface TableColoredBackgroundCellOptions {\n  applyToRow?: boolean;\n  mode?: TableCellBackgroundDisplayMode;\n  type: TableCellDisplayMode.ColorBackground;\n  wrapText?: boolean;\n}\n\n/**\n * Height of a table cell\n */\nexport enum TableCellHeight {\n  Auto = 'auto',\n  Lg = 'lg',\n  Md = 'md',\n  Sm = 'sm',\n}\n\n/**\n * Table cell options. Each cell has a display mode\n * and other potential options for that display.\n */\nexport type TableCellOptions = (TableAutoCellOptions | TableSparklineCellOptions | TableBarGaugeCellOptions | TableColoredBackgroundCellOptions | TableColorTextCellOptions | TableImageCellOptions | TablePillCellOptions | TableDataLinksCellOptions | TableActionsCellOptions | TableJsonViewCellOptions);\n\n/**\n * Field options for each field within a table (e.g 10, \"The String\", 64.20, etc.)\n * Generally defines alignment, filtering capabilties, display options, etc.\n */\nexport interface TableFieldOptions {\n  align: FieldTextAlignment;\n  cellOptions: TableCellOptions;\n  /**\n   * This field is deprecated in favor of using cellOptions\n   */\n  displayMode?: TableCellDisplayMode;\n  filterable?: boolean;\n  hidden?: boolean; // ?? default is missing or false ??\n  /**\n   * Hides any header for a column, useful for columns that show some static content or buttons.\n   */\n  hideHeader?: boolean;\n  inspect: boolean;\n  minWidth?: number;\n  width?: number;\n  /**\n   * Enables text wrapping for column headers\n   */\n  wrapHeaderText?: boolean;\n}\n\nexport const defaultTableFieldOptions: Partial<TableFieldOptions> = {\n  align: 'auto',\n  inspect: false,\n};\n\n/**\n * Use UTC/GMT timezone\n */\nexport type TimeZoneUtc = 'utc';\n\n/**\n * Use the timezone defined by end user web browser\n */\nexport type TimeZoneBrowser = 'browser';\n\n/**\n * Optional formats for the template variable replace functions\n * See also https://grafana.com/docs/grafana/latest/dashboards/variables/variable-syntax/#advanced-variable-format-options\n */\nexport enum VariableFormatID {\n  CSV = 'csv',\n  Date = 'date',\n  Distributed = 'distributed',\n  DoubleQuote = 'doublequote',\n  Glob = 'glob',\n  HTML = 'html',\n  JSON = 'json',\n  Join = 'join',\n  Lucene = 'lucene',\n  PercentEncode = 'percentencode',\n  Pipe = 'pipe',\n  QueryParam = 'queryparam',\n  Raw = 'raw',\n  Regex = 'regex',\n  SQLString = 'sqlstring',\n  SingleQuote = 'singlequote',\n  Text = 'text',\n  UriEncode = 'uriencode',\n}\n\nexport interface DataSourceRef {\n  /**\n   *  Datasource API version\n   */\n  apiVersion?: string;\n  /**\n   * The plugin type-id\n   */\n  type?: string;\n  /**\n   * Specific datasource instance\n   */\n  uid?: string;\n}\n\n/**\n * Links to a resource (image/svg path)\n */\nexport interface ResourceDimensionConfig extends BaseDimensionConfig {\n  fixed?: string;\n  mode: ResourceDimensionMode;\n}\n\nexport interface FrameGeometrySource {\n  /**\n   * Path to Gazetteer\n   */\n  gazetteer?: string;\n  /**\n   * Field mappings\n   */\n  geohash?: string;\n  latitude?: string;\n  longitude?: string;\n  lookup?: string;\n  mode: FrameGeometrySourceMode;\n  wkt?: string;\n}\n\nexport interface HeatmapCalculationOptions {\n  /**\n   * The number of buckets to use for the xAxis in the heatmap\n   */\n  xBuckets?: HeatmapCalculationBucketConfig;\n  /**\n   * The number of buckets to use for the yAxis in the heatmap\n   */\n  yBuckets?: HeatmapCalculationBucketConfig;\n}\n\nexport enum LogsDedupStrategy {\n  exact = 'exact',\n  none = 'none',\n  numbers = 'numbers',\n  signature = 'signature',\n}\n\n/**\n * Compare two values\n */\nexport enum ComparisonOperation {\n  EQ = 'eq',\n  GT = 'gt',\n  GTE = 'gte',\n  LT = 'lt',\n  LTE = 'lte',\n  NEQ = 'neq',\n}\n\nexport interface TablePillCellOptions {\n  color?: string;\n  colorMode?: ('auto' | 'fixed' | 'mapped');\n  type: TableCellDisplayMode.Pill;\n}\n\n/**\n * A specific timezone from https://en.wikipedia.org/wiki/Tz_database\n */\nexport type TimeZone = (TimeZoneUtc | TimeZoneBrowser | string);\n\nexport const defaultTimeZone: TimeZone = 'browser';\n","import { css } from '@emotion/css';\nimport { uniq } from 'lodash';\nimport { useState, useMemo } from 'react';\nimport useAsync from 'react-use/lib/useAsync';\n\nimport { SelectableValue } from '@grafana/data';\nimport { TemporaryAlert } from '@grafana/o11y-ds-frontend';\nimport { FetchError, getTemplateSrv, isFetchError } from '@grafana/runtime';\nimport { Select, Stack, useStyles2, InputActionMeta } from '@grafana/ui';\n\nimport { TraceqlFilter, TraceqlSearchScope } from '../dataquery.gen';\nimport { TempoDatasource } from '../datasource';\nimport { OPTIONS_LIMIT } from '../language_provider';\nimport { operators as allOperators, stringOperators, numberOperators, keywordOperators } from '../traceql/traceql';\n\nimport { filterScopedTag, operatorSelectableValue } from './utils';\n\ninterface Props {\n  filter: TraceqlFilter;\n  datasource: TempoDatasource;\n  updateFilter: (f: TraceqlFilter) => void;\n  deleteFilter?: (f: TraceqlFilter) => void;\n  setError: (error: FetchError | null) => void;\n  isTagsLoading?: boolean;\n  tags: string[];\n  hideScope?: boolean;\n  hideTag?: boolean;\n  hideValue?: boolean;\n  query: string;\n  isMulti?: boolean;\n  allowCustomValue?: boolean;\n  addVariablesToOptions?: boolean;\n}\nconst SearchField = ({\n  filter,\n  datasource,\n  updateFilter,\n  isTagsLoading,\n  tags,\n  setError,\n  hideScope,\n  hideTag,\n  hideValue,\n  query,\n  addVariablesToOptions,\n  isMulti = true,\n  allowCustomValue = true,\n}: Props) => {\n  const styles = useStyles2(getStyles);\n  const [alertText, setAlertText] = useState<string>();\n  const scopedTag = useMemo(\n    () => filterScopedTag(filter, datasource.languageProvider),\n    [datasource.languageProvider, filter]\n  );\n  const [tagQuery, setTagQuery] = useState<string>('');\n  const [tagValuesQuery, setTagValuesQuery] = useState<string>('');\n\n  const updateOptions = async () => {\n    try {\n      const result = filter.tag ? await datasource.languageProvider.getOptionsV2(scopedTag, query) : [];\n      setAlertText(undefined);\n      setError(null);\n      return result;\n    } catch (error) {\n      // Display message if Tempo is connected but search 404's\n      if (isFetchError(error) && error?.status === 404) {\n        setError(error);\n      } else if (error instanceof Error) {\n        setAlertText(`Error: ${error.message}`);\n      }\n    }\n    return [];\n  };\n\n  const { loading: isLoadingValues, value: options } = useAsync(updateOptions, [\n    scopedTag,\n    datasource.languageProvider,\n    setError,\n    query,\n  ]);\n\n  // Add selected option if it doesn't exist in the current list of options\n  if (filter.value && !Array.isArray(filter.value) && options && !options.find((o) => o.value === filter.value)) {\n    options.push({ label: filter.value.toString(), value: filter.value.toString(), type: filter.valueType });\n  }\n\n  const scopeOptions = Object.values(TraceqlSearchScope)\n    .filter((s) => {\n      // only add scope if it has tags\n      return datasource.languageProvider.getTags(s).length > 0;\n    })\n    .map((t) => ({ label: t, value: t }));\n\n  // If all values have type string or int/float use a focused list of operators instead of all operators\n  const optionsOfFirstType = options?.filter((o) => o.type === options[0]?.type);\n  const uniqueOptionType = options?.length === optionsOfFirstType?.length ? options?.[0]?.type : undefined;\n  let operatorList = allOperators;\n  switch (uniqueOptionType) {\n    case 'keyword':\n      operatorList = keywordOperators;\n      break;\n    case 'string':\n      operatorList = stringOperators;\n      break;\n    case 'int':\n    case 'float':\n      operatorList = numberOperators;\n  }\n  const operatorOptions = operatorList.map(operatorSelectableValue);\n\n  const formatTagOptions = (tags: string[], filterTag: string | undefined) => {\n    return (filterTag !== undefined ? uniq([filterTag, ...tags]) : tags).map((t) => ({ label: t, value: t }));\n  };\n\n  const tagOptions = useMemo(() => {\n    if (tagQuery.length === 0) {\n      return formatTagOptions(tags.slice(0, OPTIONS_LIMIT), filter.tag);\n    }\n\n    const queryLowerCase = tagQuery.toLowerCase();\n    const filterdOptions = tags.filter((tag) => tag.toLowerCase().includes(queryLowerCase)).slice(0, OPTIONS_LIMIT);\n    return formatTagOptions(filterdOptions, filter.tag);\n  }, [filter.tag, tagQuery, tags]);\n\n  const tagValueOptions = useMemo(() => {\n    if (!options) {\n      return;\n    }\n\n    let currentOptions = options;\n\n    // Add custom value if it exists and isn't already in options\n    if (filter.isCustomValue && filter.value) {\n      const customValue = Array.isArray(filter.value) ? filter.value : [filter.value];\n\n      const newCustomOptions = customValue\n        .filter((val) => !options.some((opt) => opt.value === val))\n        .map((val) => ({ label: val, value: val, type: filter.valueType }));\n\n      if (newCustomOptions.length > 0) {\n        currentOptions = [...options, ...newCustomOptions];\n      }\n    }\n\n    if (tagValuesQuery.length === 0) {\n      return currentOptions.slice(0, OPTIONS_LIMIT);\n    }\n\n    const queryLowerCase = tagValuesQuery.toLowerCase();\n    return currentOptions\n      .filter((tag) => {\n        if (tag.value && tag.value.length > 0) {\n          return tag.value.toLowerCase().includes(queryLowerCase);\n        }\n        return false;\n      })\n      .slice(0, OPTIONS_LIMIT);\n  }, [tagValuesQuery, options, filter.isCustomValue, filter.value, filter.valueType]);\n\n  return (\n    <>\n      <Stack gap={0} width=\"auto\">\n        {!hideScope && (\n          <Select\n            width=\"auto\"\n            className={styles.dropdown}\n            inputId={`${filter.id}-scope`}\n            options={addVariablesToOptions ? withTemplateVariableOptions(scopeOptions) : scopeOptions}\n            value={filter.scope}\n            onChange={(v) => updateFilter({ ...filter, scope: v?.value, tag: undefined, value: [] })}\n            placeholder=\"Select scope\"\n            aria-label={`select ${filter.id} scope`}\n          />\n        )}\n        {!hideTag && (\n          <Select\n            width=\"auto\"\n            className={styles.dropdown}\n            inputId={`${filter.id}-tag`}\n            isLoading={isTagsLoading}\n            // Add the current tag to the list if it doesn't exist in the tags prop, otherwise the field will be empty even though the state has a value\n            options={addVariablesToOptions ? withTemplateVariableOptions(tagOptions) : tagOptions}\n            onInputChange={(value: string, { action }: InputActionMeta) => {\n              if (action === 'input-change') {\n                setTagQuery(value);\n              }\n            }}\n            onCloseMenu={() => setTagQuery('')}\n            onChange={(v) => updateFilter({ ...filter, tag: v?.value, value: [] })}\n            value={filter.tag}\n            key={filter.tag}\n            placeholder=\"Select tag\"\n            isClearable\n            aria-label={`select ${filter.id} tag`}\n            allowCustomValue\n            virtualized\n          />\n        )}\n        <Select\n          className={styles.dropdown}\n          inputId={`${filter.id}-operator`}\n          options={addVariablesToOptions ? withTemplateVariableOptions(operatorOptions) : operatorOptions}\n          value={filter.operator}\n          onChange={(v) => updateFilter({ ...filter, operator: v?.value })}\n          isClearable={false}\n          aria-label={`select ${filter.id} operator`}\n          allowCustomValue={true}\n          width={8}\n        />\n        {!hideValue && (\n          <Select\n            /**\n             * Trace cardinality means we need to use the virtualized variant of the Select component.\n             * For example the number of span names being returned can easily reach 10s of thousands,\n             * which is enough to cause a user's web browser to seize up\n             */\n            width=\"auto\"\n            virtualized\n            className={styles.dropdown}\n            inputId={`${filter.id}-value`}\n            isLoading={isLoadingValues}\n            options={addVariablesToOptions ? withTemplateVariableOptions(tagValueOptions) : tagValueOptions}\n            value={filter.value}\n            onInputChange={(value: string, { action }: InputActionMeta) => {\n              if (action === 'input-change') {\n                setTagValuesQuery(value);\n              }\n            }}\n            onCloseMenu={() => setTagValuesQuery('')}\n            onChange={(val) => {\n              if (Array.isArray(val)) {\n                updateFilter({\n                  ...filter,\n                  value: val.map((v) => v.value),\n                  valueType: val[0]?.type || uniqueOptionType,\n                  isCustomValue: false,\n                });\n              } else {\n                updateFilter({\n                  ...filter,\n                  value: val?.value,\n                  valueType: val?.type || uniqueOptionType,\n                  isCustomValue: false,\n                });\n              }\n            }}\n            onCreateOption={(val) => {\n              updateFilter({\n                ...filter,\n                value: Array.isArray(filter.value) ? filter.value?.concat(val) : val,\n                valueType: uniqueOptionType,\n                isCustomValue: true,\n              });\n            }}\n            placeholder=\"Select value\"\n            isClearable={true}\n            aria-label={`select ${filter.id} value`}\n            allowCustomValue={allowCustomValue}\n            isMulti={isMulti}\n            allowCreateWhileLoading\n          />\n        )}\n      </Stack>\n      {alertText && <TemporaryAlert severity=\"error\" text={alertText} />}\n    </>\n  );\n};\n\nexport default SearchField;\n\n/**\n * Add to a list of options the current template variables.\n *\n * @param options a list of options\n * @returns the list of given options plus the template variables\n */\nexport const withTemplateVariableOptions = (options: SelectableValue[] | undefined) => {\n  const templateVariables = getTemplateSrv().getVariables();\n  return [...(options || []), ...templateVariables.map((v) => ({ label: `$${v.name}`, value: `$${v.name}` }))];\n};\n\nconst getStyles = () => ({\n  dropdown: css({\n    boxShadow: 'none',\n  }),\n});\n","import { cx, css } from '@emotion/css';\nimport React__default from 'react';\nimport '@grafana/data';\nimport { useStyles2, Button } from '@grafana/ui';\n\nconst AccessoryButton = ({ className, ...props }) => {\n  const styles = useStyles2(getButtonStyles);\n  return /* @__PURE__ */ React__default.createElement(Button, { ...props, className: cx(className, styles.button) });\n};\nconst getButtonStyles = (theme) => ({\n  button: css({\n    paddingLeft: theme.spacing(3 / 2),\n    paddingRight: theme.spacing(3 / 2)\n  })\n});\n\nexport { AccessoryButton };\n//# sourceMappingURL=AccessoryButton.js.map\n","import { css } from '@emotion/css';\nimport { useCallback, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { AccessoryButton } from '@grafana/plugin-ui';\nimport { FetchError } from '@grafana/runtime';\nimport { useStyles2 } from '@grafana/ui';\n\nimport { TraceqlFilter, TraceqlSearchScope } from '../dataquery.gen';\nimport { TempoDatasource } from '../datasource';\n\nimport SearchField from './SearchField';\nimport { getFilteredTags } from './utils';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  vertical: css({\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(0.25),\n  }),\n  horizontal: css({\n    display: 'flex',\n    flexDirection: 'row',\n    gap: theme.spacing(1),\n  }),\n  addTag: css({\n    marginLeft: theme.spacing(1),\n  }),\n});\n\ninterface Props {\n  updateFilter: (f: TraceqlFilter) => void;\n  deleteFilter: (f: TraceqlFilter) => void;\n  generateQueryWithoutFilter: (f?: TraceqlFilter) => string;\n  filters: TraceqlFilter[];\n  datasource: TempoDatasource;\n  setError: (error: FetchError | null) => void;\n  staticTags: Array<string | undefined>;\n  isTagsLoading: boolean;\n  hideValues?: boolean;\n  requireTagAndValue?: boolean;\n  addVariablesToOptions?: boolean;\n}\nconst TagsInput = ({\n  updateFilter,\n  deleteFilter,\n  filters,\n  datasource,\n  setError,\n  staticTags,\n  isTagsLoading,\n  hideValues,\n  requireTagAndValue,\n  generateQueryWithoutFilter,\n  addVariablesToOptions,\n}: Props) => {\n  const styles = useStyles2(getStyles);\n  const handleOnAdd = useCallback(\n    () => updateFilter({ id: generateId(), operator: '=', scope: TraceqlSearchScope.Span }),\n    [updateFilter]\n  );\n\n  useEffect(() => {\n    if (!filters?.length) {\n      handleOnAdd();\n    }\n  }, [filters, handleOnAdd]);\n\n  const getTags = (f: TraceqlFilter) => {\n    const tags = datasource.languageProvider.getTags(f.scope);\n    return getFilteredTags(tags, staticTags);\n  };\n\n  const validInput = (f: TraceqlFilter) => {\n    // If value is removed from the filter, it can be set as an empty array\n    return requireTagAndValue ? f.tag && f.value && f.value.length > 0 : f.tag;\n  };\n\n  return (\n    <div className={styles.vertical}>\n      {filters?.map((f, i) => (\n        <div className={styles.horizontal} key={f.id}>\n          <SearchField\n            filter={f}\n            datasource={datasource}\n            setError={setError}\n            updateFilter={updateFilter}\n            tags={getTags(f)}\n            isTagsLoading={isTagsLoading}\n            hideValue={hideValues}\n            query={generateQueryWithoutFilter(f)}\n            addVariablesToOptions={addVariablesToOptions}\n          />\n          {(validInput(f) || filters.length > 1) && (\n            <AccessoryButton\n              aria-label={`Remove tag with ID ${f.id}`}\n              variant={'secondary'}\n              icon={'times'}\n              onClick={() => deleteFilter?.(f)}\n              tooltip={'Remove tag'}\n            />\n          )}\n          {validInput(f) && i === filters.length - 1 && (\n            <span className={styles.addTag}>\n              <AccessoryButton\n                aria-label=\"Add tag\"\n                variant={'secondary'}\n                icon={'plus'}\n                onClick={handleOnAdd}\n                tooltip={'Add tag'}\n              />\n            </span>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default TagsInput;\n\nexport const generateId = () => uuidv4().slice(0, 8);\n","import { startCase, uniq } from 'lodash';\n\nimport { ScopedVars, SelectableValue } from '@grafana/data';\nimport { getTemplateSrv } from '@grafana/runtime';\nimport { VariableFormatID } from '@grafana/schema';\n\nimport { TraceqlFilter, TraceqlSearchScope } from '../dataquery.gen';\nimport { getEscapedRegexValues, getEscapedValues } from '../datasource';\nimport TempoLanguageProvider from '../language_provider';\nimport { intrinsics } from '../traceql/traceql';\nimport { Scope } from '../types';\n\nexport const interpolateFilters = (filters: TraceqlFilter[], scopedVars?: ScopedVars) => {\n  const interpolatedFilters = filters.map((filter) => {\n    const updatedFilter = {\n      ...filter,\n      tag: getTemplateSrv().replace(filter.tag ?? '', scopedVars ?? {}),\n    };\n\n    if (filter.value) {\n      updatedFilter.value =\n        typeof filter.value === 'string'\n          ? getTemplateSrv().replace(filter.value ?? '', scopedVars ?? {}, VariableFormatID.Pipe)\n          : filter.value.map((v) => getTemplateSrv().replace(v ?? '', scopedVars ?? {}, VariableFormatID.Pipe));\n    }\n\n    return updatedFilter;\n  });\n\n  return interpolatedFilters;\n};\n\nconst isRegExpOperator = (operator: string) => operator === '=~' || operator === '!~';\n\nexport const valueHelper = (f: TraceqlFilter) => {\n  let value = f.value;\n\n  if (Array.isArray(value) && !f.isCustomValue) {\n    value = getEscapedValues(value);\n\n    if (isRegExpOperator(f.operator!)) {\n      value = getEscapedRegexValues(value);\n    }\n  }\n\n  if (Array.isArray(value) && value.length > 1) {\n    return `\"${value.join('|')}\"`;\n  }\n  if (f.valueType === 'string') {\n    return `\"${value}\"`;\n  }\n  return value;\n};\n\nexport const scopeHelper = (f: TraceqlFilter, lp: TempoLanguageProvider) => {\n  // Intrinsic fields don't have a scope\n  if (lp.getIntrinsics().find((t) => t === f.tag)) {\n    return '';\n  }\n  return (\n    (f.scope === TraceqlSearchScope.Event ||\n    f.scope === TraceqlSearchScope.Instrumentation ||\n    f.scope === TraceqlSearchScope.Link ||\n    f.scope === TraceqlSearchScope.Resource ||\n    f.scope === TraceqlSearchScope.Span\n      ? f.scope?.toLowerCase()\n      : '') + '.'\n  );\n};\n\nexport const tagHelper = (f: TraceqlFilter, filters: TraceqlFilter[]) => {\n  if (f.tag === 'duration') {\n    const durationType = filters.find((f) => f.id === 'duration-type');\n    if (durationType) {\n      return durationType.value === 'trace' ? 'traceDuration' : 'duration';\n    }\n    return f.tag;\n  }\n  return f.tag;\n};\n\nexport const filterToQuerySection = (f: TraceqlFilter, filters: TraceqlFilter[], lp: TempoLanguageProvider) => {\n  if (Array.isArray(f.value) && f.value.length > 1 && !isRegExpOperator(f.operator!)) {\n    return `(${f.value.map((v) => `${scopeHelper(f, lp)}${tagHelper(f, filters)}${f.operator}${valueHelper({ ...f, value: v })}`).join(' || ')})`;\n  }\n\n  return `${scopeHelper(f, lp)}${tagHelper(f, filters)}${f.operator}${valueHelper(f)}`;\n};\n\nexport const getTagWithoutScope = (tag: string) => {\n  return tag.replace(/^(event|instrumentation|link|resource|span)\\./, '');\n};\n\nexport const filterScopedTag = (f: TraceqlFilter, lp: TempoLanguageProvider) => {\n  return scopeHelper(f, lp) + f.tag;\n};\n\nexport const filterTitle = (f: TraceqlFilter, lp: TempoLanguageProvider) => {\n  // Special case for the intrinsic \"name\" since a label called \"Name\" isn't explicit\n  if (f.tag === 'name') {\n    return 'Span Name';\n  }\n  // Special case for the resource service name\n  if (f.tag === 'service.name' && f.scope === TraceqlSearchScope.Resource) {\n    return 'Service Name';\n  }\n  return startCase(filterScopedTag(f, lp));\n};\n\nexport const getFilteredTags = (tags: string[], staticTags: Array<string | undefined>) => {\n  return [...tags].filter((t) => !staticTags.includes(t));\n};\n\nexport const getUnscopedTags = (scopes: Scope[]) => {\n  return uniq(\n    scopes\n      .map((scope: Scope) =>\n        scope.name && scope.name !== TraceqlSearchScope.Intrinsic && scope.tags ? scope.tags : []\n      )\n      .flat()\n  );\n};\n\nexport const getIntrinsicTags = (scopes: Scope[]) => {\n  let tags = scopes\n    .map((scope: Scope) => (scope.name && scope.name === TraceqlSearchScope.Intrinsic && scope.tags ? scope.tags : []))\n    .flat();\n\n  // Add the default intrinsic tags to the list of tags.\n  // This is needed because the /api/v2/search/tags API\n  // may not always return all the default intrinsic tags\n  // but generally has the most up to date list.\n  tags = uniq(tags.concat(intrinsics));\n  return tags;\n};\n\nexport const getAllTags = (scopes: Scope[]) => {\n  return uniq(scopes.map((scope: Scope) => (scope.tags ? scope.tags : [])).flat());\n};\n\nexport const getTagsByScope = (scopes: Scope[], scope: TraceqlSearchScope | string) => {\n  return uniq(scopes.map((s: Scope) => (s.name && s.name === scope && s.tags ? s.tags : [])).flat());\n};\n\nexport function replaceAt<T>(array: T[], index: number, value: T) {\n  const ret = array.slice(0);\n  ret[index] = value;\n  return ret;\n}\n\nexport const operatorSelectableValue = (op: string) => {\n  const result: SelectableValue = { label: op, value: op };\n  switch (op) {\n    case '=':\n      result.description = 'Equals';\n      break;\n    case '!=':\n      result.description = 'Not equals';\n      break;\n    case '>':\n      result.description = 'Greater';\n      break;\n    case '>=':\n      result.description = 'Greater or Equal';\n      break;\n    case '<':\n      result.description = 'Less';\n      break;\n    case '<=':\n      result.description = 'Less or Equal';\n      break;\n    case '=~':\n      result.description = 'Matches regex';\n      break;\n    case '!~':\n      result.description = 'Does not match regex';\n      break;\n  }\n  return result;\n};\n","// Code generated - EDITING IS FUTILE. DO NOT EDIT.\n//\n// Generated by:\n//     public/app/plugins/gen.go\n// Using jennies:\n//     TSTypesJenny\n//     PluginTsTypesJenny\n//\n// Run 'make gen-cue' from repository root to regenerate.\n\nimport * as common from '@grafana/schema';\n\nexport interface TempoQuery extends common.DataQuery {\n  /**\n   * For metric queries, how many exemplars to request, 0 means no exemplars\n   */\n  exemplars?: number;\n  filters: Array<TraceqlFilter>;\n  /**\n   * deprecated Filters that are used to query the metrics summary\n   */\n  groupBy?: Array<TraceqlFilter>;\n  /**\n   * Defines the maximum number of traces that are returned from Tempo\n   */\n  limit?: number;\n  /**\n   * @deprecated Define the maximum duration to select traces. Use duration format, for example: 1.2s, 100ms\n   */\n  maxDuration?: string;\n  /**\n   * For metric queries, whether to run instant or range queries\n   */\n  metricsQueryType?: MetricsQueryType;\n  /**\n   * @deprecated Define the minimum duration to select traces. Use duration format, for example: 1.2s, 100ms\n   */\n  minDuration?: string;\n  /**\n   * TraceQL query or trace ID\n   */\n  query?: string;\n  /**\n   * @deprecated Logfmt query to filter traces by their tags. Example: http.status_code=200 error=true\n   */\n  search?: string;\n  /**\n   * Use service.namespace in addition to service.name to uniquely identify a service.\n   */\n  serviceMapIncludeNamespace?: boolean;\n  /**\n   * Filters to be included in a PromQL query to select data for the service graph. Example: {client=\"app\",service=\"app\"}. Providing multiple values will produce union of results for each filter, using PromQL OR operator internally.\n   */\n  serviceMapQuery?: (string | Array<string>);\n  /**\n   * @deprecated Query traces by service name\n   */\n  serviceName?: string;\n  /**\n   * @deprecated Query traces by span name\n   */\n  spanName?: string;\n  /**\n   * Defines the maximum number of spans per spanset that are returned from Tempo\n   */\n  spss?: number;\n  /**\n   * For metric queries, the step size to use\n   */\n  step?: string;\n  /**\n   * The type of the table that is used to display the search results\n   */\n  tableType?: SearchTableType;\n}\n\nexport const defaultTempoQuery: Partial<TempoQuery> = {\n  filters: [],\n  groupBy: [],\n};\n\nexport type TempoQueryType = ('traceql' | 'traceqlSearch' | 'serviceMap' | 'upload' | 'nativeSearch' | 'traceId' | 'clear');\n\nexport enum MetricsQueryType {\n  Instant = 'instant',\n  Range = 'range',\n}\n\n/**\n * The state of the TraceQL streaming search query\n */\nexport enum SearchStreamingState {\n  Done = 'done',\n  Error = 'error',\n  Pending = 'pending',\n  Streaming = 'streaming',\n}\n\n/**\n * The type of the table that is used to display the search results\n */\nexport enum SearchTableType {\n  Raw = 'raw',\n  Spans = 'spans',\n  Traces = 'traces',\n}\n\n/**\n * static fields are pre-set in the UI, dynamic fields are added by the user\n */\nexport enum TraceqlSearchScope {\n  Event = 'event',\n  Instrumentation = 'instrumentation',\n  Intrinsic = 'intrinsic',\n  Link = 'link',\n  Resource = 'resource',\n  Span = 'span',\n  Unscoped = 'unscoped',\n}\n\nexport interface TraceqlFilter {\n  /**\n   * Uniquely identify the filter, will not be used in the query generation\n   */\n  id: string;\n  /**\n   * Whether the value is a custom value typed by the user\n   */\n  isCustomValue?: boolean;\n  /**\n   * The operator that connects the tag to the value, for example: =, >, !=, =~\n   */\n  operator?: string;\n  /**\n   * The scope of the filter, can either be unscoped/all scopes, resource or span\n   */\n  scope?: TraceqlSearchScope;\n  /**\n   * The tag for the search filter, for example: .http.status_code, .service.name, status\n   */\n  tag?: string;\n  /**\n   * The value for the search filter\n   */\n  value?: (string | Array<string>);\n  /**\n   * The type of the value, used for example to check whether we need to wrap the value in quotes when generating the query\n   */\n  valueType?: string;\n}\n\nexport interface TempoDataQuery {}\n","import { useEffect, useMemo, useState } from 'react';\n\nimport { DataQuery, SelectableValue } from '@grafana/data';\nimport { InlineField, InlineFieldRow, InputActionMeta, Select } from '@grafana/ui';\n\nimport { TempoDatasource } from './datasource';\nimport { OPTIONS_LIMIT } from './language_provider';\n\nexport enum TempoVariableQueryType {\n  LabelNames,\n  LabelValues,\n}\n\nexport interface TempoVariableQuery extends DataQuery {\n  type: TempoVariableQueryType;\n  label?: string;\n  stream?: string;\n}\n\nconst variableOptions = [\n  { label: 'Label names', value: TempoVariableQueryType.LabelNames },\n  { label: 'Label values', value: TempoVariableQueryType.LabelValues },\n];\n\nconst refId = 'TempoDatasourceVariableQueryEditor-VariableQuery';\n\nexport type TempoVariableQueryEditorProps = {\n  onChange: (value: TempoVariableQuery) => void;\n  query: TempoVariableQuery;\n  datasource: TempoDatasource;\n};\n\nexport const TempoVariableQueryEditor = ({ onChange, query, datasource }: TempoVariableQueryEditorProps) => {\n  const [label, setLabel] = useState(query.label || '');\n  const [type, setType] = useState<number | undefined>(query.type);\n  const [labelOptions, setLabelOptions] = useState<Array<SelectableValue<string>>>([]);\n  const [labelQuery, setLabelQuery] = useState<string>('');\n\n  useEffect(() => {\n    if (type === TempoVariableQueryType.LabelValues) {\n      datasource.labelNamesQuery().then((labelNames: Array<{ text: string }>) => {\n        setLabelOptions(labelNames.map(({ text }) => ({ label: text, value: text })));\n      });\n    }\n  }, [datasource, query, type]);\n\n  const options = useMemo(() => {\n    if (labelQuery.length === 0) {\n      return labelOptions.slice(0, OPTIONS_LIMIT);\n    }\n\n    const queryLowerCase = labelQuery.toLowerCase();\n    return labelOptions\n      .filter((tag) => {\n        if (tag.value && tag.value.length > 0) {\n          return tag.value.toLowerCase().includes(queryLowerCase);\n        }\n        return false;\n      })\n      .slice(0, OPTIONS_LIMIT);\n  }, [labelQuery, labelOptions]);\n\n  const onQueryTypeChange = (newType: SelectableValue<TempoVariableQueryType>) => {\n    setType(newType.value);\n    if (newType.value !== undefined) {\n      onChange({\n        type: newType.value,\n        label,\n        refId,\n      });\n    }\n  };\n\n  const onLabelChange = (newLabel: SelectableValue<string>) => {\n    const newLabelValue = newLabel.value || '';\n    setLabel(newLabelValue);\n    if (type !== undefined) {\n      onChange({\n        type,\n        label: newLabelValue,\n        refId,\n      });\n    }\n  };\n\n  const handleBlur = () => {\n    if (type !== undefined) {\n      onChange({ type, label, refId });\n    }\n  };\n\n  return (\n    <>\n      <InlineFieldRow>\n        <InlineField label=\"Query type\" labelWidth={20}>\n          <Select\n            aria-label=\"Query type\"\n            onChange={onQueryTypeChange}\n            onBlur={handleBlur}\n            value={type}\n            options={variableOptions}\n            width={32}\n          />\n        </InlineField>\n      </InlineFieldRow>\n\n      {type === TempoVariableQueryType.LabelValues && (\n        <InlineFieldRow>\n          <InlineField label=\"Label\" labelWidth={20}>\n            <Select\n              aria-label=\"Label\"\n              onChange={onLabelChange}\n              onBlur={handleBlur}\n              onInputChange={(value: string, { action }: InputActionMeta) => {\n                if (action === 'input-change') {\n                  setLabelQuery(value);\n                }\n              }}\n              onCloseMenu={() => setLabelQuery('')}\n              value={{ label, value: label }}\n              options={options}\n              width={32}\n              allowCustomValue\n              virtualized\n            />\n          </InlineField>\n        </InlineFieldRow>\n      )}\n    </>\n  );\n};\n","import {\n  DataFrame,\n  DataFrameView,\n  DataQueryResponse,\n  FieldColorModeId,\n  FieldDTO,\n  MutableDataFrame,\n  NodeGraphDataFrameFieldNames as Fields,\n  TimeRange,\n  FieldType,\n  toDataFrame,\n} from '@grafana/data';\n\nexport const secondsMetric = 'traces_service_graph_request_server_seconds_sum';\nexport const totalsMetric = 'traces_service_graph_request_total';\nexport const failedMetric = 'traces_service_graph_request_failed_total';\nexport const histogramMetric = 'traces_service_graph_request_server_seconds_bucket';\nexport const nativeHistogramMetric = 'traces_service_graph_request_server_seconds';\n\nexport const rateMetric = {\n  expr: 'sum(rate(traces_spanmetrics_calls_total{}[$__range])) by (span_name)',\n  topk: 5,\n  params: [],\n};\nexport const errorRateMetric = {\n  expr: 'sum(rate(traces_spanmetrics_calls_total{}[$__range])) by (span_name)',\n  topk: 5,\n  params: ['status_code=\"STATUS_CODE_ERROR\"'],\n};\nexport const durationMetric = {\n  expr: 'histogram_quantile(.9, sum(rate(traces_spanmetrics_latency_bucket{}[$__range])) by (le))',\n  params: [],\n};\nexport const nativeHistogramDurationMetric = {\n  expr: 'histogram_quantile(.9, sum(rate(traces_spanmetrics_latency{}[$__range])) by (le))',\n  params: [],\n};\nexport const defaultTableFilter = 'span_kind=\"SPAN_KIND_SERVER\"';\n\nexport const serviceMapMetrics = [\n  secondsMetric,\n  totalsMetric,\n  failedMetric,\n  histogramMetric,\n  // These are used for debugging the tempo collection so probably not useful for service map right now.\n  // 'traces_service_graph_unpaired_spans_total',\n  // 'traces_service_graph_untagged_spans_total',\n];\n\n/**\n * Map response from multiple prometheus metrics into a node graph data frames with nodes and edges.\n * @param responses\n * @param range\n */\nexport function mapPromMetricsToServiceMap(\n  responses: DataQueryResponse[],\n  range: TimeRange\n): { nodes: DataFrame; edges: DataFrame } {\n  const frames = getMetricFrames(responses);\n\n  // First just collect data from the metrics into a map with nodes and edges as keys\n  const nodesMap: Record<string, NodeObject> = {};\n  const edgesMap: Record<string, EdgeObject> = {};\n  // At this moment we don't have any error/success or other counts so we just use these 2\n  collectMetricData(frames[totalsMetric], 'total', totalsMetric, nodesMap, edgesMap);\n  collectMetricData(frames[secondsMetric], 'seconds', secondsMetric, nodesMap, edgesMap);\n  collectMetricData(frames[failedMetric], 'failed', failedMetric, nodesMap, edgesMap);\n\n  collectIsInstrumented(frames[`${totalsMetric}_labels`], nodesMap);\n  collectIsInstrumented(frames[`${secondsMetric}_labels`], nodesMap);\n  collectIsInstrumented(frames[`${failedMetric}_labels`], nodesMap);\n\n  return convertToDataFrames(nodesMap, edgesMap, range);\n}\n\nfunction createServiceMapDataFrames() {\n  function createDF(name: string, fields: FieldDTO[]) {\n    return new MutableDataFrame({ name, fields, meta: { preferredVisualisationType: 'nodeGraph' } });\n  }\n\n  const nodes = createDF('Nodes', [\n    { name: Fields.id, type: FieldType.string, values: [] },\n    { name: Fields.title, type: FieldType.string, config: { displayName: 'Service name' }, values: [] },\n    { name: Fields.subTitle, type: FieldType.string, config: { displayName: 'Service namespace' }, values: [] },\n    {\n      name: Fields.mainStat,\n      type: FieldType.number,\n      config: { unit: 'ms/r', displayName: 'Average response time' },\n      values: [],\n    },\n    {\n      name: Fields.secondaryStat,\n      type: FieldType.number,\n      config: { unit: 'r/sec', displayName: 'Requests per second' },\n      values: [],\n    },\n    {\n      name: Fields.arc + 'success',\n      type: FieldType.number,\n      config: { displayName: 'Success', color: { fixedColor: 'green', mode: FieldColorModeId.Fixed } },\n      values: [],\n    },\n    {\n      name: Fields.arc + 'failed',\n      type: FieldType.number,\n      config: { displayName: 'Failed', color: { fixedColor: 'red', mode: FieldColorModeId.Fixed } },\n      values: [],\n    },\n    {\n      name: Fields.isInstrumented,\n      type: FieldType.boolean,\n      values: [],\n    },\n  ]);\n  const edges = createDF('Edges', [\n    { name: Fields.id, type: FieldType.string, values: [] },\n    { name: Fields.source, type: FieldType.string, values: [] },\n    { name: AdditionalEdgeFields.sourceName, type: FieldType.string, values: [] },\n    { name: AdditionalEdgeFields.sourceNamespace, type: FieldType.string, values: [] },\n    { name: Fields.target, type: FieldType.string, values: [] },\n    { name: AdditionalEdgeFields.targetName, type: FieldType.string, values: [] },\n    { name: AdditionalEdgeFields.targetNamespace, type: FieldType.string, values: [] },\n    {\n      name: Fields.mainStat,\n      type: FieldType.number,\n      config: { unit: 'ms/r', displayName: 'Average response time' },\n      values: [],\n    },\n    {\n      name: Fields.secondaryStat,\n      type: FieldType.number,\n      config: { unit: 'r/sec', displayName: 'Requests per second' },\n      values: [],\n    },\n  ]);\n\n  return [nodes, edges];\n}\n\n/**\n * Group frames from response based on ref id which is set the same as the metric name so we know which metric is where\n * and also put it into DataFrameView so it's easier to work with.\n * @param responses\n */\nfunction getMetricFrames(responses: DataQueryResponse[]): Record<string, DataFrameView> {\n  return (responses[0]?.data || []).reduce<Record<string, DataFrameView>>((acc, frameDTO) => {\n    const frame = toDataFrame(frameDTO);\n    acc[frame.refId ?? 'A'] = new DataFrameView(frame);\n    return acc;\n  }, {});\n}\n\ntype ServiceMapStatistics = {\n  total?: number;\n  seconds?: number;\n  failed?: number;\n};\n\ntype NodeObject = ServiceMapStatistics & {\n  name: string;\n  namespace?: string;\n  isInstrumented?: boolean;\n};\n\ntype EdgeObject = ServiceMapStatistics & {\n  source: string;\n  sourceName: string;\n  sourceNamespace: string;\n  target: string;\n  targetName: string;\n  targetNamespace: string;\n};\n\n// These fields are not necessary for rendering, so not available from the Fields enum\n// Will be used for linking when namespace is present\nenum AdditionalEdgeFields {\n  sourceName = 'sourceName',\n  sourceNamespace = 'sourceNamespace',\n  targetName = 'targetName',\n  targetNamespace = 'targetNamespace',\n}\n\n/**\n * Collect data from a metric into a map of nodes and edges. The metric data is modeled as counts of metric per edge\n * which is a pair of client-server nodes. This means we convert each row of the metric 1-1 to edges and than we assign\n * the metric also to server. We count the stats for server only as we show requests/transactions that particular node\n * processed not those which it generated and other stats like average transaction time then stem from that.\n * @param frame\n * @param stat\n * @param metric\n * @param nodesMap\n * @param edgesMap\n */\nfunction collectMetricData(\n  frame: DataFrameView | undefined,\n  stat: keyof ServiceMapStatistics,\n  metric: string,\n  nodesMap: Record<string, NodeObject>,\n  edgesMap: Record<string, EdgeObject>\n) {\n  if (!frame) {\n    return;\n  }\n\n  // The name of the value column is in this format\n  // Improvement: figure out if it can be changed\n  const valueName = `Value #${metric}`;\n\n  for (let i = 0; i < frame.length; i++) {\n    const row = frame.get(i);\n    const serverId = row.server_service_namespace ? `${row.server_service_namespace}/${row.server}` : row.server;\n    const clientId = row.client_service_namespace ? `${row.client_service_namespace}/${row.client}` : row.client;\n\n    const edgeId = `${clientId}_${serverId}`;\n\n    if (!edgesMap[edgeId]) {\n      // Create edge as it does not exist yet\n      edgesMap[edgeId] = {\n        target: serverId,\n        targetName: row.server,\n        targetNamespace: row.server_service_namespace,\n        source: clientId,\n        sourceName: row.client,\n        sourceNamespace: row.client_service_namespace,\n        [stat]: row[valueName],\n      };\n    } else {\n      // Add stat to edge\n      // We are adding the values if exists but that should not happen in general as there should be single row for\n      // an edge.\n      edgesMap[edgeId][stat] = (edgesMap[edgeId][stat] || 0) + row[valueName];\n    }\n\n    if (!nodesMap[serverId]) {\n      // Create node for server\n      nodesMap[serverId] = {\n        name: row.server,\n        namespace: row.server_service_namespace,\n        [stat]: row[valueName],\n      };\n    } else {\n      // Add stat to server node. Sum up values if there are multiple edges targeting this server node.\n      nodesMap[serverId][stat] = (nodesMap[serverId][stat] || 0) + row[valueName];\n    }\n\n    if (!nodesMap[clientId]) {\n      // Create the client node but don't add the stat as edge stats are attributed to the server node. This means for\n      // example that the number of requests in a node show how many requests it handled not how many it generated.\n      nodesMap[clientId] = {\n        name: row.client,\n        namespace: row.client_service_namespace,\n        [stat]: 0,\n      };\n    }\n  }\n}\n\nfunction collectIsInstrumented(frame: DataFrameView | undefined, nodesMap: Record<string, NodeObject>) {\n  if (!frame) {\n    return;\n  }\n\n  for (let i = 0; i < frame.length; i++) {\n    const row = frame.get(i);\n    const serverId = row.server_service_namespace ? `${row.server_service_namespace}/${row.server}` : row.server;\n\n    if (nodesMap[serverId] && nodesMap[serverId].isInstrumented !== true) {\n      nodesMap[serverId].isInstrumented = row.connection_type === '' || row.connection_type === 'messaging_system';\n    }\n  }\n}\n\nfunction convertToDataFrames(\n  nodesMap: Record<string, NodeObject>,\n  edgesMap: Record<string, EdgeObject>,\n  range: TimeRange\n): { nodes: DataFrame; edges: DataFrame } {\n  const [nodes, edges] = createServiceMapDataFrames();\n  for (const nodeId of Object.keys(nodesMap)) {\n    const node = nodesMap[nodeId];\n    nodes.add({\n      [Fields.id]: nodeId,\n      [Fields.title]: node.name,\n      [Fields.subTitle]: node.namespace,\n      // NaN will not be shown in the node graph. This happens for a root client node which did not process\n      // any requests itself.\n      [Fields.mainStat]: node.total ? (node.seconds! / node.total) * 1000 : Number.NaN, // Average response time\n      [Fields.secondaryStat]: node.total ? Math.round(node.total * 100) / 100 : Number.NaN, // Request per second (to 2 decimals)\n      [Fields.arc + 'success']: node.total ? (node.total - Math.min(node.failed || 0, node.total)) / node.total : 1,\n      [Fields.arc + 'failed']: node.total ? Math.min(node.failed || 0, node.total) / node.total : 0,\n      [Fields.isInstrumented]: node.isInstrumented ?? true,\n    });\n  }\n  for (const edgeId of Object.keys(edgesMap)) {\n    const edge = edgesMap[edgeId];\n    edges.add({\n      [Fields.id]: edgeId,\n      [Fields.source]: edge.source,\n      [AdditionalEdgeFields.sourceName]: edge.sourceName,\n      [AdditionalEdgeFields.sourceNamespace]: edge.sourceNamespace,\n      [Fields.target]: edge.target,\n      [AdditionalEdgeFields.targetName]: edge.targetName,\n      [AdditionalEdgeFields.targetNamespace]: edge.targetNamespace,\n      [Fields.mainStat]: edge.total ? (edge.seconds! / edge.total) * 1000 : Number.NaN, // Average response time\n      [Fields.secondaryStat]: edge.total ? Math.round(edge.total * 100) / 100 : Number.NaN, // Request per second (to 2 decimals)\n    });\n  }\n\n  return { nodes, edges };\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Creates a const map from the given values\n * @param values - An array of values to be used as keys and values in the map.\n * @returns A populated version of the map with the values and keys derived from the values.\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function createConstMap(values) {\n    // eslint-disable-next-line prefer-const, @typescript-eslint/no-explicit-any\n    let res = {};\n    const len = values.length;\n    for (let lp = 0; lp < len; lp++) {\n        const val = values[lp];\n        if (val) {\n            res[String(val).toUpperCase().replace(/[-.]/g, '_')] = val;\n        }\n    }\n    return res;\n}\n//# sourceMappingURL=utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createConstMap } from '../internal/utils';\n//----------------------------------------------------------------------------------------------------------\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates//templates/SemanticAttributes.ts.j2\n//----------------------------------------------------------------------------------------------------------\n//----------------------------------------------------------------------------------------------------------\n// Constant values for SemanticResourceAttributes\n//----------------------------------------------------------------------------------------------------------\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_CLOUD_PROVIDER = 'cloud.provider';\nconst TMP_CLOUD_ACCOUNT_ID = 'cloud.account.id';\nconst TMP_CLOUD_REGION = 'cloud.region';\nconst TMP_CLOUD_AVAILABILITY_ZONE = 'cloud.availability_zone';\nconst TMP_CLOUD_PLATFORM = 'cloud.platform';\nconst TMP_AWS_ECS_CONTAINER_ARN = 'aws.ecs.container.arn';\nconst TMP_AWS_ECS_CLUSTER_ARN = 'aws.ecs.cluster.arn';\nconst TMP_AWS_ECS_LAUNCHTYPE = 'aws.ecs.launchtype';\nconst TMP_AWS_ECS_TASK_ARN = 'aws.ecs.task.arn';\nconst TMP_AWS_ECS_TASK_FAMILY = 'aws.ecs.task.family';\nconst TMP_AWS_ECS_TASK_REVISION = 'aws.ecs.task.revision';\nconst TMP_AWS_EKS_CLUSTER_ARN = 'aws.eks.cluster.arn';\nconst TMP_AWS_LOG_GROUP_NAMES = 'aws.log.group.names';\nconst TMP_AWS_LOG_GROUP_ARNS = 'aws.log.group.arns';\nconst TMP_AWS_LOG_STREAM_NAMES = 'aws.log.stream.names';\nconst TMP_AWS_LOG_STREAM_ARNS = 'aws.log.stream.arns';\nconst TMP_CONTAINER_NAME = 'container.name';\nconst TMP_CONTAINER_ID = 'container.id';\nconst TMP_CONTAINER_RUNTIME = 'container.runtime';\nconst TMP_CONTAINER_IMAGE_NAME = 'container.image.name';\nconst TMP_CONTAINER_IMAGE_TAG = 'container.image.tag';\nconst TMP_DEPLOYMENT_ENVIRONMENT = 'deployment.environment';\nconst TMP_DEVICE_ID = 'device.id';\nconst TMP_DEVICE_MODEL_IDENTIFIER = 'device.model.identifier';\nconst TMP_DEVICE_MODEL_NAME = 'device.model.name';\nconst TMP_FAAS_NAME = 'faas.name';\nconst TMP_FAAS_ID = 'faas.id';\nconst TMP_FAAS_VERSION = 'faas.version';\nconst TMP_FAAS_INSTANCE = 'faas.instance';\nconst TMP_FAAS_MAX_MEMORY = 'faas.max_memory';\nconst TMP_HOST_ID = 'host.id';\nconst TMP_HOST_NAME = 'host.name';\nconst TMP_HOST_TYPE = 'host.type';\nconst TMP_HOST_ARCH = 'host.arch';\nconst TMP_HOST_IMAGE_NAME = 'host.image.name';\nconst TMP_HOST_IMAGE_ID = 'host.image.id';\nconst TMP_HOST_IMAGE_VERSION = 'host.image.version';\nconst TMP_K8S_CLUSTER_NAME = 'k8s.cluster.name';\nconst TMP_K8S_NODE_NAME = 'k8s.node.name';\nconst TMP_K8S_NODE_UID = 'k8s.node.uid';\nconst TMP_K8S_NAMESPACE_NAME = 'k8s.namespace.name';\nconst TMP_K8S_POD_UID = 'k8s.pod.uid';\nconst TMP_K8S_POD_NAME = 'k8s.pod.name';\nconst TMP_K8S_CONTAINER_NAME = 'k8s.container.name';\nconst TMP_K8S_REPLICASET_UID = 'k8s.replicaset.uid';\nconst TMP_K8S_REPLICASET_NAME = 'k8s.replicaset.name';\nconst TMP_K8S_DEPLOYMENT_UID = 'k8s.deployment.uid';\nconst TMP_K8S_DEPLOYMENT_NAME = 'k8s.deployment.name';\nconst TMP_K8S_STATEFULSET_UID = 'k8s.statefulset.uid';\nconst TMP_K8S_STATEFULSET_NAME = 'k8s.statefulset.name';\nconst TMP_K8S_DAEMONSET_UID = 'k8s.daemonset.uid';\nconst TMP_K8S_DAEMONSET_NAME = 'k8s.daemonset.name';\nconst TMP_K8S_JOB_UID = 'k8s.job.uid';\nconst TMP_K8S_JOB_NAME = 'k8s.job.name';\nconst TMP_K8S_CRONJOB_UID = 'k8s.cronjob.uid';\nconst TMP_K8S_CRONJOB_NAME = 'k8s.cronjob.name';\nconst TMP_OS_TYPE = 'os.type';\nconst TMP_OS_DESCRIPTION = 'os.description';\nconst TMP_OS_NAME = 'os.name';\nconst TMP_OS_VERSION = 'os.version';\nconst TMP_PROCESS_PID = 'process.pid';\nconst TMP_PROCESS_EXECUTABLE_NAME = 'process.executable.name';\nconst TMP_PROCESS_EXECUTABLE_PATH = 'process.executable.path';\nconst TMP_PROCESS_COMMAND = 'process.command';\nconst TMP_PROCESS_COMMAND_LINE = 'process.command_line';\nconst TMP_PROCESS_COMMAND_ARGS = 'process.command_args';\nconst TMP_PROCESS_OWNER = 'process.owner';\nconst TMP_PROCESS_RUNTIME_NAME = 'process.runtime.name';\nconst TMP_PROCESS_RUNTIME_VERSION = 'process.runtime.version';\nconst TMP_PROCESS_RUNTIME_DESCRIPTION = 'process.runtime.description';\nconst TMP_SERVICE_NAME = 'service.name';\nconst TMP_SERVICE_NAMESPACE = 'service.namespace';\nconst TMP_SERVICE_INSTANCE_ID = 'service.instance.id';\nconst TMP_SERVICE_VERSION = 'service.version';\nconst TMP_TELEMETRY_SDK_NAME = 'telemetry.sdk.name';\nconst TMP_TELEMETRY_SDK_LANGUAGE = 'telemetry.sdk.language';\nconst TMP_TELEMETRY_SDK_VERSION = 'telemetry.sdk.version';\nconst TMP_TELEMETRY_AUTO_VERSION = 'telemetry.auto.version';\nconst TMP_WEBENGINE_NAME = 'webengine.name';\nconst TMP_WEBENGINE_VERSION = 'webengine.version';\nconst TMP_WEBENGINE_DESCRIPTION = 'webengine.description';\n/**\n * Name of the cloud provider.\n *\n * @deprecated Use ATTR_CLOUD_PROVIDER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_CLOUD_PROVIDER = TMP_CLOUD_PROVIDER;\n/**\n * The cloud account ID the resource is assigned to.\n *\n * @deprecated Use ATTR_CLOUD_ACCOUNT_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_CLOUD_ACCOUNT_ID = TMP_CLOUD_ACCOUNT_ID;\n/**\n * The geographical region the resource is running. Refer to your provider&#39;s docs to see the available regions, for example [Alibaba Cloud regions](https://www.alibabacloud.com/help/doc-detail/40654.htm), [AWS regions](https://aws.amazon.com/about-aws/global-infrastructure/regions_az/), [Azure regions](https://azure.microsoft.com/en-us/global-infrastructure/geographies/), or [Google Cloud regions](https://cloud.google.com/about/locations).\n *\n * @deprecated Use ATTR_CLOUD_REGION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_CLOUD_REGION = TMP_CLOUD_REGION;\n/**\n * Cloud regions often have multiple, isolated locations known as zones to increase availability. Availability zone represents the zone where the resource is running.\n *\n * Note: Availability zones are called &#34;zones&#34; on Alibaba Cloud and Google Cloud.\n *\n * @deprecated Use ATTR_CLOUD_AVAILABILITY_ZONE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_CLOUD_AVAILABILITY_ZONE = TMP_CLOUD_AVAILABILITY_ZONE;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use ATTR_CLOUD_PLATFORM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_CLOUD_PLATFORM = TMP_CLOUD_PLATFORM;\n/**\n * The Amazon Resource Name (ARN) of an [ECS container instance](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ECS_instances.html).\n *\n * @deprecated Use ATTR_AWS_ECS_CONTAINER_ARN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_AWS_ECS_CONTAINER_ARN = TMP_AWS_ECS_CONTAINER_ARN;\n/**\n * The ARN of an [ECS cluster](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/clusters.html).\n *\n * @deprecated Use ATTR_AWS_ECS_CLUSTER_ARN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_AWS_ECS_CLUSTER_ARN = TMP_AWS_ECS_CLUSTER_ARN;\n/**\n * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n *\n * @deprecated Use ATTR_AWS_ECS_LAUNCHTYPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_AWS_ECS_LAUNCHTYPE = TMP_AWS_ECS_LAUNCHTYPE;\n/**\n * The ARN of an [ECS task definition](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definitions.html).\n *\n * @deprecated Use ATTR_AWS_ECS_TASK_ARN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_AWS_ECS_TASK_ARN = TMP_AWS_ECS_TASK_ARN;\n/**\n * The task definition family this task definition is a member of.\n *\n * @deprecated Use ATTR_AWS_ECS_TASK_FAMILY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_AWS_ECS_TASK_FAMILY = TMP_AWS_ECS_TASK_FAMILY;\n/**\n * The revision for this task definition.\n *\n * @deprecated Use ATTR_AWS_ECS_TASK_REVISION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_AWS_ECS_TASK_REVISION = TMP_AWS_ECS_TASK_REVISION;\n/**\n * The ARN of an EKS cluster.\n *\n * @deprecated Use ATTR_AWS_EKS_CLUSTER_ARN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_AWS_EKS_CLUSTER_ARN = TMP_AWS_EKS_CLUSTER_ARN;\n/**\n * The name(s) of the AWS log group(s) an application is writing to.\n *\n * Note: Multiple log groups must be supported for cases like multi-container applications, where a single application has sidecar containers, and each write to their own log group.\n *\n * @deprecated Use ATTR_AWS_LOG_GROUP_NAMES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_AWS_LOG_GROUP_NAMES = TMP_AWS_LOG_GROUP_NAMES;\n/**\n * The Amazon Resource Name(s) (ARN) of the AWS log group(s).\n *\n * Note: See the [log group ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format).\n *\n * @deprecated Use ATTR_AWS_LOG_GROUP_ARNS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_AWS_LOG_GROUP_ARNS = TMP_AWS_LOG_GROUP_ARNS;\n/**\n * The name(s) of the AWS log stream(s) an application is writing to.\n *\n * @deprecated Use ATTR_AWS_LOG_STREAM_NAMES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_AWS_LOG_STREAM_NAMES = TMP_AWS_LOG_STREAM_NAMES;\n/**\n * The ARN(s) of the AWS log stream(s).\n *\n * Note: See the [log stream ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format). One log group can contain several log streams, so these ARNs necessarily identify both a log group and a log stream.\n *\n * @deprecated Use ATTR_AWS_LOG_STREAM_ARNS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_AWS_LOG_STREAM_ARNS = TMP_AWS_LOG_STREAM_ARNS;\n/**\n * Container name.\n *\n * @deprecated Use ATTR_CONTAINER_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_CONTAINER_NAME = TMP_CONTAINER_NAME;\n/**\n * Container ID. Usually a UUID, as for example used to [identify Docker containers](https://docs.docker.com/engine/reference/run/#container-identification). The UUID might be abbreviated.\n *\n * @deprecated Use ATTR_CONTAINER_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_CONTAINER_ID = TMP_CONTAINER_ID;\n/**\n * The container runtime managing this container.\n *\n * @deprecated Use ATTR_CONTAINER_RUNTIME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_CONTAINER_RUNTIME = TMP_CONTAINER_RUNTIME;\n/**\n * Name of the image the container was built on.\n *\n * @deprecated Use ATTR_CONTAINER_IMAGE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_CONTAINER_IMAGE_NAME = TMP_CONTAINER_IMAGE_NAME;\n/**\n * Container image tag.\n *\n * @deprecated Use ATTR_CONTAINER_IMAGE_TAGS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_CONTAINER_IMAGE_TAG = TMP_CONTAINER_IMAGE_TAG;\n/**\n * Name of the [deployment environment](https://en.wikipedia.org/wiki/Deployment_environment) (aka deployment tier).\n *\n * @deprecated Use ATTR_DEPLOYMENT_ENVIRONMENT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_DEPLOYMENT_ENVIRONMENT = TMP_DEPLOYMENT_ENVIRONMENT;\n/**\n * A unique identifier representing the device.\n *\n * Note: The device identifier MUST only be defined using the values outlined below. This value is not an advertising identifier and MUST NOT be used as such. On iOS (Swift or Objective-C), this value MUST be equal to the [vendor identifier](https://developer.apple.com/documentation/uikit/uidevice/1620059-identifierforvendor). On Android (Java or Kotlin), this value MUST be equal to the Firebase Installation ID or a globally unique UUID which is persisted across sessions in your application. More information can be found [here](https://developer.android.com/training/articles/user-data-ids) on best practices and exact implementation details. Caution should be taken when storing personal data or anything which can identify a user. GDPR and data protection laws may apply, ensure you do your own due diligence.\n *\n * @deprecated Use ATTR_DEVICE_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_DEVICE_ID = TMP_DEVICE_ID;\n/**\n * The model identifier for the device.\n *\n * Note: It&#39;s recommended this value represents a machine readable version of the model identifier rather than the market or consumer-friendly name of the device.\n *\n * @deprecated Use ATTR_DEVICE_MODEL_IDENTIFIER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_DEVICE_MODEL_IDENTIFIER = TMP_DEVICE_MODEL_IDENTIFIER;\n/**\n * The marketing name for the device model.\n *\n * Note: It&#39;s recommended this value represents a human readable version of the device model rather than a machine readable alternative.\n *\n * @deprecated Use ATTR_DEVICE_MODEL_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_DEVICE_MODEL_NAME = TMP_DEVICE_MODEL_NAME;\n/**\n * The name of the single function that this runtime instance executes.\n *\n * Note: This is the name of the function as configured/deployed on the FaaS platform and is usually different from the name of the callback function (which may be stored in the [`code.namespace`/`code.function`](../../trace/semantic_conventions/span-general.md#source-code-attributes) span attributes).\n *\n * @deprecated Use ATTR_FAAS_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_FAAS_NAME = TMP_FAAS_NAME;\n/**\n* The unique ID of the single function that this runtime instance executes.\n*\n* Note: Depending on the cloud provider, use:\n\n* **AWS Lambda:** The function [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html).\nTake care not to use the &#34;invoked ARN&#34; directly but replace any\n[alias suffix](https://docs.aws.amazon.com/lambda/latest/dg/configuration-aliases.html) with the resolved function version, as the same runtime instance may be invokable with multiple\ndifferent aliases.\n* **GCP:** The [URI of the resource](https://cloud.google.com/iam/docs/full-resource-names)\n* **Azure:** The [Fully Qualified Resource ID](https://docs.microsoft.com/en-us/rest/api/resources/resources/get-by-id).\n\nOn some providers, it may not be possible to determine the full ID at startup,\nwhich is why this field cannot be made required. For example, on AWS the account ID\npart of the ARN is not available without calling another AWS API\nwhich may be deemed too slow for a short-running lambda function.\nAs an alternative, consider setting `faas.id` as a span attribute instead.\n*\n* @deprecated Use ATTR_CLOUD_RESOURCE_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n*/\nexport const SEMRESATTRS_FAAS_ID = TMP_FAAS_ID;\n/**\n* The immutable version of the function being executed.\n*\n* Note: Depending on the cloud provider and platform, use:\n\n* **AWS Lambda:** The [function version](https://docs.aws.amazon.com/lambda/latest/dg/configuration-versions.html)\n  (an integer represented as a decimal string).\n* **Google Cloud Run:** The [revision](https://cloud.google.com/run/docs/managing/revisions)\n  (i.e., the function name plus the revision suffix).\n* **Google Cloud Functions:** The value of the\n  [`K_REVISION` environment variable](https://cloud.google.com/functions/docs/env-var#runtime_environment_variables_set_automatically).\n* **Azure Functions:** Not applicable. Do not set this attribute.\n*\n* @deprecated Use ATTR_FAAS_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n*/\nexport const SEMRESATTRS_FAAS_VERSION = TMP_FAAS_VERSION;\n/**\n * The execution environment ID as a string, that will be potentially reused for other invocations to the same function/function version.\n *\n * Note: * **AWS Lambda:** Use the (full) log stream name.\n *\n * @deprecated Use ATTR_FAAS_INSTANCE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_FAAS_INSTANCE = TMP_FAAS_INSTANCE;\n/**\n * The amount of memory available to the serverless function in MiB.\n *\n * Note: It&#39;s recommended to set this attribute since e.g. too little memory can easily stop a Java AWS Lambda function from working correctly. On AWS Lambda, the environment variable `AWS_LAMBDA_FUNCTION_MEMORY_SIZE` provides this information.\n *\n * @deprecated Use ATTR_FAAS_MAX_MEMORY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_FAAS_MAX_MEMORY = TMP_FAAS_MAX_MEMORY;\n/**\n * Unique host ID. For Cloud, this must be the instance_id assigned by the cloud provider.\n *\n * @deprecated Use ATTR_HOST_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_HOST_ID = TMP_HOST_ID;\n/**\n * Name of the host. On Unix systems, it may contain what the hostname command returns, or the fully qualified hostname, or another name specified by the user.\n *\n * @deprecated Use ATTR_HOST_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_HOST_NAME = TMP_HOST_NAME;\n/**\n * Type of host. For Cloud, this must be the machine type.\n *\n * @deprecated Use ATTR_HOST_TYPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_HOST_TYPE = TMP_HOST_TYPE;\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use ATTR_HOST_ARCH in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_HOST_ARCH = TMP_HOST_ARCH;\n/**\n * Name of the VM image or OS install the host was instantiated from.\n *\n * @deprecated Use ATTR_HOST_IMAGE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_HOST_IMAGE_NAME = TMP_HOST_IMAGE_NAME;\n/**\n * VM image ID. For Cloud, this value is from the provider.\n *\n * @deprecated Use ATTR_HOST_IMAGE_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_HOST_IMAGE_ID = TMP_HOST_IMAGE_ID;\n/**\n * The version string of the VM image as defined in [Version Attributes](README.md#version-attributes).\n *\n * @deprecated Use ATTR_HOST_IMAGE_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_HOST_IMAGE_VERSION = TMP_HOST_IMAGE_VERSION;\n/**\n * The name of the cluster.\n *\n * @deprecated Use ATTR_K8S_CLUSTER_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_CLUSTER_NAME = TMP_K8S_CLUSTER_NAME;\n/**\n * The name of the Node.\n *\n * @deprecated Use ATTR_K8S_NODE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_NODE_NAME = TMP_K8S_NODE_NAME;\n/**\n * The UID of the Node.\n *\n * @deprecated Use ATTR_K8S_NODE_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_NODE_UID = TMP_K8S_NODE_UID;\n/**\n * The name of the namespace that the pod is running in.\n *\n * @deprecated Use ATTR_K8S_NAMESPACE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_NAMESPACE_NAME = TMP_K8S_NAMESPACE_NAME;\n/**\n * The UID of the Pod.\n *\n * @deprecated Use ATTR_K8S_POD_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_POD_UID = TMP_K8S_POD_UID;\n/**\n * The name of the Pod.\n *\n * @deprecated Use ATTR_K8S_POD_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_POD_NAME = TMP_K8S_POD_NAME;\n/**\n * The name of the Container in a Pod template.\n *\n * @deprecated Use ATTR_K8S_CONTAINER_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_CONTAINER_NAME = TMP_K8S_CONTAINER_NAME;\n/**\n * The UID of the ReplicaSet.\n *\n * @deprecated Use ATTR_K8S_REPLICASET_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_REPLICASET_UID = TMP_K8S_REPLICASET_UID;\n/**\n * The name of the ReplicaSet.\n *\n * @deprecated Use ATTR_K8S_REPLICASET_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_REPLICASET_NAME = TMP_K8S_REPLICASET_NAME;\n/**\n * The UID of the Deployment.\n *\n * @deprecated Use ATTR_K8S_DEPLOYMENT_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_DEPLOYMENT_UID = TMP_K8S_DEPLOYMENT_UID;\n/**\n * The name of the Deployment.\n *\n * @deprecated Use ATTR_K8S_DEPLOYMENT_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_DEPLOYMENT_NAME = TMP_K8S_DEPLOYMENT_NAME;\n/**\n * The UID of the StatefulSet.\n *\n * @deprecated Use ATTR_K8S_STATEFULSET_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_STATEFULSET_UID = TMP_K8S_STATEFULSET_UID;\n/**\n * The name of the StatefulSet.\n *\n * @deprecated Use ATTR_K8S_STATEFULSET_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_STATEFULSET_NAME = TMP_K8S_STATEFULSET_NAME;\n/**\n * The UID of the DaemonSet.\n *\n * @deprecated Use ATTR_K8S_DAEMONSET_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_DAEMONSET_UID = TMP_K8S_DAEMONSET_UID;\n/**\n * The name of the DaemonSet.\n *\n * @deprecated Use ATTR_K8S_DAEMONSET_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_DAEMONSET_NAME = TMP_K8S_DAEMONSET_NAME;\n/**\n * The UID of the Job.\n *\n * @deprecated Use ATTR_K8S_JOB_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_JOB_UID = TMP_K8S_JOB_UID;\n/**\n * The name of the Job.\n *\n * @deprecated Use ATTR_K8S_JOB_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_JOB_NAME = TMP_K8S_JOB_NAME;\n/**\n * The UID of the CronJob.\n *\n * @deprecated Use ATTR_K8S_CRONJOB_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_CRONJOB_UID = TMP_K8S_CRONJOB_UID;\n/**\n * The name of the CronJob.\n *\n * @deprecated Use ATTR_K8S_CRONJOB_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_CRONJOB_NAME = TMP_K8S_CRONJOB_NAME;\n/**\n * The operating system type.\n *\n * @deprecated Use ATTR_OS_TYPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_OS_TYPE = TMP_OS_TYPE;\n/**\n * Human readable (not intended to be parsed) OS version information, like e.g. reported by `ver` or `lsb_release -a` commands.\n *\n * @deprecated Use ATTR_OS_DESCRIPTION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_OS_DESCRIPTION = TMP_OS_DESCRIPTION;\n/**\n * Human readable operating system name.\n *\n * @deprecated Use ATTR_OS_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_OS_NAME = TMP_OS_NAME;\n/**\n * The version string of the operating system as defined in [Version Attributes](../../resource/semantic_conventions/README.md#version-attributes).\n *\n * @deprecated Use ATTR_OS_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_OS_VERSION = TMP_OS_VERSION;\n/**\n * Process identifier (PID).\n *\n * @deprecated Use ATTR_PROCESS_PID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_PROCESS_PID = TMP_PROCESS_PID;\n/**\n * The name of the process executable. On Linux based systems, can be set to the `Name` in `proc/[pid]/status`. On Windows, can be set to the base name of `GetProcessImageFileNameW`.\n *\n * @deprecated Use ATTR_PROCESS_EXECUTABLE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_PROCESS_EXECUTABLE_NAME = TMP_PROCESS_EXECUTABLE_NAME;\n/**\n * The full path to the process executable. On Linux based systems, can be set to the target of `proc/[pid]/exe`. On Windows, can be set to the result of `GetProcessImageFileNameW`.\n *\n * @deprecated Use ATTR_PROCESS_EXECUTABLE_PATH in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_PROCESS_EXECUTABLE_PATH = TMP_PROCESS_EXECUTABLE_PATH;\n/**\n * The command used to launch the process (i.e. the command name). On Linux based systems, can be set to the zeroth string in `proc/[pid]/cmdline`. On Windows, can be set to the first parameter extracted from `GetCommandLineW`.\n *\n * @deprecated Use ATTR_PROCESS_COMMAND in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_PROCESS_COMMAND = TMP_PROCESS_COMMAND;\n/**\n * The full command used to launch the process as a single string representing the full command. On Windows, can be set to the result of `GetCommandLineW`. Do not set this if you have to assemble it just for monitoring; use `process.command_args` instead.\n *\n * @deprecated Use ATTR_PROCESS_COMMAND_LINE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_PROCESS_COMMAND_LINE = TMP_PROCESS_COMMAND_LINE;\n/**\n * All the command arguments (including the command/executable itself) as received by the process. On Linux-based systems (and some other Unixoid systems supporting procfs), can be set according to the list of null-delimited strings extracted from `proc/[pid]/cmdline`. For libc-based executables, this would be the full argv vector passed to `main`.\n *\n * @deprecated Use ATTR_PROCESS_COMMAND_ARGS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_PROCESS_COMMAND_ARGS = TMP_PROCESS_COMMAND_ARGS;\n/**\n * The username of the user that owns the process.\n *\n * @deprecated Use ATTR_PROCESS_OWNER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_PROCESS_OWNER = TMP_PROCESS_OWNER;\n/**\n * The name of the runtime of this process. For compiled native binaries, this SHOULD be the name of the compiler.\n *\n * @deprecated Use ATTR_PROCESS_RUNTIME_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_PROCESS_RUNTIME_NAME = TMP_PROCESS_RUNTIME_NAME;\n/**\n * The version of the runtime of this process, as returned by the runtime without modification.\n *\n * @deprecated Use ATTR_PROCESS_RUNTIME_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_PROCESS_RUNTIME_VERSION = TMP_PROCESS_RUNTIME_VERSION;\n/**\n * An additional description about the runtime of the process, for example a specific vendor customization of the runtime environment.\n *\n * @deprecated Use ATTR_PROCESS_RUNTIME_DESCRIPTION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_PROCESS_RUNTIME_DESCRIPTION = TMP_PROCESS_RUNTIME_DESCRIPTION;\n/**\n * Logical name of the service.\n *\n * Note: MUST be the same for all instances of horizontally scaled services. If the value was not specified, SDKs MUST fallback to `unknown_service:` concatenated with [`process.executable.name`](process.md#process), e.g. `unknown_service:bash`. If `process.executable.name` is not available, the value MUST be set to `unknown_service`.\n *\n * @deprecated Use ATTR_SERVICE_NAME.\n */\nexport const SEMRESATTRS_SERVICE_NAME = TMP_SERVICE_NAME;\n/**\n * A namespace for `service.name`.\n *\n * Note: A string value having a meaning that helps to distinguish a group of services, for example the team name that owns a group of services. `service.name` is expected to be unique within the same namespace. If `service.namespace` is not specified in the Resource then `service.name` is expected to be unique for all services that have no explicit namespace defined (so the empty/unspecified namespace is simply one more valid namespace). Zero-length namespace string is assumed equal to unspecified namespace.\n *\n * @deprecated Use ATTR_SERVICE_NAMESPACE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_SERVICE_NAMESPACE = TMP_SERVICE_NAMESPACE;\n/**\n * The string ID of the service instance.\n *\n * Note: MUST be unique for each instance of the same `service.namespace,service.name` pair (in other words `service.namespace,service.name,service.instance.id` triplet MUST be globally unique). The ID helps to distinguish instances of the same service that exist at the same time (e.g. instances of a horizontally scaled service). It is preferable for the ID to be persistent and stay the same for the lifetime of the service instance, however it is acceptable that the ID is ephemeral and changes during important lifetime events for the service (e.g. service restarts). If the service has no inherent unique ID that can be used as the value of this attribute it is recommended to generate a random Version 1 or Version 4 RFC 4122 UUID (services aiming for reproducible UUIDs may also use Version 5, see RFC 4122 for more recommendations).\n *\n * @deprecated Use ATTR_SERVICE_INSTANCE_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_SERVICE_INSTANCE_ID = TMP_SERVICE_INSTANCE_ID;\n/**\n * The version string of the service API or implementation.\n *\n * @deprecated Use ATTR_SERVICE_VERSION.\n */\nexport const SEMRESATTRS_SERVICE_VERSION = TMP_SERVICE_VERSION;\n/**\n * The name of the telemetry SDK as defined above.\n *\n * @deprecated Use ATTR_TELEMETRY_SDK_NAME.\n */\nexport const SEMRESATTRS_TELEMETRY_SDK_NAME = TMP_TELEMETRY_SDK_NAME;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use ATTR_TELEMETRY_SDK_LANGUAGE.\n */\nexport const SEMRESATTRS_TELEMETRY_SDK_LANGUAGE = TMP_TELEMETRY_SDK_LANGUAGE;\n/**\n * The version string of the telemetry SDK.\n *\n * @deprecated Use ATTR_TELEMETRY_SDK_VERSION.\n */\nexport const SEMRESATTRS_TELEMETRY_SDK_VERSION = TMP_TELEMETRY_SDK_VERSION;\n/**\n * The version string of the auto instrumentation agent, if used.\n *\n * @deprecated Use ATTR_TELEMETRY_DISTRO_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_TELEMETRY_AUTO_VERSION = TMP_TELEMETRY_AUTO_VERSION;\n/**\n * The name of the web engine.\n *\n * @deprecated Use ATTR_WEBENGINE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_WEBENGINE_NAME = TMP_WEBENGINE_NAME;\n/**\n * The version of the web engine.\n *\n * @deprecated Use ATTR_WEBENGINE_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_WEBENGINE_VERSION = TMP_WEBENGINE_VERSION;\n/**\n * Additional description of the web engine (e.g. detailed version and edition information).\n *\n * @deprecated Use ATTR_WEBENGINE_DESCRIPTION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_WEBENGINE_DESCRIPTION = TMP_WEBENGINE_DESCRIPTION;\n/**\n * Create exported Value Map for SemanticResourceAttributes values\n * @deprecated Use the SEMRESATTRS_XXXXX constants rather than the SemanticResourceAttributes.XXXXX for bundle minification\n */\nexport const SemanticResourceAttributes = \n/*#__PURE__*/ createConstMap([\n    TMP_CLOUD_PROVIDER,\n    TMP_CLOUD_ACCOUNT_ID,\n    TMP_CLOUD_REGION,\n    TMP_CLOUD_AVAILABILITY_ZONE,\n    TMP_CLOUD_PLATFORM,\n    TMP_AWS_ECS_CONTAINER_ARN,\n    TMP_AWS_ECS_CLUSTER_ARN,\n    TMP_AWS_ECS_LAUNCHTYPE,\n    TMP_AWS_ECS_TASK_ARN,\n    TMP_AWS_ECS_TASK_FAMILY,\n    TMP_AWS_ECS_TASK_REVISION,\n    TMP_AWS_EKS_CLUSTER_ARN,\n    TMP_AWS_LOG_GROUP_NAMES,\n    TMP_AWS_LOG_GROUP_ARNS,\n    TMP_AWS_LOG_STREAM_NAMES,\n    TMP_AWS_LOG_STREAM_ARNS,\n    TMP_CONTAINER_NAME,\n    TMP_CONTAINER_ID,\n    TMP_CONTAINER_RUNTIME,\n    TMP_CONTAINER_IMAGE_NAME,\n    TMP_CONTAINER_IMAGE_TAG,\n    TMP_DEPLOYMENT_ENVIRONMENT,\n    TMP_DEVICE_ID,\n    TMP_DEVICE_MODEL_IDENTIFIER,\n    TMP_DEVICE_MODEL_NAME,\n    TMP_FAAS_NAME,\n    TMP_FAAS_ID,\n    TMP_FAAS_VERSION,\n    TMP_FAAS_INSTANCE,\n    TMP_FAAS_MAX_MEMORY,\n    TMP_HOST_ID,\n    TMP_HOST_NAME,\n    TMP_HOST_TYPE,\n    TMP_HOST_ARCH,\n    TMP_HOST_IMAGE_NAME,\n    TMP_HOST_IMAGE_ID,\n    TMP_HOST_IMAGE_VERSION,\n    TMP_K8S_CLUSTER_NAME,\n    TMP_K8S_NODE_NAME,\n    TMP_K8S_NODE_UID,\n    TMP_K8S_NAMESPACE_NAME,\n    TMP_K8S_POD_UID,\n    TMP_K8S_POD_NAME,\n    TMP_K8S_CONTAINER_NAME,\n    TMP_K8S_REPLICASET_UID,\n    TMP_K8S_REPLICASET_NAME,\n    TMP_K8S_DEPLOYMENT_UID,\n    TMP_K8S_DEPLOYMENT_NAME,\n    TMP_K8S_STATEFULSET_UID,\n    TMP_K8S_STATEFULSET_NAME,\n    TMP_K8S_DAEMONSET_UID,\n    TMP_K8S_DAEMONSET_NAME,\n    TMP_K8S_JOB_UID,\n    TMP_K8S_JOB_NAME,\n    TMP_K8S_CRONJOB_UID,\n    TMP_K8S_CRONJOB_NAME,\n    TMP_OS_TYPE,\n    TMP_OS_DESCRIPTION,\n    TMP_OS_NAME,\n    TMP_OS_VERSION,\n    TMP_PROCESS_PID,\n    TMP_PROCESS_EXECUTABLE_NAME,\n    TMP_PROCESS_EXECUTABLE_PATH,\n    TMP_PROCESS_COMMAND,\n    TMP_PROCESS_COMMAND_LINE,\n    TMP_PROCESS_COMMAND_ARGS,\n    TMP_PROCESS_OWNER,\n    TMP_PROCESS_RUNTIME_NAME,\n    TMP_PROCESS_RUNTIME_VERSION,\n    TMP_PROCESS_RUNTIME_DESCRIPTION,\n    TMP_SERVICE_NAME,\n    TMP_SERVICE_NAMESPACE,\n    TMP_SERVICE_INSTANCE_ID,\n    TMP_SERVICE_VERSION,\n    TMP_TELEMETRY_SDK_NAME,\n    TMP_TELEMETRY_SDK_LANGUAGE,\n    TMP_TELEMETRY_SDK_VERSION,\n    TMP_TELEMETRY_AUTO_VERSION,\n    TMP_WEBENGINE_NAME,\n    TMP_WEBENGINE_VERSION,\n    TMP_WEBENGINE_DESCRIPTION,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for CloudProviderValues enum definition\n *\n * Name of the cloud provider.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_CLOUDPROVIDERVALUES_ALIBABA_CLOUD = 'alibaba_cloud';\nconst TMP_CLOUDPROVIDERVALUES_AWS = 'aws';\nconst TMP_CLOUDPROVIDERVALUES_AZURE = 'azure';\nconst TMP_CLOUDPROVIDERVALUES_GCP = 'gcp';\n/**\n * Name of the cloud provider.\n *\n * @deprecated Use CLOUD_PROVIDER_VALUE_ALIBABA_CLOUD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPROVIDERVALUES_ALIBABA_CLOUD = TMP_CLOUDPROVIDERVALUES_ALIBABA_CLOUD;\n/**\n * Name of the cloud provider.\n *\n * @deprecated Use CLOUD_PROVIDER_VALUE_AWS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPROVIDERVALUES_AWS = TMP_CLOUDPROVIDERVALUES_AWS;\n/**\n * Name of the cloud provider.\n *\n * @deprecated Use CLOUD_PROVIDER_VALUE_AZURE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPROVIDERVALUES_AZURE = TMP_CLOUDPROVIDERVALUES_AZURE;\n/**\n * Name of the cloud provider.\n *\n * @deprecated Use CLOUD_PROVIDER_VALUE_GCP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPROVIDERVALUES_GCP = TMP_CLOUDPROVIDERVALUES_GCP;\n/**\n * The constant map of values for CloudProviderValues.\n * @deprecated Use the CLOUDPROVIDERVALUES_XXXXX constants rather than the CloudProviderValues.XXXXX for bundle minification.\n */\nexport const CloudProviderValues = \n/*#__PURE__*/ createConstMap([\n    TMP_CLOUDPROVIDERVALUES_ALIBABA_CLOUD,\n    TMP_CLOUDPROVIDERVALUES_AWS,\n    TMP_CLOUDPROVIDERVALUES_AZURE,\n    TMP_CLOUDPROVIDERVALUES_GCP,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for CloudPlatformValues enum definition\n *\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_ECS = 'alibaba_cloud_ecs';\nconst TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_FC = 'alibaba_cloud_fc';\nconst TMP_CLOUDPLATFORMVALUES_AWS_EC2 = 'aws_ec2';\nconst TMP_CLOUDPLATFORMVALUES_AWS_ECS = 'aws_ecs';\nconst TMP_CLOUDPLATFORMVALUES_AWS_EKS = 'aws_eks';\nconst TMP_CLOUDPLATFORMVALUES_AWS_LAMBDA = 'aws_lambda';\nconst TMP_CLOUDPLATFORMVALUES_AWS_ELASTIC_BEANSTALK = 'aws_elastic_beanstalk';\nconst TMP_CLOUDPLATFORMVALUES_AZURE_VM = 'azure_vm';\nconst TMP_CLOUDPLATFORMVALUES_AZURE_CONTAINER_INSTANCES = 'azure_container_instances';\nconst TMP_CLOUDPLATFORMVALUES_AZURE_AKS = 'azure_aks';\nconst TMP_CLOUDPLATFORMVALUES_AZURE_FUNCTIONS = 'azure_functions';\nconst TMP_CLOUDPLATFORMVALUES_AZURE_APP_SERVICE = 'azure_app_service';\nconst TMP_CLOUDPLATFORMVALUES_GCP_COMPUTE_ENGINE = 'gcp_compute_engine';\nconst TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_RUN = 'gcp_cloud_run';\nconst TMP_CLOUDPLATFORMVALUES_GCP_KUBERNETES_ENGINE = 'gcp_kubernetes_engine';\nconst TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_FUNCTIONS = 'gcp_cloud_functions';\nconst TMP_CLOUDPLATFORMVALUES_GCP_APP_ENGINE = 'gcp_app_engine';\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_ALIBABA_CLOUD_ECS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_ALIBABA_CLOUD_ECS = TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_ECS;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_ALIBABA_CLOUD_FC in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_ALIBABA_CLOUD_FC = TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_FC;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AWS_EC2 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_AWS_EC2 = TMP_CLOUDPLATFORMVALUES_AWS_EC2;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AWS_ECS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_AWS_ECS = TMP_CLOUDPLATFORMVALUES_AWS_ECS;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AWS_EKS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_AWS_EKS = TMP_CLOUDPLATFORMVALUES_AWS_EKS;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AWS_LAMBDA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_AWS_LAMBDA = TMP_CLOUDPLATFORMVALUES_AWS_LAMBDA;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AWS_ELASTIC_BEANSTALK in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_AWS_ELASTIC_BEANSTALK = TMP_CLOUDPLATFORMVALUES_AWS_ELASTIC_BEANSTALK;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AZURE_VM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_AZURE_VM = TMP_CLOUDPLATFORMVALUES_AZURE_VM;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AZURE_CONTAINER_INSTANCES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_AZURE_CONTAINER_INSTANCES = TMP_CLOUDPLATFORMVALUES_AZURE_CONTAINER_INSTANCES;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AZURE_AKS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_AZURE_AKS = TMP_CLOUDPLATFORMVALUES_AZURE_AKS;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AZURE_FUNCTIONS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_AZURE_FUNCTIONS = TMP_CLOUDPLATFORMVALUES_AZURE_FUNCTIONS;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AZURE_APP_SERVICE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_AZURE_APP_SERVICE = TMP_CLOUDPLATFORMVALUES_AZURE_APP_SERVICE;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_GCP_COMPUTE_ENGINE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_GCP_COMPUTE_ENGINE = TMP_CLOUDPLATFORMVALUES_GCP_COMPUTE_ENGINE;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_GCP_CLOUD_RUN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_GCP_CLOUD_RUN = TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_RUN;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_GCP_KUBERNETES_ENGINE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_GCP_KUBERNETES_ENGINE = TMP_CLOUDPLATFORMVALUES_GCP_KUBERNETES_ENGINE;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_GCP_CLOUD_FUNCTIONS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_GCP_CLOUD_FUNCTIONS = TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_FUNCTIONS;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_GCP_APP_ENGINE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_GCP_APP_ENGINE = TMP_CLOUDPLATFORMVALUES_GCP_APP_ENGINE;\n/**\n * The constant map of values for CloudPlatformValues.\n * @deprecated Use the CLOUDPLATFORMVALUES_XXXXX constants rather than the CloudPlatformValues.XXXXX for bundle minification.\n */\nexport const CloudPlatformValues = \n/*#__PURE__*/ createConstMap([\n    TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_ECS,\n    TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_FC,\n    TMP_CLOUDPLATFORMVALUES_AWS_EC2,\n    TMP_CLOUDPLATFORMVALUES_AWS_ECS,\n    TMP_CLOUDPLATFORMVALUES_AWS_EKS,\n    TMP_CLOUDPLATFORMVALUES_AWS_LAMBDA,\n    TMP_CLOUDPLATFORMVALUES_AWS_ELASTIC_BEANSTALK,\n    TMP_CLOUDPLATFORMVALUES_AZURE_VM,\n    TMP_CLOUDPLATFORMVALUES_AZURE_CONTAINER_INSTANCES,\n    TMP_CLOUDPLATFORMVALUES_AZURE_AKS,\n    TMP_CLOUDPLATFORMVALUES_AZURE_FUNCTIONS,\n    TMP_CLOUDPLATFORMVALUES_AZURE_APP_SERVICE,\n    TMP_CLOUDPLATFORMVALUES_GCP_COMPUTE_ENGINE,\n    TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_RUN,\n    TMP_CLOUDPLATFORMVALUES_GCP_KUBERNETES_ENGINE,\n    TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_FUNCTIONS,\n    TMP_CLOUDPLATFORMVALUES_GCP_APP_ENGINE,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for AwsEcsLaunchtypeValues enum definition\n *\n * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_AWSECSLAUNCHTYPEVALUES_EC2 = 'ec2';\nconst TMP_AWSECSLAUNCHTYPEVALUES_FARGATE = 'fargate';\n/**\n * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n *\n * @deprecated Use AWS_ECS_LAUNCHTYPE_VALUE_EC2 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const AWSECSLAUNCHTYPEVALUES_EC2 = TMP_AWSECSLAUNCHTYPEVALUES_EC2;\n/**\n * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n *\n * @deprecated Use AWS_ECS_LAUNCHTYPE_VALUE_FARGATE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const AWSECSLAUNCHTYPEVALUES_FARGATE = TMP_AWSECSLAUNCHTYPEVALUES_FARGATE;\n/**\n * The constant map of values for AwsEcsLaunchtypeValues.\n * @deprecated Use the AWSECSLAUNCHTYPEVALUES_XXXXX constants rather than the AwsEcsLaunchtypeValues.XXXXX for bundle minification.\n */\nexport const AwsEcsLaunchtypeValues = \n/*#__PURE__*/ createConstMap([\n    TMP_AWSECSLAUNCHTYPEVALUES_EC2,\n    TMP_AWSECSLAUNCHTYPEVALUES_FARGATE,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for HostArchValues enum definition\n *\n * The CPU architecture the host system is running on.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_HOSTARCHVALUES_AMD64 = 'amd64';\nconst TMP_HOSTARCHVALUES_ARM32 = 'arm32';\nconst TMP_HOSTARCHVALUES_ARM64 = 'arm64';\nconst TMP_HOSTARCHVALUES_IA64 = 'ia64';\nconst TMP_HOSTARCHVALUES_PPC32 = 'ppc32';\nconst TMP_HOSTARCHVALUES_PPC64 = 'ppc64';\nconst TMP_HOSTARCHVALUES_X86 = 'x86';\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_AMD64 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const HOSTARCHVALUES_AMD64 = TMP_HOSTARCHVALUES_AMD64;\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_ARM32 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const HOSTARCHVALUES_ARM32 = TMP_HOSTARCHVALUES_ARM32;\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_ARM64 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const HOSTARCHVALUES_ARM64 = TMP_HOSTARCHVALUES_ARM64;\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_IA64 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const HOSTARCHVALUES_IA64 = TMP_HOSTARCHVALUES_IA64;\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_PPC32 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const HOSTARCHVALUES_PPC32 = TMP_HOSTARCHVALUES_PPC32;\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_PPC64 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const HOSTARCHVALUES_PPC64 = TMP_HOSTARCHVALUES_PPC64;\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_X86 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const HOSTARCHVALUES_X86 = TMP_HOSTARCHVALUES_X86;\n/**\n * The constant map of values for HostArchValues.\n * @deprecated Use the HOSTARCHVALUES_XXXXX constants rather than the HostArchValues.XXXXX for bundle minification.\n */\nexport const HostArchValues = \n/*#__PURE__*/ createConstMap([\n    TMP_HOSTARCHVALUES_AMD64,\n    TMP_HOSTARCHVALUES_ARM32,\n    TMP_HOSTARCHVALUES_ARM64,\n    TMP_HOSTARCHVALUES_IA64,\n    TMP_HOSTARCHVALUES_PPC32,\n    TMP_HOSTARCHVALUES_PPC64,\n    TMP_HOSTARCHVALUES_X86,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for OsTypeValues enum definition\n *\n * The operating system type.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_OSTYPEVALUES_WINDOWS = 'windows';\nconst TMP_OSTYPEVALUES_LINUX = 'linux';\nconst TMP_OSTYPEVALUES_DARWIN = 'darwin';\nconst TMP_OSTYPEVALUES_FREEBSD = 'freebsd';\nconst TMP_OSTYPEVALUES_NETBSD = 'netbsd';\nconst TMP_OSTYPEVALUES_OPENBSD = 'openbsd';\nconst TMP_OSTYPEVALUES_DRAGONFLYBSD = 'dragonflybsd';\nconst TMP_OSTYPEVALUES_HPUX = 'hpux';\nconst TMP_OSTYPEVALUES_AIX = 'aix';\nconst TMP_OSTYPEVALUES_SOLARIS = 'solaris';\nconst TMP_OSTYPEVALUES_Z_OS = 'z_os';\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_WINDOWS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const OSTYPEVALUES_WINDOWS = TMP_OSTYPEVALUES_WINDOWS;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_LINUX in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const OSTYPEVALUES_LINUX = TMP_OSTYPEVALUES_LINUX;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_DARWIN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const OSTYPEVALUES_DARWIN = TMP_OSTYPEVALUES_DARWIN;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_FREEBSD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const OSTYPEVALUES_FREEBSD = TMP_OSTYPEVALUES_FREEBSD;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_NETBSD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const OSTYPEVALUES_NETBSD = TMP_OSTYPEVALUES_NETBSD;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_OPENBSD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const OSTYPEVALUES_OPENBSD = TMP_OSTYPEVALUES_OPENBSD;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_DRAGONFLYBSD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const OSTYPEVALUES_DRAGONFLYBSD = TMP_OSTYPEVALUES_DRAGONFLYBSD;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_HPUX in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const OSTYPEVALUES_HPUX = TMP_OSTYPEVALUES_HPUX;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_AIX in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const OSTYPEVALUES_AIX = TMP_OSTYPEVALUES_AIX;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_SOLARIS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const OSTYPEVALUES_SOLARIS = TMP_OSTYPEVALUES_SOLARIS;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_Z_OS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const OSTYPEVALUES_Z_OS = TMP_OSTYPEVALUES_Z_OS;\n/**\n * The constant map of values for OsTypeValues.\n * @deprecated Use the OSTYPEVALUES_XXXXX constants rather than the OsTypeValues.XXXXX for bundle minification.\n */\nexport const OsTypeValues = \n/*#__PURE__*/ createConstMap([\n    TMP_OSTYPEVALUES_WINDOWS,\n    TMP_OSTYPEVALUES_LINUX,\n    TMP_OSTYPEVALUES_DARWIN,\n    TMP_OSTYPEVALUES_FREEBSD,\n    TMP_OSTYPEVALUES_NETBSD,\n    TMP_OSTYPEVALUES_OPENBSD,\n    TMP_OSTYPEVALUES_DRAGONFLYBSD,\n    TMP_OSTYPEVALUES_HPUX,\n    TMP_OSTYPEVALUES_AIX,\n    TMP_OSTYPEVALUES_SOLARIS,\n    TMP_OSTYPEVALUES_Z_OS,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for TelemetrySdkLanguageValues enum definition\n *\n * The language of the telemetry SDK.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_TELEMETRYSDKLANGUAGEVALUES_CPP = 'cpp';\nconst TMP_TELEMETRYSDKLANGUAGEVALUES_DOTNET = 'dotnet';\nconst TMP_TELEMETRYSDKLANGUAGEVALUES_ERLANG = 'erlang';\nconst TMP_TELEMETRYSDKLANGUAGEVALUES_GO = 'go';\nconst TMP_TELEMETRYSDKLANGUAGEVALUES_JAVA = 'java';\nconst TMP_TELEMETRYSDKLANGUAGEVALUES_NODEJS = 'nodejs';\nconst TMP_TELEMETRYSDKLANGUAGEVALUES_PHP = 'php';\nconst TMP_TELEMETRYSDKLANGUAGEVALUES_PYTHON = 'python';\nconst TMP_TELEMETRYSDKLANGUAGEVALUES_RUBY = 'ruby';\nconst TMP_TELEMETRYSDKLANGUAGEVALUES_WEBJS = 'webjs';\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_CPP.\n */\nexport const TELEMETRYSDKLANGUAGEVALUES_CPP = TMP_TELEMETRYSDKLANGUAGEVALUES_CPP;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_DOTNET.\n */\nexport const TELEMETRYSDKLANGUAGEVALUES_DOTNET = TMP_TELEMETRYSDKLANGUAGEVALUES_DOTNET;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_ERLANG.\n */\nexport const TELEMETRYSDKLANGUAGEVALUES_ERLANG = TMP_TELEMETRYSDKLANGUAGEVALUES_ERLANG;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_GO.\n */\nexport const TELEMETRYSDKLANGUAGEVALUES_GO = TMP_TELEMETRYSDKLANGUAGEVALUES_GO;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_JAVA.\n */\nexport const TELEMETRYSDKLANGUAGEVALUES_JAVA = TMP_TELEMETRYSDKLANGUAGEVALUES_JAVA;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_NODEJS.\n */\nexport const TELEMETRYSDKLANGUAGEVALUES_NODEJS = TMP_TELEMETRYSDKLANGUAGEVALUES_NODEJS;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_PHP.\n */\nexport const TELEMETRYSDKLANGUAGEVALUES_PHP = TMP_TELEMETRYSDKLANGUAGEVALUES_PHP;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_PYTHON.\n */\nexport const TELEMETRYSDKLANGUAGEVALUES_PYTHON = TMP_TELEMETRYSDKLANGUAGEVALUES_PYTHON;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_RUBY.\n */\nexport const TELEMETRYSDKLANGUAGEVALUES_RUBY = TMP_TELEMETRYSDKLANGUAGEVALUES_RUBY;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_WEBJS.\n */\nexport const TELEMETRYSDKLANGUAGEVALUES_WEBJS = TMP_TELEMETRYSDKLANGUAGEVALUES_WEBJS;\n/**\n * The constant map of values for TelemetrySdkLanguageValues.\n * @deprecated Use the TELEMETRYSDKLANGUAGEVALUES_XXXXX constants rather than the TelemetrySdkLanguageValues.XXXXX for bundle minification.\n */\nexport const TelemetrySdkLanguageValues = \n/*#__PURE__*/ createConstMap([\n    TMP_TELEMETRYSDKLANGUAGEVALUES_CPP,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_DOTNET,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_ERLANG,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_GO,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_JAVA,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_NODEJS,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_PHP,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_PYTHON,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_RUBY,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_WEBJS,\n]);\n//# sourceMappingURL=SemanticResourceAttributes.js.map","import {\n  FieldType,\n  NodeGraphDataFrameFieldNames as Fields,\n  DataFrameView,\n  DataFrame,\n  MutableDataFrame,\n} from '@grafana/data';\n\nexport function createNodeGraphFrames(data: DataFrame): DataFrame[] {\n  const { nodes, edges } = convertTraceToGraph(data);\n  const [nodesFrame, edgesFrame] = makeFrames();\n\n  for (const node of nodes) {\n    nodesFrame.add(node);\n  }\n  for (const edge of edges) {\n    edgesFrame.add(edge);\n  }\n\n  return [nodesFrame, edgesFrame];\n}\n\nfunction convertTraceToGraph(data: DataFrame): { nodes: Node[]; edges: Edge[] } {\n  const nodes: Node[] = [];\n  const edges: Edge[] = [];\n\n  const view = new DataFrameView<TraceRow>(data);\n\n  const traceDuration = findTraceDuration(view);\n  const spanMap = makeSpanMap((index) => {\n    if (index >= data.length) {\n      return undefined;\n    }\n    const span = view.get(index);\n    return {\n      span: { ...span },\n      id: span.spanID,\n      parentIds: span.parentSpanID ? [span.parentSpanID] : [],\n    };\n  });\n\n  for (let i = 0; i < view.length; i++) {\n    const row = view.get(i);\n\n    const ranges: Array<[number, number]> = spanMap[row.spanID].children.map((c) => {\n      const span = spanMap[c].span;\n      return [span.startTime, span.startTime + span.duration];\n    });\n    const childrenDuration = getNonOverlappingDuration(ranges);\n    const selfDuration = row.duration - childrenDuration;\n    const stats = getStats(row.duration, traceDuration, selfDuration);\n\n    nodes.push({\n      [Fields.id]: row.spanID,\n      [Fields.title]: row.serviceName ?? '',\n      [Fields.subTitle]: row.operationName,\n      [Fields.mainStat]: stats.main,\n      [Fields.secondaryStat]: stats.secondary,\n      [Fields.color]: selfDuration / traceDuration,\n    });\n\n    // Sometimes some span can be missing. Don't add edges for those.\n    if (row.parentSpanID && spanMap[row.parentSpanID].span) {\n      edges.push({\n        [Fields.id]: row.parentSpanID + '--' + row.spanID,\n        [Fields.target]: row.spanID,\n        [Fields.source]: row.parentSpanID,\n      });\n    }\n  }\n\n  return { nodes, edges };\n}\n\n/**\n * Get non overlapping duration of the ranges as they can overlap or have gaps.\n */\nexport function getNonOverlappingDuration(ranges: Array<[number, number]>): number {\n  ranges.sort((a, b) => a[0] - b[0]);\n  const mergedRanges = ranges.reduce<Array<[number, number]>>((acc, range) => {\n    if (!acc.length) {\n      return [range];\n    }\n    const tail = acc.slice(-1)[0];\n    const [prevStart, prevEnd] = tail;\n    const [start, end] = range;\n    if (end < prevEnd) {\n      // In this case the range is completely inside the prev range so we can just ignore it.\n      return acc;\n    }\n\n    if (start > prevEnd) {\n      // There is no overlap so we can just add it to stack\n      return [...acc, range];\n    }\n\n    // We know there is overlap and current range ends later than previous so we can just extend the range\n    return [...acc.slice(0, -1), [prevStart, end]];\n  }, []);\n\n  return mergedRanges.reduce((acc, range) => {\n    return acc + (range[1] - range[0]);\n  }, 0);\n}\n\n/**\n * Returns a map of the spans with children array for easier processing. It will also contain empty spans in case\n * span is missing but other spans are its children. This is more generic because it needs to allow iterating over\n * both arrays and dataframe views.\n */\nexport function makeSpanMap<T>(getSpan: (index: number) => { span: T; id: string; parentIds: string[] } | undefined): {\n  [id: string]: { span: T; children: string[] };\n} {\n  const spanMap: { [id: string]: { span?: T; children: string[] } } = {};\n\n  let span;\n  for (let index = 0; (span = getSpan(index)), !!span; index++) {\n    if (!spanMap[span.id]) {\n      spanMap[span.id] = {\n        span: span.span,\n        children: [],\n      };\n    } else {\n      spanMap[span.id].span = span.span;\n    }\n\n    for (const parentId of span.parentIds) {\n      if (parentId) {\n        if (!spanMap[parentId]) {\n          spanMap[parentId] = {\n            span: undefined,\n            children: [span.id],\n          };\n        } else {\n          spanMap[parentId].children.push(span.id);\n        }\n      }\n    }\n  }\n  // Discussion on this type assertion here: https://github.com/grafana/grafana/pull/80362/files#r1451019375\n  return spanMap as { [id: string]: { span: T; children: string[] } };\n}\n\nexport function getStats(duration: number, traceDuration: number, selfDuration: number) {\n  return {\n    main: `${toFixedNoTrailingZeros(duration)}ms (${toFixedNoTrailingZeros((duration / traceDuration) * 100)}%)`,\n    secondary: `${toFixedNoTrailingZeros(selfDuration)}ms (${toFixedNoTrailingZeros(\n      (selfDuration / duration) * 100\n    )}%)`,\n  };\n}\n\nfunction toFixedNoTrailingZeros(n: number) {\n  return parseFloat(n.toFixed(2));\n}\n\n/**\n * Create default frames used when returning data for node graph.\n */\nexport function makeFrames() {\n  const nodesFrame = new MutableDataFrame({\n    fields: [\n      { name: Fields.id, type: FieldType.string },\n      { name: Fields.title, type: FieldType.string },\n      { name: Fields.subTitle, type: FieldType.string },\n      { name: Fields.mainStat, type: FieldType.string, config: { displayName: 'Total time (% of trace)' } },\n      { name: Fields.secondaryStat, type: FieldType.string, config: { displayName: 'Self time (% of total)' } },\n      {\n        name: Fields.color,\n        type: FieldType.number,\n        config: { color: { mode: 'continuous-GrYlRd' }, displayName: 'Self time / Trace duration' },\n      },\n    ],\n    meta: {\n      preferredVisualisationType: 'nodeGraph',\n    },\n  });\n\n  const edgesFrame = new MutableDataFrame({\n    fields: [\n      { name: Fields.id, type: FieldType.string },\n      { name: Fields.target, type: FieldType.string },\n      { name: Fields.source, type: FieldType.string },\n    ],\n    meta: {\n      preferredVisualisationType: 'nodeGraph',\n    },\n  });\n\n  return [nodesFrame, edgesFrame];\n}\n\n/**\n * Get the duration of the whole trace as it isn't a part of the response data.\n * Note: Seems like this should be the same as just longest span, but this is probably safer.\n */\nfunction findTraceDuration(view: DataFrameView<TraceRow>): number {\n  let traceEndTime = 0;\n  let traceStartTime = Infinity;\n\n  for (let i = 0; i < view.length; i++) {\n    const row = view.get(i);\n\n    if (row.startTime < traceStartTime) {\n      traceStartTime = row.startTime;\n    }\n\n    if (row.startTime + row.duration > traceEndTime) {\n      traceEndTime = row.startTime + row.duration;\n    }\n  }\n\n  return traceEndTime - traceStartTime;\n}\n\ninterface Node {\n  [Fields.id]: string;\n  [Fields.title]: string;\n  [Fields.subTitle]: string;\n  [Fields.mainStat]: string;\n  [Fields.secondaryStat]: string;\n  [Fields.color]: number;\n}\n\ninterface Edge {\n  [Fields.id]: string;\n  [Fields.target]: string;\n  [Fields.source]: string;\n}\n\ninterface TraceRow {\n  traceID: string;\n  spanID: string;\n  parentSpanID: string;\n  operationName: string;\n  serviceName: string;\n  serviceTags: string;\n  startTime: number;\n  duration: number;\n  logs: string;\n  tags: string;\n}\n","import { SpanStatus } from '@opentelemetry/api';\nimport { collectorTypes } from '@opentelemetry/exporter-collector';\nimport { SemanticResourceAttributes } from '@opentelemetry/semantic-conventions';\n\nimport {\n  createDataFrame,\n  createTheme,\n  DataFrame,\n  DataLink,\n  DataLinkConfigOrigin,\n  DataQueryResponse,\n  DataSourceInstanceSettings,\n  DataSourceJsonData,\n  Field,\n  FieldDTO,\n  FieldType,\n  getDisplayProcessor,\n  MutableDataFrame,\n  toDataFrame,\n  TraceKeyValuePair,\n  TraceLog,\n  TraceSpanReference,\n  TraceSpanRow,\n} from '@grafana/data';\nimport { createNodeGraphFrames, TraceToProfilesData } from '@grafana/o11y-ds-frontend';\nimport { getDataSourceSrv } from '@grafana/runtime';\n\nimport { SearchTableType } from './dataquery.gen';\nimport { Span, SpanAttributes, Spanset, TempoJsonData, TraceSearchMetadata } from './types';\n\nfunction getAttributeValue(value: collectorTypes.opentelemetryProto.common.v1.AnyValue): any {\n  if (value.stringValue) {\n    return value.stringValue;\n  }\n\n  if (value.boolValue !== undefined) {\n    return Boolean(value.boolValue);\n  }\n\n  if (value.intValue !== undefined) {\n    return Number.parseInt(String(value.intValue), 10);\n  }\n\n  if (value.doubleValue) {\n    return Number.parseFloat(String(value.doubleValue));\n  }\n\n  if (value.arrayValue) {\n    const arrayValue = [];\n    for (const arValue of value.arrayValue.values) {\n      arrayValue.push(getAttributeValue(arValue));\n    }\n    return arrayValue;\n  }\n\n  return '';\n}\n\nfunction resourceToProcess(resource: collectorTypes.opentelemetryProto.resource.v1.Resource | undefined) {\n  const serviceTags: TraceKeyValuePair[] = [];\n  let serviceName = 'OTLPResourceNoServiceName';\n  if (!resource) {\n    return { serviceName, serviceTags };\n  }\n\n  for (const attribute of resource.attributes) {\n    if (attribute.key === SemanticResourceAttributes.SERVICE_NAME) {\n      serviceName = attribute.value.stringValue || serviceName;\n    }\n    serviceTags.push({ key: attribute.key, value: getAttributeValue(attribute.value) });\n  }\n\n  return { serviceName, serviceTags };\n}\n\nfunction getSpanTags(span: collectorTypes.opentelemetryProto.trace.v1.Span): TraceKeyValuePair[] {\n  const spanTags: TraceKeyValuePair[] = [];\n\n  if (span.attributes) {\n    for (const attribute of span.attributes) {\n      spanTags.push({ key: attribute.key, value: getAttributeValue(attribute.value) });\n    }\n  }\n\n  return spanTags;\n}\n\nfunction getSpanKind(span: collectorTypes.opentelemetryProto.trace.v1.Span) {\n  let kind = undefined;\n  if (span.kind) {\n    const split = span.kind.toString().toLowerCase().split('_');\n    kind = split.length ? split[split.length - 1] : span.kind.toString();\n  }\n  return kind;\n}\n\nfunction getReferences(span: collectorTypes.opentelemetryProto.trace.v1.Span) {\n  const references: TraceSpanReference[] = [];\n  if (span.links) {\n    for (const link of span.links) {\n      const { traceId, spanId } = link;\n      const tags: TraceKeyValuePair[] = [];\n      if (link.attributes) {\n        for (const attribute of link.attributes) {\n          tags.push({ key: attribute.key, value: getAttributeValue(attribute.value) });\n        }\n      }\n      references.push({ traceID: traceId, spanID: spanId, tags });\n    }\n  }\n\n  return references;\n}\n\nfunction getLogs(span: collectorTypes.opentelemetryProto.trace.v1.Span) {\n  const logs: TraceLog[] = [];\n  if (span.events) {\n    for (const event of span.events) {\n      const fields: TraceKeyValuePair[] = [];\n      if (event.attributes) {\n        for (const attribute of event.attributes) {\n          fields.push({ key: attribute.key, value: getAttributeValue(attribute.value) });\n        }\n      }\n      logs.push({ fields, timestamp: event.timeUnixNano / 1000000, name: event.name });\n    }\n  }\n\n  return logs;\n}\n\nexport function transformFromOTLP(\n  traceData: collectorTypes.opentelemetryProto.trace.v1.ResourceSpans[],\n  nodeGraph = false\n): DataQueryResponse {\n  const frame = new MutableDataFrame({\n    fields: [\n      { name: 'traceID', type: FieldType.string, values: [] },\n      { name: 'spanID', type: FieldType.string, values: [] },\n      { name: 'parentSpanID', type: FieldType.string, values: [] },\n      { name: 'operationName', type: FieldType.string, values: [] },\n      { name: 'serviceName', type: FieldType.string, values: [] },\n      { name: 'kind', type: FieldType.string, values: [] },\n      { name: 'statusCode', type: FieldType.number, values: [] },\n      { name: 'statusMessage', type: FieldType.string, values: [] },\n      { name: 'instrumentationLibraryName', type: FieldType.string, values: [] },\n      { name: 'instrumentationLibraryVersion', type: FieldType.string, values: [] },\n      { name: 'traceState', type: FieldType.string, values: [] },\n      { name: 'serviceTags', type: FieldType.other, values: [] },\n      { name: 'startTime', type: FieldType.number, values: [] },\n      { name: 'duration', type: FieldType.number, values: [] },\n      { name: 'logs', type: FieldType.other, values: [] },\n      { name: 'references', type: FieldType.other, values: [] },\n      { name: 'tags', type: FieldType.other, values: [] },\n    ],\n    meta: {\n      preferredVisualisationType: 'trace',\n      custom: {\n        traceFormat: 'otlp',\n      },\n    },\n  });\n  try {\n    for (const data of traceData) {\n      const { serviceName, serviceTags } = resourceToProcess(data.resource);\n      for (const librarySpan of data.instrumentationLibrarySpans) {\n        for (const span of librarySpan.spans) {\n          frame.add({\n            traceID: span.traceId,\n            spanID: span.spanId,\n            parentSpanID: span.parentSpanId || '',\n            operationName: span.name || '',\n            serviceName,\n            kind: getSpanKind(span),\n            statusCode: span.status?.code,\n            statusMessage: span.status?.message,\n            instrumentationLibraryName: librarySpan.instrumentationLibrary?.name,\n            instrumentationLibraryVersion: librarySpan.instrumentationLibrary?.version,\n            traceState: span.traceState,\n            serviceTags,\n            startTime: span.startTimeUnixNano! / 1000000,\n            duration: (span.endTimeUnixNano! - span.startTimeUnixNano!) / 1000000,\n            tags: getSpanTags(span),\n            logs: getLogs(span),\n            references: getReferences(span),\n          });\n        }\n      }\n    }\n  } catch (error) {\n    console.error(error);\n    return { error: { message: 'JSON is not valid OpenTelemetry format: ' + error }, data: [] };\n  }\n\n  let data = [frame];\n  if (nodeGraph) {\n    data.push(...(createNodeGraphFrames(frame) as MutableDataFrame[]));\n  }\n\n  return { data };\n}\n\n/**\n * Transforms trace dataframes to the OpenTelemetry format\n */\nexport function transformToOTLP(data: MutableDataFrame): {\n  batches: collectorTypes.opentelemetryProto.trace.v1.ResourceSpans[];\n} {\n  let result: { batches: collectorTypes.opentelemetryProto.trace.v1.ResourceSpans[] } = {\n    batches: [],\n  };\n\n  // Lookup object to see which batch contains spans for which services\n  let services: { [key: string]: number } = {};\n\n  for (let i = 0; i < data.length; i++) {\n    const span = data.get(i);\n\n    // Group spans based on service\n    if (!services[span.serviceName]) {\n      services[span.serviceName] = result.batches.length;\n      result.batches.push({\n        resource: {\n          attributes: [],\n          droppedAttributesCount: 0,\n        },\n        instrumentationLibrarySpans: [\n          {\n            spans: [],\n          },\n        ],\n      });\n    }\n\n    let batchIndex = services[span.serviceName];\n\n    // Populate resource attributes from service tags\n    if (result.batches[batchIndex].resource!.attributes.length === 0) {\n      result.batches[batchIndex].resource!.attributes = tagsToAttributes(span.serviceTags);\n    }\n\n    // Populate instrumentation library if it exists\n    if (!result.batches[batchIndex].instrumentationLibrarySpans[0].instrumentationLibrary) {\n      if (span.instrumentationLibraryName) {\n        result.batches[batchIndex].instrumentationLibrarySpans[0].instrumentationLibrary = {\n          name: span.instrumentationLibraryName,\n          version: span.instrumentationLibraryVersion ? span.instrumentationLibraryVersion : '',\n        };\n      }\n    }\n\n    result.batches[batchIndex].instrumentationLibrarySpans[0].spans.push({\n      traceId: span.traceID.padStart(32, '0'),\n      spanId: span.spanID,\n      parentSpanId: span.parentSpanID || '',\n      traceState: span.traceState || '',\n      name: span.operationName,\n      kind: getOTLPSpanKind(span.kind) as any,\n      startTimeUnixNano: span.startTime * 1000000,\n      endTimeUnixNano: (span.startTime + span.duration) * 1000000,\n      attributes: span.tags ? tagsToAttributes(span.tags) : [],\n      droppedAttributesCount: 0,\n      droppedEventsCount: 0,\n      droppedLinksCount: 0,\n      status: getOTLPStatus(span),\n      events: getOTLPEvents(span.logs),\n      links: getOTLPReferences(span.references),\n    });\n  }\n\n  return result;\n}\n\nfunction getOTLPSpanKind(kind: string): string | undefined {\n  let spanKind = undefined;\n  if (kind) {\n    switch (kind) {\n      case 'server':\n        spanKind = 'SPAN_KIND_SERVER';\n        break;\n      case 'client':\n        spanKind = 'SPAN_KIND_CLIENT';\n        break;\n      case 'producer':\n        spanKind = 'SPAN_KIND_PRODUCER';\n        break;\n      case 'consumer':\n        spanKind = 'SPAN_KIND_CONSUMER';\n        break;\n      case 'internal':\n        spanKind = 'SPAN_KIND_INTERNAL';\n        break;\n    }\n  }\n  return spanKind;\n}\n\n/**\n * Converts key-value tags to OTLP attributes and removes tags added by Grafana\n */\nfunction tagsToAttributes(tags: TraceKeyValuePair[]): collectorTypes.opentelemetryProto.common.v1.KeyValue[] {\n  return tags.reduce<collectorTypes.opentelemetryProto.common.v1.KeyValue[]>(\n    (attributes, tag) => [...attributes, { key: tag.key, value: toAttributeValue(tag) }],\n    []\n  );\n}\n\n/**\n * Returns the correct OTLP AnyValue based on the value of the tag value\n */\nfunction toAttributeValue(tag: TraceKeyValuePair): collectorTypes.opentelemetryProto.common.v1.AnyValue {\n  if (typeof tag.value === 'string') {\n    return { stringValue: tag.value };\n  } else if (typeof tag.value === 'boolean') {\n    return { boolValue: tag.value };\n  } else if (typeof tag.value === 'number') {\n    if (tag.value % 1 === 0) {\n      return { intValue: tag.value };\n    } else {\n      return { doubleValue: tag.value };\n    }\n  } else if (typeof tag.value === 'object') {\n    if (Array.isArray(tag.value)) {\n      const values: collectorTypes.opentelemetryProto.common.v1.AnyValue[] = [];\n      for (const val of tag.value) {\n        values.push(toAttributeValue(val));\n      }\n\n      return { arrayValue: { values } };\n    }\n  }\n  return { stringValue: tag.value };\n}\n\nfunction getOTLPStatus(span: TraceSpanRow): SpanStatus | undefined {\n  let status = undefined;\n  if (span.statusCode !== undefined) {\n    status = {\n      code: span.statusCode,\n      message: span.statusMessage ? span.statusMessage : '',\n    };\n  }\n  return status;\n}\n\nfunction getOTLPEvents(logs: TraceLog[]): collectorTypes.opentelemetryProto.trace.v1.Span.Event[] | undefined {\n  if (!logs || !logs.length) {\n    return undefined;\n  }\n\n  let events: collectorTypes.opentelemetryProto.trace.v1.Span.Event[] = [];\n  for (const log of logs) {\n    let event: collectorTypes.opentelemetryProto.trace.v1.Span.Event = {\n      timeUnixNano: log.timestamp * 1000000,\n      attributes: [],\n      droppedAttributesCount: 0,\n      name: log.name || '',\n    };\n    for (const field of log.fields) {\n      event.attributes!.push({\n        key: field.key,\n        value: toAttributeValue(field),\n      });\n    }\n    events.push(event);\n  }\n  return events;\n}\n\nfunction getOTLPReferences(\n  references: TraceSpanReference[]\n): collectorTypes.opentelemetryProto.trace.v1.Span.Link[] | undefined {\n  if (!references || !references.length) {\n    return undefined;\n  }\n\n  let links: collectorTypes.opentelemetryProto.trace.v1.Span.Link[] = [];\n  for (const ref of references) {\n    let link: collectorTypes.opentelemetryProto.trace.v1.Span.Link = {\n      traceId: ref.traceID,\n      spanId: ref.spanID,\n      attributes: [],\n      droppedAttributesCount: 0,\n    };\n    if (ref.tags?.length) {\n      for (const tag of ref.tags) {\n        link.attributes?.push({\n          key: tag.key,\n          value: toAttributeValue(tag),\n        });\n      }\n    }\n    links.push(link);\n  }\n  return links;\n}\n\nexport const RelatedProfilesTitle = 'Related profiles';\n\nexport function transformTrace(\n  response: DataQueryResponse,\n  instanceSettings: DataSourceInstanceSettings<TempoJsonData>,\n  nodeGraph = false\n): DataQueryResponse {\n  const frame = response.data[0];\n\n  if (!frame) {\n    return emptyDataQueryResponse;\n  }\n\n  // Get profiles links\n  const traceToProfilesData: TraceToProfilesData | undefined = instanceSettings?.jsonData;\n  const traceToProfilesOptions = traceToProfilesData?.tracesToProfiles;\n  let profilesDataSourceSettings: DataSourceInstanceSettings<DataSourceJsonData> | undefined;\n  if (traceToProfilesOptions?.datasourceUid) {\n    profilesDataSourceSettings = getDataSourceSrv().getInstanceSettings(traceToProfilesOptions.datasourceUid);\n  }\n\n  if (traceToProfilesOptions && profilesDataSourceSettings) {\n    const customQuery = traceToProfilesOptions.customQuery ? traceToProfilesOptions.query : undefined;\n    const dataLink: DataLink = {\n      title: RelatedProfilesTitle,\n      url: '',\n      internal: {\n        datasourceUid: profilesDataSourceSettings.uid,\n        datasourceName: profilesDataSourceSettings.name,\n        query: {\n          labelSelector: customQuery ? customQuery : '{${__tags}}',\n          groupBy: [],\n          profileTypeId: traceToProfilesOptions.profileTypeId ?? '',\n          queryType: 'profile',\n          spanSelector: ['${__span.tags[\"pyroscope.profile.id\"]}'],\n          refId: 'profile',\n        },\n      },\n      origin: DataLinkConfigOrigin.Datasource,\n    };\n\n    frame.fields.forEach((field: Field) => {\n      if (field.name === 'tags') {\n        field.config.links = [dataLink];\n      }\n    });\n  }\n\n  let data = [...response.data];\n  if (nodeGraph) {\n    data.push(...createNodeGraphFrames(toDataFrame(frame)));\n  }\n\n  return {\n    ...response,\n    data,\n  };\n}\n\nfunction transformToTraceData(data: TraceSearchMetadata) {\n  return {\n    traceID: data.traceID,\n    startTime: parseInt(data.startTimeUnixNano!, 10) / 1000000,\n    traceDuration: data.durationMs,\n    traceService: data.rootServiceName || '',\n    traceName: data.rootTraceName || '',\n  };\n}\n\nexport function enhanceTraceQlMetricsResponse(\n  data: DataQueryResponse,\n  instanceSettings: DataSourceInstanceSettings\n): DataQueryResponse {\n  data.data\n    ?.filter((f) => f.name === 'exemplar' && f.meta?.dataTopic === 'annotations')\n    .map((frame) => {\n      const traceIDField = frame.fields.find((field: Field) => field.name === 'traceId');\n      if (traceIDField) {\n        const links = getDataLinks(instanceSettings);\n        traceIDField.config.links = traceIDField.config.links?.length\n          ? [...traceIDField.config.links, ...links]\n          : links;\n      }\n      return frame;\n    });\n  return data;\n}\n\nfunction getDataLinks(instanceSettings: DataSourceInstanceSettings): DataLink[] {\n  const dataLinks: DataLink[] = [];\n\n  if (instanceSettings.uid) {\n    dataLinks.push({\n      title: 'View trace',\n      url: '',\n      internal: {\n        query: { query: '${__value.raw}', queryType: 'traceql' },\n        datasourceUid: instanceSettings.uid,\n        datasourceName: instanceSettings?.name ?? 'Data source not found',\n      },\n    });\n  }\n  return dataLinks;\n}\n\nexport function formatTraceQLResponse(\n  data: TraceSearchMetadata[],\n  instanceSettings: DataSourceInstanceSettings,\n  tableType?: SearchTableType\n) {\n  switch (tableType) {\n    case SearchTableType.Spans:\n      return createTableFrameFromTraceQlQueryAsSpans(data, instanceSettings);\n    case SearchTableType.Raw:\n      return createDataFrameFromTraceQlQuery(data);\n    default:\n      return createTableFrameFromTraceQlQuery(data, instanceSettings);\n  }\n}\n\nfunction createDataFrameFromTraceQlQuery(data: TraceSearchMetadata[]) {\n  return [\n    createDataFrame({\n      name: 'Raw response',\n      refId: 'raw',\n      fields: [{ name: 'response', type: FieldType.string, values: [JSON.stringify(data, null, 2)] }],\n    }),\n  ];\n}\n\n/**\n * Create data frame while adding spans for each trace into a subtable.\n * @param data\n * @param instanceSettings\n */\nexport function createTableFrameFromTraceQlQuery(\n  data: TraceSearchMetadata[],\n  instanceSettings: DataSourceInstanceSettings\n): DataFrame[] {\n  const frame = createDataFrame({\n    name: 'Traces',\n    refId: 'traces',\n    fields: [\n      {\n        name: 'traceID',\n        type: FieldType.string,\n        config: {\n          unit: 'string',\n          displayNameFromDS: 'Trace ID',\n          custom: {\n            width: 200,\n          },\n          links: [\n            {\n              title: 'Trace: ${__value.raw}',\n              url: '',\n              internal: {\n                datasourceUid: instanceSettings.uid,\n                datasourceName: instanceSettings.name,\n                query: {\n                  query: '${__value.raw}',\n                  queryType: 'traceql',\n                },\n              },\n            },\n          ],\n        },\n      },\n      {\n        name: 'startTime',\n        type: FieldType.time,\n        config: {\n          displayNameFromDS: 'Start time',\n          custom: {\n            width: 200,\n          },\n        },\n      },\n      { name: 'traceService', type: FieldType.string, config: { displayNameFromDS: 'Service' } },\n      { name: 'traceName', type: FieldType.string, config: { displayNameFromDS: 'Name' } },\n      {\n        name: 'traceDuration',\n        type: FieldType.number,\n        config: {\n          displayNameFromDS: 'Duration',\n          unit: 'ms',\n          custom: {\n            width: 120,\n          },\n        },\n      },\n      {\n        name: 'nested',\n        type: FieldType.nestedFrames,\n      },\n    ],\n    meta: {\n      preferredVisualisationType: 'table',\n      uniqueRowIdFields: [0],\n    },\n  });\n\n  if (!data?.length) {\n    return [frame];\n  }\n  frame.length = data.length;\n\n  data\n    // Show the most recent traces\n    .sort((a, b) => parseInt(b?.startTimeUnixNano!, 10) / 1000000 - parseInt(a?.startTimeUnixNano!, 10) / 1000000)\n    .forEach((trace) => {\n      const traceData: TraceTableData = transformToTraceData(trace);\n      frame.fields[0].values.push(traceData.traceID);\n      frame.fields[1].values.push(traceData.startTime);\n      frame.fields[2].values.push(traceData.traceService);\n      frame.fields[3].values.push(traceData.traceName);\n\n      // Note: this is a workaround to display the duration in the table when it is <1ms\n      // and the duration is not available in the trace data response.\n      frame.fields[4].values.push(traceData.traceDuration ? traceData.traceDuration : '<1ms');\n\n      if (trace.spanSets) {\n        frame.fields[5].values.push(\n          trace.spanSets.map((spanSet: Spanset) => {\n            return traceSubFrame(trace, spanSet, instanceSettings);\n          })\n        );\n      } else if (trace.spanSet) {\n        frame.fields[5].values.push([traceSubFrame(trace, trace.spanSet, instanceSettings)]);\n      }\n    });\n\n  return [frame];\n}\n\nexport function createTableFrameFromTraceQlQueryAsSpans(\n  data: TraceSearchMetadata[] | undefined,\n  instanceSettings: DataSourceInstanceSettings\n): DataFrame[] {\n  const spanDynamicAttrs: Record<string, FieldDTO> = {};\n  let hasNameAttribute = false;\n\n  data?.forEach((trace) =>\n    getSpanSets(trace).forEach((ss) => {\n      ss.attributes?.forEach((attr) => {\n        spanDynamicAttrs[attr.key] = {\n          name: attr.key,\n          type: FieldType.string,\n          config: { displayNameFromDS: attr.key },\n        };\n      });\n      ss.spans.forEach((span) => {\n        if (span.name) {\n          hasNameAttribute = true;\n        }\n        span.attributes?.forEach((attr) => {\n          spanDynamicAttrs[attr.key] = {\n            name: attr.key,\n            type: FieldType.string,\n            config: { displayNameFromDS: attr.key },\n          };\n        });\n      });\n    })\n  );\n\n  const frame = new MutableDataFrame({\n    name: 'Spans',\n    refId: 'traces',\n    fields: [\n      {\n        name: 'traceIdHidden',\n        type: FieldType.string,\n        config: {\n          custom: { hidden: true },\n        },\n      },\n      {\n        name: 'traceService',\n        type: FieldType.string,\n        config: {\n          displayNameFromDS: 'Trace Service',\n          custom: {\n            width: 200,\n          },\n        },\n      },\n      {\n        name: 'traceName',\n        type: FieldType.string,\n        config: {\n          displayNameFromDS: 'Trace Name',\n          custom: {\n            width: 200,\n          },\n        },\n      },\n      {\n        name: 'spanID',\n        type: FieldType.string,\n        config: {\n          unit: 'string',\n          displayNameFromDS: 'Span ID',\n          custom: {\n            width: 200,\n          },\n          links: [\n            {\n              title: 'Span: ${__value.raw}',\n              url: '',\n              internal: {\n                datasourceUid: instanceSettings.uid,\n                datasourceName: instanceSettings.name,\n                query: {\n                  query: '${__data.fields.traceIdHidden}',\n                  queryType: 'traceql',\n                },\n                panelsState: {\n                  trace: {\n                    spanId: '${__value.raw}',\n                  },\n                },\n              },\n            },\n          ],\n        },\n      },\n      {\n        name: 'time',\n        type: FieldType.time,\n        config: {\n          displayNameFromDS: 'Start time',\n        },\n      },\n      {\n        name: 'name',\n        type: FieldType.string,\n        config: { displayNameFromDS: 'Name', custom: { hidden: !hasNameAttribute } },\n      },\n      ...Object.values(spanDynamicAttrs).sort((a, b) => a.name.localeCompare(b.name)),\n      {\n        name: 'duration',\n        type: FieldType.number,\n        config: {\n          displayNameFromDS: 'Duration',\n          unit: 'ns',\n          custom: {\n            width: 120,\n          },\n        },\n      },\n    ],\n    meta: {\n      preferredVisualisationType: 'table',\n    },\n  });\n\n  if (!data || !data.length) {\n    return [frame];\n  }\n\n  data\n    // Show the most recent traces\n    .sort((a, b) => parseInt(b?.startTimeUnixNano!, 10) / 1000000 - parseInt(a?.startTimeUnixNano!, 10) / 1000000)\n    .forEach((trace) => {\n      getSpanSets(trace).forEach((spanSet) => {\n        spanSet.spans.forEach((span) => {\n          frame.add(transformSpanToTraceData(span, spanSet, trace));\n        });\n      });\n    });\n\n  return [frame];\n}\n\n/**\n * Get the spansets of a trace.\n *\n * Field `spanSets` is preferred to `spanSet` since the latter is deprecated in Tempo, but we\n * support both for backward compatibility.\n *\n * @param trace a trace\n * @returns the spansets of the trace, if existing\n */\nconst getSpanSets = (trace: TraceSearchMetadata): Spanset[] => {\n  return trace.spanSets || (trace.spanSet ? [trace.spanSet] : []);\n};\n\nconst traceSubFrame = (\n  trace: TraceSearchMetadata,\n  spanSet: Spanset,\n  instanceSettings: DataSourceInstanceSettings\n): DataFrame => {\n  const spanDynamicAttrs: Record<string, FieldDTO> = {};\n  let hasNameAttribute = false;\n\n  spanSet.attributes?.map((attr) => {\n    spanDynamicAttrs[attr.key] = {\n      name: attr.key,\n      type: FieldType.string,\n      config: { displayNameFromDS: attr.key },\n      values: [],\n    };\n  });\n  spanSet.spans.forEach((span) => {\n    if (span.name) {\n      hasNameAttribute = true;\n    }\n    span.attributes?.forEach((attr) => {\n      spanDynamicAttrs[attr.key] = {\n        name: attr.key,\n        type: FieldType.string,\n        config: { displayNameFromDS: attr.key },\n        values: [],\n      };\n    });\n  });\n\n  const subFrame = new MutableDataFrame({\n    fields: [\n      {\n        name: 'traceIdHidden',\n        type: FieldType.string,\n        config: {\n          custom: { hidden: true },\n        },\n        values: [],\n      },\n      {\n        name: 'spanID',\n        type: FieldType.string,\n        values: [],\n        config: {\n          unit: 'string',\n          displayNameFromDS: 'Span ID',\n          custom: {\n            width: 200,\n          },\n          links: [\n            {\n              title: 'Span: ${__value.raw}',\n              url: '',\n              internal: {\n                datasourceUid: instanceSettings.uid,\n                datasourceName: instanceSettings.name,\n                query: {\n                  query: '${__data.fields.traceIdHidden}',\n                  queryType: 'traceql',\n                },\n                panelsState: {\n                  trace: {\n                    spanId: '${__value.raw}',\n                  },\n                },\n              },\n            },\n          ],\n        },\n      },\n      {\n        name: 'time',\n        type: FieldType.time,\n        config: {\n          displayNameFromDS: 'Start time',\n          custom: {\n            width: 200,\n          },\n        },\n      },\n      {\n        name: 'name',\n        type: FieldType.string,\n        values: [],\n        config: { displayNameFromDS: 'Name', custom: { hidden: !hasNameAttribute } },\n      },\n      ...Object.values(spanDynamicAttrs).sort((a, b) => a.name.localeCompare(b.name)),\n      {\n        name: 'duration',\n        type: FieldType.number,\n        values: [],\n        config: {\n          displayNameFromDS: 'Duration',\n          unit: 'ns',\n          custom: {\n            width: 120,\n          },\n        },\n      },\n    ],\n    meta: {\n      preferredVisualisationType: 'table',\n    },\n  });\n\n  // TODO: this should be done in `applyFieldOverrides` instead recursively for the nested `DataFrames`\n  const theme = createTheme();\n  for (const field of subFrame.fields) {\n    field.display = getDisplayProcessor({ field, theme });\n  }\n\n  spanSet.spans.forEach((span) => {\n    subFrame.add(transformSpanToTraceData(span, spanSet, trace));\n  });\n\n  return subFrame;\n};\n\ninterface TraceTableData {\n  [key: string]: string | number | boolean | undefined; // dynamic attribute name\n  traceID?: string;\n  spanID?: string;\n  startTime?: number;\n  name?: string;\n  traceDuration?: number;\n}\n\nfunction transformSpanToTraceData(span: Span, spanSet: Spanset, trace: TraceSearchMetadata): TraceTableData {\n  const spanStartTimeUnixMs = parseInt(span.startTimeUnixNano, 10) / 1000000;\n\n  const data: TraceTableData = {\n    traceIdHidden: trace.traceID,\n    traceService: trace.rootServiceName || '',\n    traceName: trace.rootTraceName || '',\n    spanID: span.spanID,\n    time: spanStartTimeUnixMs,\n    duration: parseInt(span.durationNanos, 10),\n    name: span.name,\n  };\n\n  let attrs: SpanAttributes[] = [];\n  if (spanSet.attributes) {\n    attrs = attrs.concat(spanSet.attributes);\n  }\n  if (span.attributes) {\n    attrs = attrs.concat(span.attributes);\n  }\n\n  attrs.forEach((attr) => {\n    if (attr.value.boolValue || attr.value.Value?.bool_value) {\n      data[attr.key] = attr.value.boolValue || attr.value.Value?.bool_value;\n    }\n    if (attr.value.doubleValue || attr.value.Value?.double_value) {\n      data[attr.key] = attr.value.doubleValue || attr.value.Value?.double_value;\n    }\n    if (attr.value.intValue || attr.value.Value?.int_value) {\n      data[attr.key] = attr.value.intValue || attr.value.Value?.int_value;\n    }\n    if (attr.value.stringValue || attr.value.Value?.string_value) {\n      data[attr.key] = attr.value.stringValue || attr.value.Value?.string_value;\n    }\n  });\n\n  return data;\n}\n\nconst emptyDataQueryResponse = {\n  data: [\n    new MutableDataFrame({\n      fields: [\n        {\n          name: 'trace',\n          type: FieldType.trace,\n          values: [],\n        },\n      ],\n      meta: {\n        preferredVisualisationType: 'trace',\n        custom: {\n          traceFormat: 'otlp',\n        },\n      },\n    }),\n  ],\n};\n","import {\n  DataFrame,\n  DataFrameType,\n  DataQueryResponse,\n  DataQueryResponseData,\n  Field,\n  FieldType,\n  PanelData,\n  QueryResultMetaStat,\n  shallowCompare,\n} from '@grafana/data';\n\nexport function combinePanelData(currentData: PanelData, newData: PanelData): PanelData {\n  const series = combineResponses({ data: currentData.series }, { data: newData.series }).data;\n  return { ...currentData, series };\n}\n\nexport function combineResponses(currentResult: DataQueryResponse | null, newResult: DataQueryResponse) {\n  if (!currentResult) {\n    return cloneQueryResponse(newResult);\n  }\n\n  newResult.data.forEach((newFrame) => {\n    const currentFrame = currentResult.data.find((frame) => shouldCombine(frame, newFrame));\n    if (!currentFrame) {\n      currentResult.data.push(cloneDataFrame(newFrame));\n      return;\n    }\n    combineFrames(currentFrame, newFrame);\n  });\n\n  const mergedErrors = [...(currentResult.errors ?? []), ...(newResult.errors ?? [])];\n\n  // we make sure to have `.errors` as undefined, instead of empty-array\n  // when no errors.\n\n  if (mergedErrors.length > 0) {\n    currentResult.errors = mergedErrors;\n  }\n\n  // the `.error` attribute is obsolete now,\n  // but we have to maintain it, otherwise\n  // some grafana parts do not behave well.\n  // we just choose the old error, if it exists,\n  // otherwise the new error, if it exists.\n  const mergedError = currentResult.error ?? newResult.error;\n  if (mergedError != null) {\n    currentResult.error = mergedError;\n  }\n\n  const mergedTraceIds = [...(currentResult.traceIds ?? []), ...(newResult.traceIds ?? [])];\n  if (mergedTraceIds.length > 0) {\n    currentResult.traceIds = mergedTraceIds;\n  }\n\n  return currentResult;\n}\n\nfunction combineFrames(dest: DataFrame, source: DataFrame) {\n  // `dest` and `source` might have more or less fields, we need to go through all of them\n  const totalFields = Math.max(dest.fields.length, source.fields.length);\n  for (let i = 0; i < totalFields; i++) {\n    // For now, skip undefined fields that exist in the new frame\n    if (!dest.fields[i]) {\n      continue;\n    }\n    // Index is not reliable when frames have disordered fields, or an extra/missing field, so we find them by name.\n    // If the field has no name, we fallback to the old index version.\n    const sourceField = findSourceField(dest.fields[i], source.fields, i);\n    if (!sourceField) {\n      continue;\n    }\n    dest.fields[i].values = [].concat.apply(sourceField.values, dest.fields[i].values);\n    if (sourceField.nanos) {\n      const nanos: number[] = dest.fields[i].nanos?.slice() || [];\n      dest.fields[i].nanos = source.fields[i].nanos?.concat(nanos);\n    }\n  }\n  dest.length += source.length;\n  dest.meta = {\n    ...dest.meta,\n    stats: getCombinedMetadataStats(dest.meta?.stats ?? [], source.meta?.stats ?? []),\n  };\n}\n\nfunction findSourceField(referenceField: Field, sourceFields: Field[], index: number) {\n  const candidates = sourceFields.filter((f) => f.name === referenceField.name);\n\n  if (candidates.length === 1) {\n    return candidates[0];\n  }\n\n  if (referenceField.labels) {\n    return candidates.find((candidate) => shallowCompare(referenceField.labels ?? {}, candidate.labels ?? {}));\n  }\n\n  return sourceFields[index];\n}\n\nconst TOTAL_BYTES_STAT = 'Summary: total bytes processed';\n// This is specific for Loki\nfunction getCombinedMetadataStats(\n  destStats: QueryResultMetaStat[],\n  sourceStats: QueryResultMetaStat[]\n): QueryResultMetaStat[] {\n  // in the current approach, we only handle a single stat\n  const destStat = destStats.find((s) => s.displayName === TOTAL_BYTES_STAT);\n  const sourceStat = sourceStats.find((s) => s.displayName === TOTAL_BYTES_STAT);\n\n  if (sourceStat != null && destStat != null) {\n    return [{ value: sourceStat.value + destStat.value, displayName: TOTAL_BYTES_STAT, unit: destStat.unit }];\n  }\n\n  // maybe one of them exist\n  const eitherStat = sourceStat ?? destStat;\n  if (eitherStat != null) {\n    return [eitherStat];\n  }\n\n  return [];\n}\n\n/**\n * Deep clones a DataQueryResponse\n */\nexport function cloneQueryResponse(response: DataQueryResponse): DataQueryResponse {\n  const newResponse = {\n    ...response,\n    data: response.data.map(cloneDataFrame),\n  };\n  return newResponse;\n}\n\nfunction cloneDataFrame(frame: DataQueryResponseData): DataQueryResponseData {\n  return {\n    ...frame,\n    fields: frame.fields.map((field: Field) => ({\n      ...field,\n      values: field.values,\n    })),\n  };\n}\n\nfunction shouldCombine(frame1: DataFrame, frame2: DataFrame): boolean {\n  if (frame1.refId !== frame2.refId || frame1.name !== frame2.name) {\n    return false;\n  }\n\n  const frameType1 = frame1.meta?.type;\n  const frameType2 = frame2.meta?.type;\n\n  if (frameType1 !== frameType2) {\n    // we do not join things that have a different type\n    return false;\n  }\n\n  // metric range query data\n  if (frameType1 === DataFrameType.TimeSeriesMulti) {\n    const field1 = frame1.fields.find((f) => f.type === FieldType.number);\n    const field2 = frame2.fields.find((f) => f.type === FieldType.number);\n    if (field1 === undefined || field2 === undefined) {\n      // should never happen\n      return false;\n    }\n\n    return shallowCompare(field1.labels ?? {}, field2.labels ?? {});\n  }\n\n  // logs query data\n  // logs use a special attribute in the dataframe's \"custom\" section\n  // because we do not have a good \"frametype\" value for them yet.\n  const customType1 = frame1.meta?.custom?.frameType;\n  const customType2 = frame2.meta?.custom?.frameType;\n  // Legacy frames have this custom type\n  if (customType1 === 'LabeledTimeValues' && customType2 === 'LabeledTimeValues') {\n    return true;\n  } else if (customType1 === customType2) {\n    // Data plane frames don't\n    return true;\n  }\n\n  // should never reach here\n  return false;\n}\n","import { capitalize } from 'lodash';\nimport { map, Observable, scan, takeWhile } from 'rxjs';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport {\n  DataFrame,\n  dataFrameFromJSON,\n  DataQueryRequest,\n  DataQueryResponse,\n  DataSourceInstanceSettings,\n  FieldCache,\n  FieldType,\n  LiveChannelScope,\n  LoadingState,\n  MutableDataFrame,\n  sortDataFrame,\n  ThresholdsConfig,\n  ThresholdsMode,\n} from '@grafana/data';\nimport { cloneQueryResponse, combineResponses } from '@grafana/o11y-ds-frontend';\nimport { getGrafanaLiveSrv } from '@grafana/runtime';\n\nimport { SearchStreamingState } from './dataquery.gen';\nimport { DEFAULT_SPSS, TempoDatasource } from './datasource';\nimport { formatTraceQLResponse } from './resultTransformer';\nimport { SearchMetrics, TempoJsonData, TempoQuery } from './types';\nimport { stepToNanos } from './utils';\n\nfunction getLiveStreamKey(): string {\n  return uuidv4();\n}\n\nexport function doTempoSearchStreaming(\n  query: TempoQuery,\n  ds: TempoDatasource,\n  options: DataQueryRequest<TempoQuery>,\n  instanceSettings: DataSourceInstanceSettings<TempoJsonData>\n): Observable<DataQueryResponse> {\n  const range = options.range;\n\n  let frames: DataFrame[] | undefined = undefined;\n  let state: LoadingState = LoadingState.NotStarted;\n  const requestTime = performance.now();\n\n  return getGrafanaLiveSrv()\n    .getStream<MutableDataFrame>({\n      scope: LiveChannelScope.DataSource,\n      namespace: ds.uid,\n      path: `search/${getLiveStreamKey()}`,\n      data: {\n        ...query,\n        SpansPerSpanSet: query.spss ?? DEFAULT_SPSS,\n        timeRange: {\n          from: range.from.toISOString(),\n          to: range.to.toISOString(),\n        },\n      },\n    })\n    .pipe(\n      takeWhile((evt) => {\n        if ('message' in evt && evt?.message) {\n          const frameState: SearchStreamingState = evt.message.data.values[2][0];\n          if (frameState === SearchStreamingState.Done || frameState === SearchStreamingState.Error) {\n            return false;\n          }\n        }\n        return true;\n      }, true)\n    )\n    .pipe(\n      map((evt) => {\n        if ('message' in evt && evt?.message) {\n          const currentTime = performance.now();\n          const elapsedTime = currentTime - requestTime;\n\n          const messageFrame = dataFrameFromJSON(evt.message);\n          const fieldCache = new FieldCache(messageFrame);\n\n          const traces = fieldCache.getFieldByName('result')?.values[0];\n          const metrics = fieldCache.getFieldByName('metrics')?.values[0];\n          const frameState = fieldCache.getFieldByName('state')?.values[0];\n          const error = fieldCache.getFieldByName('error')?.values[0];\n\n          switch (frameState) {\n            case SearchStreamingState.Done:\n              state = LoadingState.Done;\n              break;\n            case SearchStreamingState.Streaming:\n              state = LoadingState.Streaming;\n              break;\n            case SearchStreamingState.Error:\n              throw new Error(error);\n          }\n\n          // The order of the frames is important. The metrics frame should always be the last frame.\n          // This is because the metrics frame is used to display the progress of the streaming query\n          // and we would like to display the results first.\n          frames = [\n            ...formatTraceQLResponse(traces, instanceSettings, query.tableType),\n            metricsDataFrame(metrics, frameState, elapsedTime),\n          ];\n        }\n        return {\n          data: frames || [],\n          state,\n        };\n      })\n    );\n}\n\nexport function doTempoMetricsStreaming(\n  query: TempoQuery,\n  ds: TempoDatasource,\n  options: DataQueryRequest<TempoQuery>\n): Observable<DataQueryResponse> {\n  const range = options.range;\n  const key = getLiveStreamKey();\n\n  let state: LoadingState = LoadingState.NotStarted;\n  const step = stepToNanos(query.step);\n\n  return getGrafanaLiveSrv()\n    .getStream<MutableDataFrame>({\n      scope: LiveChannelScope.DataSource,\n      namespace: ds.uid,\n      path: `metrics/${key}`,\n      data: {\n        ...query,\n        step,\n        timeRange: {\n          from: range.from.toISOString(),\n          to: range.to.toISOString(),\n        },\n      },\n    })\n    .pipe(\n      takeWhile((evt) => {\n        if ('message' in evt && evt?.message) {\n          const frameState: SearchStreamingState = evt.message.data.values[2][0];\n          if (frameState === SearchStreamingState.Done || frameState === SearchStreamingState.Error) {\n            return false;\n          }\n        }\n        return true;\n      }, true),\n      map((evt) => {\n        let newResult: DataQueryResponse = { data: [], state: LoadingState.NotStarted };\n        if ('message' in evt && evt?.message) {\n          const messageFrame = dataFrameFromJSON(evt.message);\n          const fieldCache = new FieldCache(messageFrame);\n\n          const data = fieldCache.getFieldByName('result')?.values[0];\n          const frameState = fieldCache.getFieldByName('state')?.values[0];\n          const error = fieldCache.getFieldByName('error')?.values[0];\n\n          switch (frameState) {\n            case SearchStreamingState.Done:\n              state = LoadingState.Done;\n              break;\n            case SearchStreamingState.Streaming:\n              state = LoadingState.Streaming;\n              break;\n            case SearchStreamingState.Error:\n              throw new Error(error);\n          }\n\n          newResult = {\n            data: data?.map(dataFrameFromJSON) ?? [],\n            state,\n          };\n        }\n\n        return newResult;\n      }),\n      // Merge results on acc\n      scan((acc, curr) => {\n        if (!curr) {\n          return acc;\n        }\n        if (!acc) {\n          return cloneQueryResponse(curr);\n        }\n        return mergeFrames(acc, curr);\n      })\n    );\n}\n\nfunction mergeFrames(acc: DataQueryResponse, newResult: DataQueryResponse): DataQueryResponse {\n  const result = combineResponses(cloneQueryResponse(acc), newResult);\n\n  result.data = result.data.map((frame: DataFrame) => {\n    let newFrame = frame;\n    const timeFieldIndex = frame.fields.findIndex((f) => f.type === FieldType.time);\n    if (timeFieldIndex >= 0) {\n      removeDuplicateTimeFieldValues(frame, timeFieldIndex);\n      newFrame = sortDataFrame(frame, timeFieldIndex);\n    }\n    return newFrame;\n  });\n\n  result.state = newResult.state;\n  return result;\n}\n\n/**\n * Remove duplicate time field values from the DataFrame. This is necessary because Tempo sends partial results to Grafana\n * that we append to an existing DataFrame. This can result in duplicate values for the same timestamp so this function removes\n * older values and keeps the latest value.\n * @param accFrame\n * @param timeFieldIndex\n */\nfunction removeDuplicateTimeFieldValues(accFrame: DataFrame, timeFieldIndex: number) {\n  const duplicatesMap = accFrame.fields[timeFieldIndex].values.reduce((acc: Record<number, number[]>, value, index) => {\n    if (acc[value]) {\n      acc[value].push(index);\n    } else {\n      acc[value] = [index];\n    }\n    return acc;\n  }, {});\n\n  const indexesToRemove = Object.values(duplicatesMap)\n    .filter((indexes) => indexes.length > 1)\n    .map((indexes) => indexes.slice(1))\n    .flat();\n  accFrame.fields.forEach((field) => {\n    field.values = field.values.filter((_, index) => !indexesToRemove.includes(index));\n  });\n\n  // This updates the length of the dataframe having already removed duplicate values.\n  // This is necessary because Tempo sends partial results to Grafana and\n  // this can result in duplicate values for the same timestamp so this removes\n  // older values and keeps the latest value, and ensures the length of the dataframe is updated,\n  // which would otherwise cause issues with rendering the exemplar data.\n  if (accFrame.name === 'exemplar' && accFrame.meta?.dataTopic === 'annotations' && indexesToRemove.length > 0) {\n    accFrame.length = accFrame.fields[timeFieldIndex].values.length;\n  }\n}\n\nfunction metricsDataFrame(metrics: SearchMetrics, state: SearchStreamingState, elapsedTime: number) {\n  const progressThresholds: ThresholdsConfig = {\n    steps: [\n      {\n        color: 'blue',\n        value: -Infinity,\n      },\n      {\n        color: 'green',\n        value: 75,\n      },\n    ],\n    mode: ThresholdsMode.Absolute,\n  };\n\n  const frame: DataFrame = {\n    refId: 'streaming-progress',\n    name: 'Streaming Progress',\n    length: 1,\n    fields: [\n      {\n        name: 'state',\n        type: FieldType.string,\n        values: [capitalize(state.toString())],\n        config: {\n          displayNameFromDS: 'State',\n        },\n      },\n      {\n        name: 'elapsedTime',\n        type: FieldType.number,\n        values: [elapsedTime],\n        config: {\n          unit: 'ms',\n          displayNameFromDS: 'Elapsed Time',\n        },\n      },\n      {\n        name: 'totalBlocks',\n        type: FieldType.number,\n        values: [metrics.totalBlocks],\n        config: {\n          displayNameFromDS: 'Total Blocks',\n        },\n      },\n      {\n        name: 'completedJobs',\n        type: FieldType.number,\n        values: [metrics.completedJobs],\n        config: {\n          displayNameFromDS: 'Completed Jobs',\n        },\n      },\n      {\n        name: 'totalJobs',\n        type: FieldType.number,\n        values: [metrics.totalJobs],\n        config: {\n          displayNameFromDS: 'Total Jobs',\n        },\n      },\n      {\n        name: 'progress',\n        type: FieldType.number,\n        values: [\n          state === SearchStreamingState.Done ? 100 : ((metrics.completedJobs || 0) / (metrics.totalJobs || 1)) * 100,\n        ],\n        config: {\n          displayNameFromDS: 'Progress',\n          unit: 'percent',\n          min: 0,\n          max: 100,\n          custom: {\n            cellOptions: {\n              type: 'gauge',\n              mode: 'gradient',\n            },\n          },\n          thresholds: progressThresholds,\n        },\n      },\n    ],\n    meta: {\n      preferredVisualisationType: 'table',\n    },\n  };\n  return frame;\n}\n","import { from, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { DataQueryRequest, CustomVariableSupport, MetricFindValue } from '@grafana/data';\n\nimport { TempoVariableQuery, TempoVariableQueryEditor } from './VariableQueryEditor';\nimport { TempoDatasource } from './datasource';\n\nexport class TempoVariableSupport extends CustomVariableSupport<TempoDatasource, TempoVariableQuery> {\n  editor = TempoVariableQueryEditor;\n\n  constructor(private datasource: TempoDatasource) {\n    super();\n  }\n\n  query(request: DataQueryRequest<TempoVariableQuery>): Observable<{ data: MetricFindValue[] }> {\n    if (!this.datasource) {\n      throw new Error('Datasource not initialized');\n    }\n\n    const result = this.datasource.executeVariableQuery(request.targets[0]);\n    return from(result).pipe(map((data) => ({ data })));\n  }\n}\n","import { groupBy } from 'lodash';\nimport { EMPTY, forkJoin, from, lastValueFrom, merge, Observable, of } from 'rxjs';\nimport { catchError, concatMap, finalize, map, mergeMap, toArray } from 'rxjs/operators';\nimport semver from 'semver';\n\nimport {\n  CoreApp,\n  DataFrame,\n  DataFrameDTO,\n  DataLink,\n  DataQueryRequest,\n  DataQueryResponse,\n  DataQueryResponseData,\n  DataSourceGetTagValuesOptions,\n  DataSourceInstanceSettings,\n  dateTime,\n  FieldType,\n  LoadingState,\n  NodeGraphDataFrameFieldNames,\n  rangeUtil,\n  ScopedVars,\n  SelectableValue,\n  TestDataSourceResponse,\n  urlUtil,\n} from '@grafana/data';\nimport { NodeGraphOptions, SpanBarOptions, TraceToLogsOptions } from '@grafana/o11y-ds-frontend';\nimport {\n  BackendSrvRequest,\n  config,\n  DataSourceWithBackend,\n  getBackendSrv,\n  getDataSourceSrv,\n  getTemplateSrv,\n  reportInteraction,\n  TemplateSrv,\n} from '@grafana/runtime';\nimport { BarGaugeDisplayMode, TableCellDisplayMode, VariableFormatID } from '@grafana/schema';\n\nimport { getTagWithoutScope, interpolateFilters } from './SearchTraceQLEditor/utils';\nimport { TempoVariableQuery, TempoVariableQueryType } from './VariableQueryEditor';\nimport { PrometheusDatasource, PromQuery } from './_importedDependencies/datasources/prometheus/types';\nimport { TagLimitOptions } from './configuration/TagLimitSettings';\nimport { SearchTableType, TraceqlFilter, TraceqlSearchScope } from './dataquery.gen';\nimport {\n  defaultTableFilter,\n  durationMetric,\n  errorRateMetric,\n  failedMetric,\n  histogramMetric,\n  nativeHistogramMetric,\n  mapPromMetricsToServiceMap,\n  rateMetric,\n  serviceMapMetrics,\n  totalsMetric,\n  nativeHistogramDurationMetric,\n} from './graphTransform';\nimport TempoLanguageProvider from './language_provider';\nimport {\n  enhanceTraceQlMetricsResponse,\n  formatTraceQLResponse,\n  transformFromOTLP as transformFromOTEL,\n  transformTrace,\n} from './resultTransformer';\nimport { doTempoMetricsStreaming, doTempoSearchStreaming } from './streaming';\nimport { TempoJsonData, TempoQuery } from './types';\nimport { getErrorMessage, mapErrorMessage, migrateFromSearchToTraceQLSearch } from './utils';\nimport { TempoVariableSupport } from './variables';\n\nexport const DEFAULT_LIMIT = 20;\nexport const DEFAULT_SPSS = 3; // spans per span set\n\nexport enum FeatureName {\n  searchStreaming = 'searchStreaming',\n  metricsStreaming = 'metricsStreaming',\n}\n\n/* Map, for each feature (e.g., streaming), the minimum Tempo version required to have that\n ** feature available. If the running Tempo instance on the user's backend is older than the\n ** target version, the feature is disabled in Grafana (frontend).\n */\nexport const featuresToTempoVersion = {\n  [FeatureName.searchStreaming]: '2.2.0',\n  [FeatureName.metricsStreaming]: '2.7.0',\n};\n\n// The version that we use as default in case we cannot retrieve it from the backend.\n// This is the last minor version of Tempo that does not expose the endpoint for build information.\nconst defaultTempoVersion = '2.1.0';\n\ninterface ServiceMapQueryResponse {\n  nodes: DataFrame;\n  edges: DataFrame;\n}\n\ninterface ServiceMapQueryResponseWithRates {\n  rates: Array<DataFrame | DataFrameDTO>;\n  nodes: DataFrame;\n  edges: DataFrame;\n}\n\ninterface TempoQueryMetrics {\n  success: boolean;\n  streaming?: boolean;\n  latencyMs: number;\n  query?: string;\n  error?: string;\n  statusCode?: number;\n  statusText?: string;\n}\n\nexport class TempoDatasource extends DataSourceWithBackend<TempoQuery, TempoJsonData> {\n  tracesToLogs?: TraceToLogsOptions;\n  serviceMap?: {\n    datasourceUid?: string;\n    histogramType?: 'classic' | 'native' | 'both';\n  };\n  search?: {\n    hide?: boolean;\n    filters?: TraceqlFilter[];\n  };\n  nodeGraph?: NodeGraphOptions;\n  traceQuery?: {\n    timeShiftEnabled?: boolean;\n    spanStartTimeShift?: string;\n    spanEndTimeShift?: string;\n  };\n  uploadedJson?: string | null = null;\n  spanBar?: SpanBarOptions;\n  tagLimit?: TagLimitOptions;\n  languageProvider: TempoLanguageProvider;\n\n  streamingEnabled?: {\n    search?: boolean;\n    metrics?: boolean;\n  };\n\n  // The version of Tempo running on the backend. `null` if we cannot retrieve it for whatever reason\n  tempoVersion?: string | null;\n\n  constructor(\n    public instanceSettings: DataSourceInstanceSettings<TempoJsonData>,\n    private readonly templateSrv: TemplateSrv = getTemplateSrv()\n  ) {\n    super(instanceSettings);\n\n    this.tracesToLogs = instanceSettings.jsonData.tracesToLogs;\n    this.serviceMap = instanceSettings.jsonData.serviceMap;\n    this.search = instanceSettings.jsonData.search;\n    this.nodeGraph = instanceSettings.jsonData.nodeGraph;\n    this.traceQuery = instanceSettings.jsonData.traceQuery;\n    this.streamingEnabled = instanceSettings.jsonData.streamingEnabled;\n\n    this.languageProvider = new TempoLanguageProvider(this);\n\n    if (!this.search?.filters) {\n      this.search = {\n        ...this.search,\n        filters: [\n          {\n            id: 'service-name',\n            tag: 'service.name',\n            operator: '=',\n            scope: TraceqlSearchScope.Resource,\n          },\n          { id: 'span-name', tag: 'name', operator: '=', scope: TraceqlSearchScope.Span },\n        ],\n      };\n    }\n\n    this.variables = new TempoVariableSupport(this);\n  }\n\n  async executeVariableQuery(query: TempoVariableQuery) {\n    // Avoid failing if the user did not select the query type (label names, label values, etc.)\n    if (query.type === undefined) {\n      return new Promise<Array<{ text: string }>>(() => []);\n    }\n\n    switch (query.type) {\n      case TempoVariableQueryType.LabelNames: {\n        return await this.labelNamesQuery();\n      }\n      case TempoVariableQueryType.LabelValues: {\n        return this.labelValuesQuery(query.label);\n      }\n      default: {\n        throw Error('Invalid query type: ' + query.type);\n      }\n    }\n  }\n\n  async labelNamesQuery(): Promise<Array<{ text: string }>> {\n    await this.languageProvider.fetchTags();\n    const tags = this.languageProvider.getAutocompleteTags();\n    return tags.filter((tag) => tag !== undefined).map((tag) => ({ text: tag }));\n  }\n\n  async labelValuesQuery(labelName?: string): Promise<Array<{ text: string }>> {\n    if (!labelName) {\n      return [];\n    }\n\n    let options;\n    try {\n      // Retrieve the scope of the tag\n      // Example: given `http.status_code`, we want scope `span`\n      // Note that we ignore possible name clashes, e.g., `http.status_code` in both `span` and `resource`\n      const scope: string | undefined = (this.languageProvider.tagsV2 || [])\n        // flatten the Scope objects\n        .flatMap((tagV2) => tagV2.tags.map((tag) => ({ scope: tagV2.name, name: tag })))\n        // find associated scope\n        .find((tag) => tag.name === labelName)?.scope;\n      if (!scope) {\n        throw Error(`Scope for tag ${labelName} not found`);\n      }\n\n      // For V2, we need to send scope and tag name, e.g. `span.http.status_code`,\n      // unless the tag has intrinsic scope\n      const scopeAndTag = scope === 'intrinsic' ? labelName : `${scope}.${labelName}`;\n      options = await this.languageProvider.getOptionsV2(scopeAndTag);\n    } catch {\n      // For V1, the tag name (e.g. `http.status_code`) is enough\n      options = await this.languageProvider.getOptionsV1(labelName);\n    }\n\n    return options.flatMap((option: SelectableValue<string>) =>\n      option.value !== undefined ? [{ text: option.value }] : []\n    );\n  }\n\n  // Allows to retrieve the list of tags for ad-hoc filters\n  async getTagKeys(): Promise<Array<{ text: string }>> {\n    await this.languageProvider.fetchTags();\n    const tags = this.languageProvider.tagsV2 || [];\n    return tags\n      .map(({ name, tags }) =>\n        tags.filter((tag) => tag !== undefined).map((t) => (name !== 'intrinsic' ? `${name}.${t}` : `${t}`))\n      )\n      .flat()\n      .map((tag) => ({ text: tag }));\n  }\n\n  // Allows to retrieve the list of tag values for ad-hoc filters\n  getTagValues(options: DataSourceGetTagValuesOptions<TempoQuery>): Promise<Array<{ text: string }>> {\n    const query = this.languageProvider.generateQueryFromFilters({ adhocFilters: options.filters });\n    return this.tagValuesQuery(options.key, query);\n  }\n\n  async tagValuesQuery(tag: string, query: string): Promise<Array<{ text: string }>> {\n    let options;\n    try {\n      // For V2, we need to send scope and tag name, e.g. `span.http.status_code`,\n      // unless the tag has intrinsic scope\n      options = await this.languageProvider.getOptionsV2(tag, query);\n    } catch {\n      // For V1, the tag name (e.g. `http.status_code`) is enough\n      options = await this.languageProvider.getOptionsV1(getTagWithoutScope(tag));\n    }\n\n    return options.flatMap((option: SelectableValue<string>) =>\n      option.value !== undefined ? [{ text: option.value }] : []\n    );\n  }\n\n  init = async () => {\n    const response = await lastValueFrom(\n      this._request('/api/status/buildinfo').pipe(\n        map((response) => response),\n        catchError((error) => {\n          console.error('Failure in retrieving build information', error?.data?.message);\n          return of({ error, data: { version: null } }); // unknown version\n        })\n      )\n    );\n    this.tempoVersion = response.data.version;\n  };\n\n  /**\n   * Check, for the given feature, whether it is available in Grafana.\n   *\n   * The check is done based on the version of the Tempo instance running on the backend and\n   * the minimum version required by the given feature to work.\n   *\n   * @param featureName - the name of the feature to consider\n   * @return true if the feature is available, false otherwise\n   */\n  isFeatureAvailable(featureName: FeatureName) {\n    // We know for old Tempo instances we don't know their version, so resort to default\n    const actualVersion = this.tempoVersion ?? defaultTempoVersion;\n\n    try {\n      return semver.gte(actualVersion, featuresToTempoVersion[featureName]);\n    } catch {\n      // We assume we are on a development and recent branch, thus we enable all features\n      return true;\n    }\n  }\n\n  /**\n   * Check if streaming for search queries is enabled (and available).\n   *\n   * We need to check:\n   * - the Tempo data source plugin toggle, to disable streaming if the user disabled it in the data source configuration\n   * - if Grafana Live is enabled\n   *\n   * @return true if streaming for search queries is enabled, false otherwise\n   */\n  isStreamingSearchEnabled() {\n    return this.streamingEnabled?.search && config.liveEnabled;\n  }\n  /**\n   * Check if streaming for metrics queries is enabled (and available).\n   *\n   * We need to check:\n   * - the Tempo data source plugin toggle, to disable streaming if the user disabled it in the data source configuration\n   * - if Grafana Live is enabled\n   *\n   * @return true if streaming for metrics queries is enabled, false otherwise\n   */\n  isStreamingMetricsEnabled() {\n    return this.streamingEnabled?.metrics && config.liveEnabled;\n  }\n\n  isTraceQlMetricsQuery(query: string): boolean {\n    // Check whether this is a metrics query by checking if it contains a metrics function\n    const metricsFnRegex =\n      /\\|\\s*(rate|count_over_time|avg_over_time|max_over_time|min_over_time|sum_over_time|quantile_over_time|histogram_over_time|compare)\\s*\\(/;\n    return !!query.trim().match(metricsFnRegex);\n  }\n\n  isTraceIdQuery(query: string): boolean {\n    const hexOnlyRegex = /^[0-9A-Fa-f]*$/;\n    // Check whether this is a trace ID or traceQL query by checking if it only contains hex characters\n    return !!query.trim().match(hexOnlyRegex);\n  }\n\n  query(options: DataQueryRequest<TempoQuery>): Observable<DataQueryResponse> {\n    const subQueries: Array<Observable<DataQueryResponse>> = [];\n    const filteredTargets = options.targets.filter((target) => !target.hide);\n    const targets: { [type: string]: TempoQuery[] } = groupBy(filteredTargets, (t) => t.queryType || 'traceql');\n\n    if (targets.clear) {\n      return of({ data: [], state: LoadingState.Done });\n    }\n\n    // Migrate user to new query type if they are using the old search query type\n    if (targets.nativeSearch?.length) {\n      if (\n        targets.nativeSearch[0].spanName ||\n        targets.nativeSearch[0].serviceName ||\n        targets.nativeSearch[0].search ||\n        targets.nativeSearch[0].maxDuration ||\n        targets.nativeSearch[0].minDuration ||\n        targets.nativeSearch[0].queryType === 'nativeSearch'\n      ) {\n        const migratedQuery = migrateFromSearchToTraceQLSearch(targets.nativeSearch[0]);\n        if (targets.traceqlSearch?.length) {\n          targets.traceqlSearch.push(migratedQuery);\n        } else {\n          targets.traceqlSearch = [migratedQuery];\n        }\n      }\n    }\n\n    if (targets.traceql?.length) {\n      try {\n        const appliedQuery = this.applyVariables(targets.traceql[0], options.scopedVars);\n        const queryValue = appliedQuery?.query || '';\n        // Check whether this is a trace ID or traceQL query by checking if it only contains hex characters\n        if (this.isTraceIdQuery(queryValue)) {\n          // There's only hex characters so let's assume that this is a trace ID\n          reportInteraction('grafana_traces_traceID_queried', {\n            datasourceType: 'tempo',\n            app: options.app ?? '',\n            grafana_version: config.buildInfo.version,\n            hasQuery: queryValue !== '' ? true : false,\n          });\n          subQueries.push(this.handleTraceIdQuery(options, targets.traceql, queryValue));\n        } else {\n          if (this.isTraceQlMetricsQuery(queryValue)) {\n            reportInteraction('grafana_traces_traceql_metrics_queried', {\n              datasourceType: 'tempo',\n              app: options.app ?? '',\n              grafana_version: config.buildInfo.version,\n              query: queryValue ?? '',\n              streaming: this.isStreamingMetricsEnabled(),\n            });\n            if (this.isStreamingMetricsEnabled()) {\n              subQueries.push(this.handleMetricsStreamingQuery(options, targets.traceql, queryValue));\n            } else {\n              subQueries.push(this.handleTraceQlMetricsQuery(options, targets.traceql, queryValue));\n            }\n          } else {\n            reportInteraction('grafana_traces_traceql_queried', {\n              datasourceType: 'tempo',\n              app: options.app ?? '',\n              grafana_version: config.buildInfo.version,\n              query: queryValue ?? '',\n              streaming: this.isStreamingSearchEnabled(),\n            });\n            subQueries.push(this.handleTraceQlQuery(options, targets, queryValue));\n          }\n        }\n      } catch (error) {\n        return of({ error: { message: error instanceof Error ? error.message : 'Unknown error occurred' }, data: [] });\n      }\n    }\n\n    if (targets.traceqlSearch?.length) {\n      if (targets.traceqlSearch[0].groupBy) {\n        return of({\n          error: {\n            message:\n              'The aggregate by query is deprecated. Please remove the current query and create a new one. Alternatively, you can use Traces Drilldown.',\n          },\n          data: [],\n        });\n      }\n\n      try {\n        const traceqlSearchTargets = targets.traceqlSearch;\n        if (traceqlSearchTargets.length > 0) {\n          const appliedQuery = this.applyVariables(traceqlSearchTargets[0], options.scopedVars);\n          const queryFromFilters = this.languageProvider.generateQueryFromFilters({\n            traceqlFilters: appliedQuery.filters,\n            adhocFilters: options.filters,\n          });\n\n          reportInteraction('grafana_traces_traceql_search_queried', {\n            datasourceType: 'tempo',\n            app: options.app ?? '',\n            grafana_version: config.buildInfo.version,\n            query: queryFromFilters ?? '',\n            streaming: this.isStreamingSearchEnabled(),\n          });\n\n          if (this.isStreamingSearchEnabled()) {\n            subQueries.push(this.handleStreamingQuery(options, traceqlSearchTargets, queryFromFilters));\n          } else {\n            const startTime = performance.now();\n            subQueries.push(\n              this._request('/api/search', {\n                q: queryFromFilters,\n                limit: options.targets[0].limit ?? DEFAULT_LIMIT,\n                spss: options.targets[0].spss ?? DEFAULT_SPSS,\n                start: options.range.from.unix(),\n                end: options.range.to.unix(),\n              }).pipe(\n                map((response) => {\n                  reportTempoQueryMetrics('grafana_traces_traceql_response', options, {\n                    success: true,\n                    streaming: false,\n                    latencyMs: Math.round(performance.now() - startTime), // rounded to nearest millisecond\n                    query: queryFromFilters ?? '',\n                  });\n                  return {\n                    data: formatTraceQLResponse(\n                      response.data.traces,\n                      this.instanceSettings,\n                      targets.traceqlSearch[0].tableType\n                    ),\n                  };\n                }),\n                catchError((err) => {\n                  reportTempoQueryMetrics('grafana_traces_traceql_response', options, {\n                    success: false,\n                    streaming: false,\n                    latencyMs: Math.round(performance.now() - startTime), // rounded to nearest millisecond\n                    query: queryFromFilters ?? '',\n                    error: getErrorMessage(err.message),\n                    statusCode: err.status,\n                    statusText: err.statusText,\n                  });\n                  return of({ error: { message: getErrorMessage(err?.data?.message) }, data: [] });\n                })\n              )\n            );\n          }\n        }\n      } catch (error) {\n        return of({ error: { message: error instanceof Error ? error.message : 'Unknown error occurred' }, data: [] });\n      }\n    }\n\n    if (targets.upload?.length) {\n      if (this.uploadedJson) {\n        reportInteraction('grafana_traces_json_file_uploaded', {\n          datasourceType: 'tempo',\n          app: options.app ?? '',\n          grafana_version: config.buildInfo.version,\n        });\n\n        const jsonData = JSON.parse(this.uploadedJson);\n        const isTraceData = jsonData.batches;\n        const isServiceGraphData =\n          Array.isArray(jsonData) && jsonData.some((df) => df?.meta?.preferredVisualisationType === 'nodeGraph');\n\n        if (isTraceData) {\n          subQueries.push(of(transformFromOTEL(jsonData.batches, this.nodeGraph?.enabled)));\n        } else if (isServiceGraphData) {\n          subQueries.push(of({ data: jsonData, state: LoadingState.Done }));\n        } else {\n          subQueries.push(of({ error: { message: 'Unable to parse uploaded data.' }, data: [] }));\n        }\n      } else {\n        subQueries.push(of({ data: [], state: LoadingState.Done }));\n      }\n    }\n\n    if (this.serviceMap?.datasourceUid && targets.serviceMap?.length > 0) {\n      reportInteraction('grafana_traces_service_graph_queried', {\n        datasourceType: 'tempo',\n        app: options.app ?? '',\n        grafana_version: config.buildInfo.version,\n        hasServiceMapQuery: targets.serviceMap[0].serviceMapQuery ? true : false,\n      });\n\n      const { datasourceUid, histogramType } = this.serviceMap;\n      const tempoDsUid = this.uid;\n      subQueries.push(\n        serviceMapQuery(options, datasourceUid, tempoDsUid, histogramType).pipe(\n          concatMap((result) =>\n            rateQuery(options, result, datasourceUid).pipe(\n              concatMap((result) => errorAndDurationQuery(options, result, datasourceUid, tempoDsUid, histogramType))\n            )\n          )\n        )\n      );\n    }\n\n    return merge(...subQueries).pipe(\n      map((response) => {\n        if (response.errors?.[0]?.message) {\n          response.errors[0].message = mapErrorMessage(response.errors?.[0]?.message);\n        }\n        return response;\n      })\n    );\n  }\n\n  applyTemplateVariables(query: TempoQuery, scopedVars: ScopedVars) {\n    return this.applyVariables(query, scopedVars);\n  }\n\n  interpolateVariablesInQueries(queries: TempoQuery[], scopedVars: ScopedVars): TempoQuery[] {\n    if (!queries || queries.length === 0) {\n      return [];\n    }\n\n    return queries.map((query) => {\n      return {\n        ...query,\n        datasource: this.getRef(),\n        ...this.applyVariables(query, scopedVars),\n      };\n    });\n  }\n\n  applyVariables(query: TempoQuery, scopedVars: ScopedVars) {\n    const expandedQuery = { ...query };\n\n    if (query.filters) {\n      expandedQuery.filters = interpolateFilters(query.filters, scopedVars);\n    }\n\n    return {\n      ...expandedQuery,\n      query: this.templateSrv.replace(query.query ?? '', scopedVars, VariableFormatID.Pipe),\n      serviceMapQuery: Array.isArray(query.serviceMapQuery)\n        ? query.serviceMapQuery.map((query) => this.templateSrv.replace(query, scopedVars))\n        : this.templateSrv.replace(query.serviceMapQuery ?? '', scopedVars),\n    };\n  }\n\n  /**\n   * Handles the simplest of the queries where we have just a trace id and return trace data for it.\n   * @param options\n   * @param targets\n   * @private\n   */\n  handleTraceIdQuery(\n    options: DataQueryRequest<TempoQuery>,\n    targets: TempoQuery[],\n    query: string\n  ): Observable<DataQueryResponse> {\n    const validTargets = targets\n      .filter((t) => t.query)\n      .map((t): TempoQuery => ({ ...t, query: t.query?.trim(), queryType: 'traceId' }));\n    if (!validTargets.length) {\n      return EMPTY;\n    }\n\n    const startTime = performance.now();\n    const request = this.makeTraceIdRequest(options, validTargets);\n    return super.query(request).pipe(\n      map((response) => {\n        if (response.error) {\n          reportTempoQueryMetrics('grafana_traces_traceID_response', options, {\n            success: false,\n            streaming: false,\n            latencyMs: Math.round(performance.now() - startTime), // rounded to nearest millisecond\n            query: query ?? '',\n            error: getErrorMessage(response.error.message),\n            statusCode: response.error.status,\n            statusText: response.error.statusText,\n          });\n          return response;\n        }\n        reportTempoQueryMetrics('grafana_traces_traceID_response', options, {\n          success: true,\n          streaming: false,\n          latencyMs: Math.round(performance.now() - startTime), // rounded to nearest millisecond\n          query: query ?? '',\n        });\n        return transformTrace(response, this.instanceSettings, this.nodeGraph?.enabled);\n      }),\n      catchError((error) => {\n        reportTempoQueryMetrics('grafana_traces_traceID_response', options, {\n          success: false,\n          streaming: false,\n          latencyMs: Math.round(performance.now() - startTime), // rounded to nearest millisecond\n          query: query ?? '',\n          error: getErrorMessage(error.message),\n          statusCode: error.status,\n          statusText: error.statusText,\n        });\n        throw error;\n      })\n    );\n  }\n\n  handleTraceQlQuery = (\n    options: DataQueryRequest<TempoQuery>,\n    targets: {\n      [type: string]: TempoQuery[];\n    },\n    queryValue: string\n  ): Observable<DataQueryResponse> => {\n    const startTime = performance.now();\n    if (this.isStreamingSearchEnabled()) {\n      return this.handleStreamingQuery(options, targets.traceql, queryValue);\n    } else {\n      return this._request('/api/search', {\n        q: queryValue,\n        limit: options.targets[0].limit ?? DEFAULT_LIMIT,\n        spss: options.targets[0].spss ?? DEFAULT_SPSS,\n        start: options.range.from.unix(),\n        end: options.range.to.unix(),\n      }).pipe(\n        map((response) => {\n          reportTempoQueryMetrics('grafana_traces_traceql_response', options, {\n            success: true,\n            streaming: false,\n            latencyMs: Math.round(performance.now() - startTime), // rounded to nearest millisecond\n            query: queryValue ?? '',\n          });\n          return {\n            data: formatTraceQLResponse(response.data.traces, this.instanceSettings, targets.traceql[0].tableType),\n          };\n        }),\n        catchError((err) => {\n          reportTempoQueryMetrics('grafana_traces_traceql_response', options, {\n            success: false,\n            streaming: false,\n            latencyMs: Math.round(performance.now() - startTime), // rounded to nearest millisecond\n            query: queryValue ?? '',\n            error: getErrorMessage(err.message),\n            statusCode: err.status,\n            statusText: err.statusText,\n          });\n          return of({ error: { message: getErrorMessage(err?.data?.message) }, data: [] });\n        })\n      );\n    }\n  };\n\n  handleTraceQlMetricsQuery(\n    options: DataQueryRequest<TempoQuery>,\n    targets: TempoQuery[],\n    query: string\n  ): Observable<DataQueryResponse> {\n    const validTargets = targets\n      .filter((t) => t.query)\n      .map(\n        (t): TempoQuery => ({ ...t, query: this.applyVariables(t, options.scopedVars).query, queryType: 'traceql' })\n      );\n    if (!validTargets.length) {\n      return EMPTY;\n    }\n\n    const startTime = performance.now();\n    const request = { ...options, targets: validTargets };\n    return super.query(request).pipe(\n      map((response) => {\n        reportTempoQueryMetrics('grafana_traces_traceql_metrics_response', options, {\n          success: true,\n          streaming: false,\n          latencyMs: Math.round(performance.now() - startTime), // rounded to nearest millisecond\n          query: query ?? '',\n        });\n        return enhanceTraceQlMetricsResponse(response, this.instanceSettings);\n      }),\n      catchError((err) => {\n        reportTempoQueryMetrics('grafana_traces_traceql_metrics_response', options, {\n          success: false,\n          streaming: false,\n          latencyMs: Math.round(performance.now() - startTime), // rounded to nearest millisecond\n          query: query ?? '',\n          error: getErrorMessage(err?.data?.message),\n          statusCode: err.status,\n          statusText: err.statusText,\n        });\n        return of({ error: { message: getErrorMessage(err?.data?.message) }, data: [] });\n      })\n    );\n  }\n\n  // This function can probably be simplified by avoiding passing both `targets` and `query`,\n  // since `query` is built from `targets`, if you look at how this function is currently called\n  handleStreamingQuery(\n    options: DataQueryRequest<TempoQuery>,\n    targets: TempoQuery[],\n    query: string\n  ): Observable<DataQueryResponse> {\n    if (query === '') {\n      return EMPTY;\n    }\n\n    const startTime = performance.now();\n    return merge(\n      ...targets.map((target) =>\n        doTempoSearchStreaming(\n          { ...target, query },\n          this, // the datasource\n          options,\n          this.instanceSettings\n        )\n      )\n    ).pipe(\n      catchError((error) => {\n        reportTempoQueryMetrics('grafana_traces_traceql_response', options, {\n          success: false,\n          streaming: true,\n          latencyMs: Math.round(performance.now() - startTime), // rounded to nearest millisecond\n          query: query ?? '',\n          error: getErrorMessage(error?.data?.message),\n          statusCode: error.status,\n          statusText: error.statusText,\n        });\n        // Re-throw the error to maintain the error chain\n        throw error;\n      }),\n      finalize(() => {\n        reportTempoQueryMetrics('grafana_traces_traceql_response', options, {\n          success: true,\n          streaming: true,\n          query: query ?? '',\n          latencyMs: Math.round(performance.now() - startTime), // rounded to nearest millisecond\n        });\n      })\n    );\n  }\n\n  // This function can probably be simplified by avoiding passing both `targets` and `query`,\n  // since `query` is built from `targets`, if you look at how this function is currently called\n  handleMetricsStreamingQuery(\n    options: DataQueryRequest<TempoQuery>,\n    targets: TempoQuery[],\n    query: string\n  ): Observable<DataQueryResponse> {\n    if (query === '') {\n      return EMPTY;\n    }\n\n    const startTime = performance.now();\n    return merge(\n      ...targets.map((target) =>\n        doTempoMetricsStreaming(\n          { ...target, query },\n          this, // the datasource\n          options\n        )\n      )\n    ).pipe(\n      catchError((error) => {\n        reportTempoQueryMetrics('grafana_traces_traceql_metrics_response', options, {\n          success: false,\n          streaming: true,\n          latencyMs: Math.round(performance.now() - startTime), // rounded to nearest millisecond\n          query: query ?? '',\n          error: getErrorMessage(error?.data?.message),\n          statusCode: error.status,\n          statusText: error.statusText,\n        });\n        // Re-throw the error to maintain the error chain\n        throw error;\n      }),\n      finalize(() => {\n        reportTempoQueryMetrics('grafana_traces_traceql_metrics_response', options, {\n          success: true,\n          streaming: true,\n          query: query ?? '',\n          latencyMs: Math.round(performance.now() - startTime), // rounded to nearest millisecond\n        });\n      })\n    );\n  }\n\n  makeTraceIdRequest(options: DataQueryRequest<TempoQuery>, targets: TempoQuery[]): DataQueryRequest<TempoQuery> {\n    const request = {\n      ...options,\n      targets,\n    };\n\n    if (this.traceQuery?.timeShiftEnabled) {\n      request.range = options.range && {\n        ...options.range,\n        from: dateTime(options.range.from).subtract(\n          rangeUtil.intervalToMs(this.traceQuery?.spanStartTimeShift || '30m'),\n          'milliseconds'\n        ),\n        to: dateTime(options.range.to).add(\n          rangeUtil.intervalToMs(this.traceQuery?.spanEndTimeShift || '30m'),\n          'milliseconds'\n        ),\n      };\n    } else {\n      request.range = { from: dateTime(0), to: dateTime(0), raw: { from: dateTime(0), to: dateTime(0) } };\n    }\n\n    return request;\n  }\n\n  async metadataRequest(url: string, params = {}) {\n    return await lastValueFrom(this._request(url, params, { method: 'GET', hideFromInspector: true }));\n  }\n\n  _request(apiUrl: string, data?: unknown, options?: Partial<BackendSrvRequest>): Observable<Record<string, any>> {\n    const params = data ? urlUtil.serializeParams(data) : '';\n    const url = `${this.instanceSettings.url}${apiUrl}${params.length ? `?${params}` : ''}`;\n    const req = { ...options, url };\n    return getBackendSrv().fetch(req);\n  }\n\n  async testDatasource(): Promise<TestDataSourceResponse> {\n    const observables = [];\n\n    const options: BackendSrvRequest = {\n      headers: {},\n      method: 'GET',\n      url: `${this.instanceSettings.url}/api/echo`,\n    };\n    observables.push(\n      getBackendSrv()\n        .fetch(options)\n        .pipe(\n          mergeMap(() => {\n            return of({ status: 'success', message: 'Health check succeeded' });\n          }),\n          catchError((err) => {\n            return of({\n              status: 'error',\n              message: getErrorMessage(err?.data?.message, 'Unable to connect with Tempo'),\n            });\n          })\n        )\n    );\n\n    if (this.streamingEnabled?.search) {\n      const now = new Date();\n      const from = new Date(now);\n      from.setMinutes(from.getMinutes() - 15);\n      observables.push(\n        this.handleStreamingQuery(\n          {\n            range: {\n              from: dateTime(from),\n              to: dateTime(now),\n              raw: { from: 'now-15m', to: 'now' },\n            },\n            requestId: '',\n            interval: '',\n            intervalMs: 0,\n            scopedVars: {},\n            targets: [],\n            timezone: '',\n            app: '',\n            startTime: 0,\n          },\n          [\n            {\n              datasource: this.instanceSettings,\n              limit: 1,\n              query: '{}',\n              queryType: 'traceql',\n              refId: 'A',\n              tableType: SearchTableType.Traces,\n              filters: [],\n            },\n          ],\n          '{}'\n        ).pipe(\n          mergeMap(() => {\n            return of({ status: 'success', message: 'Streaming test succeeded.' });\n          }),\n          catchError((err) => {\n            return of({\n              status: 'error',\n              message: getErrorMessage(err?.data?.message, 'Test for streaming failed, consider disabling streaming'),\n            });\n          })\n        )\n      );\n    }\n\n    return await lastValueFrom(\n      forkJoin(observables).pipe(\n        mergeMap((observableResults) => {\n          const erroredResult = observableResults.find((result) => result.status !== 'success');\n          return erroredResult\n            ? of(erroredResult)\n            : of({ status: 'success', message: 'Successfully connected to Tempo data source.' });\n        })\n      )\n    );\n  }\n\n  getQueryDisplayText(query: TempoQuery) {\n    if (query.queryType === 'traceql' || query.queryType === 'traceId') {\n      return query.query ?? '';\n    }\n\n    const appliedQuery = this.applyVariables(query, {});\n    return this.languageProvider.generateQueryFromFilters({ traceqlFilters: appliedQuery.filters });\n  }\n}\n\nfunction queryPrometheus(request: DataQueryRequest<PromQuery>, datasourceUid: string) {\n  return from(getDataSourceSrv().get(datasourceUid)).pipe(\n    mergeMap((ds) => {\n      return (ds as PrometheusDatasource).query(request);\n    })\n  );\n}\n\nfunction serviceMapQuery(\n  request: DataQueryRequest<TempoQuery>,\n  datasourceUid: string,\n  tempoDatasourceUid: string,\n  histogramType?: string\n): Observable<ServiceMapQueryResponse> {\n  const serviceMapRequest = makePromServiceMapRequest(request, histogramType);\n\n  return queryPrometheus(serviceMapRequest, datasourceUid).pipe(\n    // Just collect all the responses first before processing into node graph data\n    toArray(),\n    map((responses: DataQueryResponse[]) => {\n      const errorRes = responses.find((res) => !!res.error);\n      if (errorRes) {\n        throw new Error(getErrorMessage(errorRes.error?.message));\n      }\n\n      const { nodes, edges } = mapPromMetricsToServiceMap(responses, request.range);\n      if (nodes.fields.length > 0 && edges.fields.length > 0) {\n        const nodeLength = nodes.fields[0].values.length;\n        const edgeLength = edges.fields[0].values.length;\n\n        reportInteraction('grafana_traces_service_graph_size', {\n          datasourceType: 'tempo',\n          grafana_version: config.buildInfo.version,\n          nodeLength,\n          edgeLength,\n        });\n      }\n\n      // No handling of multiple targets assume just one. NodeGraph does not support it anyway, but still should be\n      // fixed at some point.\n      const { serviceMapIncludeNamespace, refId } = request.targets[0];\n      nodes.refId = refId;\n      edges.refId = refId;\n\n      if (serviceMapIncludeNamespace) {\n        nodes.fields[0].config = getFieldConfig(\n          datasourceUid, // datasourceUid\n          tempoDatasourceUid, // tempoDatasourceUid\n          '__data.fields.title', // targetField\n          '__data.fields[0]', // tempoField\n          undefined, // sourceField\n          { targetNamespace: '__data.fields.subtitle' },\n          histogramType\n        );\n\n        edges.fields[0].config = getFieldConfig(\n          datasourceUid, // datasourceUid\n          tempoDatasourceUid, // tempoDatasourceUid\n          '__data.fields.targetName', // targetField\n          '__data.fields.target', // tempoField\n          '__data.fields.sourceName', // sourceField\n          { targetNamespace: '__data.fields.targetNamespace', sourceNamespace: '__data.fields.sourceNamespace' },\n          histogramType\n        );\n      } else {\n        nodes.fields[0].config = getFieldConfig(\n          datasourceUid,\n          tempoDatasourceUid,\n          '__data.fields.id',\n          '__data.fields[0]',\n          undefined,\n          undefined,\n          histogramType\n        );\n        edges.fields[0].config = getFieldConfig(\n          datasourceUid,\n          tempoDatasourceUid,\n          '__data.fields.target',\n          '__data.fields.target',\n          '__data.fields.source',\n          undefined,\n          histogramType\n        );\n      }\n\n      return {\n        nodes,\n        edges,\n        state: LoadingState.Done,\n      };\n    })\n  );\n}\n\nfunction rateQuery(\n  request: DataQueryRequest<TempoQuery>,\n  serviceMapResponse: ServiceMapQueryResponse,\n  datasourceUid: string,\n  histogramType?: string\n): Observable<ServiceMapQueryResponseWithRates> {\n  const serviceMapRequest = makePromServiceMapRequest(request, histogramType);\n  serviceMapRequest.targets = makeServiceGraphViewRequest([buildExpr(rateMetric, defaultTableFilter, request)]);\n\n  return queryPrometheus(serviceMapRequest, datasourceUid).pipe(\n    toArray(),\n    map((responses: DataQueryResponse[]) => {\n      const errorRes = responses.find((res) => !!res.error);\n      if (errorRes) {\n        throw new Error(getErrorMessage(errorRes.error?.message));\n      }\n      return {\n        rates: responses[0]?.data ?? [],\n        nodes: serviceMapResponse.nodes,\n        edges: serviceMapResponse.edges,\n      };\n    })\n  );\n}\n\n// we need the response from the rate query to get the rate span_name(s),\n// -> which determine the errorRate/duration span_name(s) we need to query\nfunction errorAndDurationQuery(\n  request: DataQueryRequest<TempoQuery>,\n  rateResponse: ServiceMapQueryResponseWithRates,\n  datasourceUid: string,\n  tempoDatasourceUid: string,\n  histogramType?: string\n) {\n  let serviceGraphViewMetrics = [];\n  let errorRateBySpanName = '';\n  let durationsBySpanName: string[] = [];\n\n  let labels = [];\n  if (rateResponse.rates[0] && request.app === CoreApp.Explore) {\n    const spanNameField = rateResponse.rates[0].fields.find((field) => field.name === 'span_name');\n    if (spanNameField && spanNameField.values) {\n      labels = spanNameField.values;\n    }\n  } else if (rateResponse.rates) {\n    rateResponse.rates.map((df: DataFrame | DataFrameDTO) => {\n      const spanNameLabels = df.fields.find((field) => field.labels?.['span_name']);\n      if (spanNameLabels) {\n        labels.push(spanNameLabels.labels?.['span_name']);\n      }\n    });\n  }\n  const spanNames = getEscapedRegexValues(getEscapedValues(labels));\n\n  if (spanNames.length > 0) {\n    errorRateBySpanName = buildExpr(errorRateMetric, 'span_name=~\"' + spanNames.join('|') + '\"', request);\n    serviceGraphViewMetrics.push(errorRateBySpanName);\n    spanNames.map((name: string) => {\n      const checkedDurationMetric = histogramType === 'native' ? nativeHistogramDurationMetric : durationMetric;\n      const metric = buildExpr(checkedDurationMetric, 'span_name=~\"' + name + '\"', request);\n      durationsBySpanName.push(metric);\n      serviceGraphViewMetrics.push(metric);\n    });\n  }\n\n  const serviceMapRequest = makePromServiceMapRequest(request, histogramType);\n  serviceMapRequest.targets = makeServiceGraphViewRequest(serviceGraphViewMetrics);\n\n  return queryPrometheus(serviceMapRequest, datasourceUid).pipe(\n    // Just collect all the responses first before processing into node graph data\n    toArray(),\n    map((errorAndDurationResponse: DataQueryResponse[]) => {\n      const errorRes = errorAndDurationResponse.find((res) => !!res.error);\n      if (errorRes) {\n        throw new Error(getErrorMessage(errorRes.error?.message));\n      }\n\n      const serviceGraphView = getServiceGraphViewDataFrames(\n        request,\n        rateResponse,\n        errorAndDurationResponse[0],\n        errorRateBySpanName,\n        durationsBySpanName,\n        datasourceUid,\n        tempoDatasourceUid,\n        histogramType\n      );\n\n      if (serviceGraphView.fields.length === 0) {\n        return {\n          data: [rateResponse.nodes, rateResponse.edges],\n          state: LoadingState.Done,\n        };\n      }\n\n      return {\n        data: [serviceGraphView, rateResponse.nodes, rateResponse.edges],\n        state: LoadingState.Done,\n      };\n    })\n  );\n}\n\nfunction makePromLink(title: string, expr: string, datasourceUid: string, instant: boolean) {\n  return {\n    url: '',\n    title,\n    internal: {\n      query: {\n        expr: expr,\n        range: !instant,\n        exemplar: !instant,\n        instant: instant,\n      },\n      datasourceUid,\n      datasourceName: getDataSourceSrv().getInstanceSettings(datasourceUid)?.name ?? '',\n    },\n  };\n}\n\n// TODO: this is basically the same as prometheus/datasource.ts#prometheusSpecialRegexEscape which is used to escape\n//  template variable values. It would be best to move it to some common place.\nexport function getEscapedRegexValues(values: string[]) {\n  return values.map((value: string) => value.replace(/[$^*{}\\[\\]\\'+?.()|]/g, '\\\\\\\\$&'));\n}\n\nexport function getEscapedValues(values: string[]) {\n  return values.map((value: string) => value.replace(/[\"\\\\]/g, '\\\\$&'));\n}\n\nexport function getFieldConfig(\n  datasourceUid: string,\n  tempoDatasourceUid: string,\n  targetField: string,\n  tempoField: string,\n  sourceField?: string,\n  namespaceFields?: { targetNamespace: string; sourceNamespace?: string },\n  histogramType?: string\n) {\n  let source = sourceField ? `client=\"\\${${sourceField}}\",` : '';\n  let target = `server=\"\\${${targetField}}\"`;\n  let serverSumBy = 'server';\n\n  if (namespaceFields !== undefined) {\n    const { targetNamespace } = namespaceFields;\n    target += `,server_service_namespace=\"\\${${targetNamespace}}\"`;\n    serverSumBy += ', server_service_namespace';\n\n    if (source) {\n      const { sourceNamespace } = namespaceFields;\n      source += `client_service_namespace=\"\\${${sourceNamespace}}\",`;\n      serverSumBy += ', client_service_namespace';\n    }\n  }\n\n  return {\n    links: [\n      makePromLink(\n        'Request rate',\n        `sum by (client, ${serverSumBy})(rate(${totalsMetric}{${source}${target}}[$__rate_interval]))`,\n        datasourceUid,\n        false\n      ),\n      ...makeHistogramLink(datasourceUid, source, target, serverSumBy, histogramType),\n      makePromLink(\n        'Failed request rate',\n        `sum by (client, ${serverSumBy})(rate(${failedMetric}{${source}${target}}[$__rate_interval]))`,\n        datasourceUid,\n        false\n      ),\n      makeTempoLinkServiceMap(\n        'View traces',\n        namespaceFields !== undefined ? `\\${${namespaceFields.targetNamespace}}` : '',\n        `\\${${targetField}}`,\n        tempoDatasourceUid\n      ),\n    ],\n  };\n}\n\nexport function makeHistogramLink(\n  datasourceUid: string,\n  source: string,\n  target: string,\n  serverSumBy: string,\n  histogramType?: string\n) {\n  const createHistogramLink = (metric: string, title: string) =>\n    makePromLink(\n      title,\n      `histogram_quantile(0.9, sum(rate(${metric}{${source}${target}}[$__rate_interval])) by (le, client, ${serverSumBy}))`,\n      datasourceUid,\n      false\n    );\n\n  switch (histogramType) {\n    case 'both':\n      return [\n        createHistogramLink(histogramMetric, 'Request classic histogram'),\n        createHistogramLink(nativeHistogramMetric, 'Request native histogram'),\n      ];\n    case 'native':\n      return [createHistogramLink(nativeHistogramMetric, 'Request native histogram')];\n    default:\n      return [createHistogramLink(histogramMetric, 'Request classic histogram')];\n  }\n}\n\nexport function makeTempoLink(\n  title: string,\n  serviceNamespace: string | undefined,\n  serviceName: string,\n  spanName: string,\n  datasourceUid: string\n) {\n  let query: TempoQuery = { refId: 'A', queryType: 'traceqlSearch', filters: [] };\n  if (serviceNamespace !== undefined && serviceNamespace !== '') {\n    query.filters.push({\n      id: 'service-namespace',\n      scope: TraceqlSearchScope.Resource,\n      tag: 'service.namespace',\n      value: serviceNamespace,\n      operator: '=',\n      valueType: 'string',\n    });\n  }\n  if (serviceName !== '') {\n    query.filters.push({\n      id: 'service-name',\n      scope: TraceqlSearchScope.Resource,\n      tag: 'service.name',\n      value: serviceName,\n      operator: '=',\n      valueType: 'string',\n    });\n  }\n  if (spanName !== '') {\n    query.filters.push({\n      id: 'span-name',\n      scope: TraceqlSearchScope.Span,\n      tag: 'name',\n      value: spanName,\n      operator: '=',\n      valueType: 'string',\n    });\n  }\n\n  return {\n    url: '',\n    title,\n    internal: {\n      query,\n      datasourceUid,\n      datasourceName: getDataSourceSrv().getInstanceSettings(datasourceUid)?.name ?? '',\n    },\n  };\n}\n\nfunction makeTempoLinkServiceMap(\n  title: string,\n  serviceNamespaceVar: string | undefined,\n  serviceNameVar: string,\n  datasourceUid: string\n): DataLink<TempoQuery> {\n  return {\n    url: '',\n    title,\n    internal: {\n      datasourceUid,\n      datasourceName: getDataSourceSrv().getInstanceSettings(datasourceUid)?.name ?? '',\n      query: ({ replaceVariables, scopedVars }) => {\n        const serviceName = replaceVariables?.(serviceNameVar, scopedVars);\n        const serviceNamespace = serviceNamespaceVar ? replaceVariables?.(serviceNamespaceVar, scopedVars) : undefined;\n        const isInstrumented =\n          replaceVariables?.(`\\${__data.fields.${NodeGraphDataFrameFieldNames.isInstrumented}}`, scopedVars) !==\n          'false';\n        const query: TempoQuery = { refId: 'A', queryType: 'traceqlSearch', filters: [] };\n\n        // Only do the peer query if service is actively set as not instrumented\n        if (isInstrumented === false) {\n          const filters = ['db.name', 'db.system', 'peer.service', 'messaging.system', 'net.peer.name']\n            .map((peerAttribute) => `span.${peerAttribute}=\"${serviceName}\"`)\n            .join(' || ');\n          query.queryType = 'traceql';\n          query.query = `{${filters}}`;\n        } else {\n          if (serviceNamespace) {\n            query.filters.push({\n              id: 'service-namespace',\n              scope: TraceqlSearchScope.Resource,\n              tag: 'service.namespace',\n              value: serviceNamespace,\n              operator: '=',\n              valueType: 'string',\n            });\n          }\n          if (serviceName) {\n            query.filters.push({\n              id: 'service-name',\n              scope: TraceqlSearchScope.Resource,\n              tag: 'service.name',\n              value: serviceName,\n              operator: '=',\n              valueType: 'string',\n            });\n          }\n        }\n\n        return query;\n      },\n    },\n  };\n}\n\nexport function makePromServiceMapRequest(\n  options: DataQueryRequest<TempoQuery>,\n  histogramType?: string\n): DataQueryRequest<PromQuery> {\n  return {\n    ...options,\n    targets: serviceMapMetrics\n      .map<PromQuery[]>((metric) => {\n        if (histogramType === 'native' && metric.includes('_bucket')) {\n          metric = metric.replace('_bucket', '');\n        }\n        const { serviceMapQuery, serviceMapIncludeNamespace: serviceMapIncludeNamespace } = options.targets[0];\n        const extraSumByFields = serviceMapIncludeNamespace\n          ? ', client_service_namespace, server_service_namespace'\n          : '';\n        const queries = Array.isArray(serviceMapQuery) ? serviceMapQuery : [serviceMapQuery];\n        const sumSubExprs = queries.map(\n          (query) => `sum by (client, server${extraSumByFields}) (rate(${metric}${query || ''}[$__range]))`\n        );\n        const groupSubExprs = queries.map(\n          (query) => `group by (client, connection_type, server${extraSumByFields}) (${metric}${query || ''})`\n        );\n\n        return [\n          {\n            format: 'table',\n            refId: metric,\n            // options.targets[0] is not correct here, but not sure what should happen if you have multiple queries for\n            // service map at the same time anyway\n            expr: sumSubExprs.join(' OR '),\n            instant: true,\n          },\n          {\n            format: 'table',\n            refId: `${metric}_labels`,\n            expr: groupSubExprs.join(' OR '),\n            instant: true,\n          },\n        ];\n      })\n      .flat(),\n  };\n}\n\nfunction getServiceGraphViewDataFrames(\n  request: DataQueryRequest<TempoQuery>,\n  rateResponse: ServiceMapQueryResponseWithRates,\n  secondResponse: DataQueryResponse,\n  errorRateBySpanName: string,\n  durationsBySpanName: string[],\n  datasourceUid: string,\n  tempoDatasourceUid: string,\n  histogramType?: string\n) {\n  let df: any = { fields: [] };\n\n  const rate = rateResponse.rates.filter((x) => {\n    return x.refId === buildExpr(rateMetric, defaultTableFilter, request);\n  });\n  const errorRate = secondResponse.data.filter((x) => {\n    return x.refId === errorRateBySpanName;\n  });\n  const duration = secondResponse.data.filter((x) => {\n    return durationsBySpanName.includes(x.refId ?? '');\n  });\n\n  if (rate.length > 0 && rate[0].fields?.length > 2) {\n    df.fields.push({\n      ...rate[0].fields[1],\n      name: 'Name',\n      config: {\n        filterable: false,\n      },\n    });\n\n    df.fields.push({\n      ...rate[0].fields[2],\n      name: 'Rate',\n      config: {\n        links: [\n          makePromLink(\n            'Rate',\n            buildLinkExpr(buildExpr(rateMetric, 'span_name=\"${__data.fields[0]}\"', request)),\n            datasourceUid,\n            false\n          ),\n        ],\n        decimals: 2,\n      },\n    });\n\n    df.fields.push({\n      ...rate[0].fields[2],\n      name: '  ',\n      labels: null,\n      config: {\n        color: {\n          mode: 'continuous-BlPu',\n        },\n        custom: {\n          cellOptions: {\n            mode: BarGaugeDisplayMode.Lcd,\n            type: TableCellDisplayMode.Gauge,\n          },\n        },\n        decimals: 3,\n      },\n    });\n  }\n\n  if (errorRate.length > 0 && errorRate[0].fields?.length > 2) {\n    const errorRateNames = errorRate[0].fields[1]?.values ?? [];\n    const errorRateValues = errorRate[0].fields[2]?.values ?? [];\n    let errorRateObj: Record<\n      string,\n      {\n        value: string;\n      }\n    > = {};\n    errorRateNames.map((name: string, index: number) => {\n      errorRateObj[name] = { value: errorRateValues[index] };\n    });\n\n    const values = getRateAlignedValues({ ...rate }, errorRateObj);\n\n    df.fields.push({\n      ...errorRate[0].fields[2],\n      name: 'Error Rate',\n      values: values,\n      config: {\n        links: [\n          makePromLink(\n            'Error Rate',\n            buildLinkExpr(buildExpr(errorRateMetric, 'span_name=\"${__data.fields[0]}\"', request)),\n            datasourceUid,\n            false\n          ),\n        ],\n        decimals: 2,\n      },\n    });\n\n    df.fields.push({\n      ...errorRate[0].fields[2],\n      name: '   ',\n      values: values,\n      labels: null,\n      config: {\n        color: {\n          mode: 'continuous-RdYlGr',\n        },\n        custom: {\n          cellOptions: {\n            mode: BarGaugeDisplayMode.Lcd,\n            type: TableCellDisplayMode.Gauge,\n          },\n        },\n        decimals: 3,\n      },\n    });\n  }\n\n  if (duration.length > 0) {\n    let durationObj: Record<\n      string,\n      {\n        value: string;\n      }\n    > = {};\n    duration.forEach((d) => {\n      if (d.fields.length > 1) {\n        const delimiter = d.refId?.includes('span_name=~\"') ? 'span_name=~\"' : 'span_name=\"';\n        const name = d.refId?.split(delimiter)[1].split('\"}')[0];\n        durationObj[name!] = { value: d.fields[1].values[0] };\n      }\n    });\n    if (Object.keys(durationObj).length > 0) {\n      const checkedDurationMetric = histogramType === 'native' ? nativeHistogramDurationMetric : durationMetric;\n      df.fields.push({\n        ...duration[0].fields[1],\n        name: 'Duration (p90)',\n        values: getRateAlignedValues({ ...rate }, durationObj),\n        config: {\n          links: [\n            makePromLink(\n              'Duration',\n              buildLinkExpr(buildExpr(checkedDurationMetric, 'span_name=\"${__data.fields[0]}\"', request)),\n              datasourceUid,\n              false\n            ),\n          ],\n          unit: 's',\n        },\n      });\n    }\n  }\n\n  if (df.fields.length > 0 && df.fields[0].values) {\n    df.fields.push({\n      name: 'Links',\n      type: FieldType.string,\n      values: df.fields[0].values.map(() => {\n        return 'Tempo';\n      }),\n      config: {\n        links: [makeTempoLink('Tempo', undefined, '', `\\${__data.fields[0]}`, tempoDatasourceUid)],\n      },\n    });\n  }\n\n  return df;\n}\n\n/**\n * Reports metrics for Tempo query interactions.\n *\n * @param options - The data query request options containing app and other context\n * @param metrics - Object containing metrics to report:\n *   - success: Whether the query was successful\n *   - streaming: (optional) Whether streaming was used\n *   - latencyMs: Query execution time in milliseconds\n *   - query: (optional) The query string that was executed\n *   - error: (optional) Error message if query failed\n *   - statusCode: (optional) HTTP status code if query failed\n *   - statusText: (optional) HTTP status text if query failed\n * @param interactionName - (optional) Name of the interaction to report.\n *                         Defaults to 'grafana_traces_traceql_response'\n *\n * @example\n * ```typescript\n * reportTempoQueryMetrics(options, {\n *   success: true,\n *   streaming: true,\n *   latencyMs: Math.round(performance.now() - startTime),\n *   query: 'my query'\n * });\n * ```\n */\nfunction reportTempoQueryMetrics(\n  interactionName: string,\n  options: DataQueryRequest<TempoQuery>,\n  metrics: TempoQueryMetrics\n) {\n  reportInteraction(interactionName, {\n    datasourceType: 'tempo',\n    app: options.app ?? '',\n    grafana_version: config.buildInfo.version,\n    timeRangeSeconds: options.range ? options.range.to.unix() - options.range.from.unix() : 0,\n    timeRange: options.range ? options.range.raw.from + ';' + options.range.raw.to : '',\n    ...metrics,\n  });\n}\n\nexport function buildExpr(\n  metric: { expr: string; params: string[]; topk?: number },\n  extraParams: string,\n  request: DataQueryRequest<TempoQuery>\n): string {\n  let serviceMapQuery = request.targets[0]?.serviceMapQuery ?? '';\n  const serviceMapQueries = Array.isArray(serviceMapQuery) ? serviceMapQuery : [serviceMapQuery];\n  const metricParamsArray = serviceMapQueries.map((query) => {\n    // remove surrounding curly braces from serviceMapQuery\n    const serviceMapQueryMatch = query.match(/^{(.*)}$/);\n    if (serviceMapQueryMatch?.length) {\n      query = serviceMapQueryMatch[1];\n    }\n    // map serviceGraph metric tags to serviceGraphView metric tags\n    query = query\n      // client_deployment_environment=\"prod\" -> deployment_environment=\"prod\"\n      .replaceAll('client_', '')\n      .replaceAll('server_', '')\n      .replace('client', 'service') // client=\"fooservice\" -> service=\"fooservice\"\n      .replace('server', 'service');\n    return query.includes('span_name')\n      ? metric.params.concat(query)\n      : metric.params\n          .concat(query)\n          .concat(extraParams)\n          .filter((item: string) => item);\n  });\n  const exprs = metricParamsArray.map((params) => metric.expr.replace('{}', '{' + params.join(',') + '}'));\n  const expr = exprs.join(' OR ');\n  if (metric.topk) {\n    return `topk(${metric.topk}, ${expr})`;\n  }\n  return expr;\n}\n\nexport function buildLinkExpr(expr: string) {\n  // don't want top 5 or by span name in links\n  expr = expr.replace('topk(5, ', '').replace(' by (span_name))', '');\n  return expr.replace('__range', '__rate_interval');\n}\n\n// query result frames can come back in any order\n// here we align the table col values to the same row name (rateName) across the table\nexport function getRateAlignedValues(\n  rateResp: DataQueryResponseData[],\n  objToAlign: { [x: string]: { value: string } }\n) {\n  const rateNames = rateResp[0]?.fields[1]?.values ?? [];\n  let values: string[] = [];\n\n  for (let i = 0; i < rateNames.length; i++) {\n    if (Object.keys(objToAlign).includes(rateNames[i])) {\n      values.push(objToAlign[rateNames[i]].value);\n    } else {\n      values.push('0');\n    }\n  }\n\n  return values;\n}\n\nexport function makeServiceGraphViewRequest(metrics: string[]): PromQuery[] {\n  return metrics.map((metric) => {\n    return {\n      refId: metric,\n      expr: metric,\n      instant: true,\n    };\n  });\n}\n","import { AdHocVariableFilter, LanguageProvider, SelectableValue } from '@grafana/data';\nimport { getTemplateSrv } from '@grafana/runtime';\nimport { VariableFormatID } from '@grafana/schema';\n\nimport {\n  filterToQuerySection,\n  getAllTags,\n  getIntrinsicTags,\n  getTagsByScope,\n  getUnscopedTags,\n} from './SearchTraceQLEditor/utils';\nimport { TraceqlFilter, TraceqlSearchScope } from './dataquery.gen';\nimport { TempoDatasource } from './datasource';\nimport { enumIntrinsics, intrinsicsV1 } from './traceql/traceql';\nimport { Scope } from './types';\n\n// Limit maximum tags retrieved from the backend\nexport const TAGS_LIMIT = 5000;\n\n// Limit maximum options in select dropdowns\nexport const OPTIONS_LIMIT = 1000;\n\nexport default class TempoLanguageProvider extends LanguageProvider {\n  datasource: TempoDatasource;\n  tagsV1?: string[];\n  tagsV2?: Scope[];\n  constructor(datasource: TempoDatasource, initialValues?: any) {\n    super();\n\n    this.datasource = datasource;\n    Object.assign(this, initialValues);\n  }\n\n  request = async (url: string, params = {}) => {\n    const res = await this.datasource.metadataRequest(url, params);\n    return res?.data;\n  };\n\n  start = async () => {\n    if (!this.startTask) {\n      this.startTask = this.fetchTags().then(() => {\n        return [];\n      });\n    }\n\n    return this.startTask;\n  };\n\n  getTagsLimit = () => {\n    return this.datasource.instanceSettings.jsonData?.tagLimit || TAGS_LIMIT;\n  };\n\n  async fetchTags() {\n    let v1Resp, v2Resp;\n    try {\n      v2Resp = await this.request('/api/v2/search/tags', { limit: this.getTagsLimit() });\n    } catch (error) {\n      v1Resp = await this.request('/api/search/tags', []);\n    }\n\n    if (v2Resp && v2Resp.scopes) {\n      this.setV2Tags(v2Resp.scopes);\n    } else if (v1Resp) {\n      this.setV1Tags(v1Resp.tagNames);\n    }\n  }\n\n  setV1Tags = (tags: string[]) => {\n    this.tagsV1 = tags;\n  };\n\n  setV2Tags = (tags: Scope[]) => {\n    this.tagsV2 = tags;\n  };\n\n  getIntrinsics = () => {\n    if (this.tagsV2) {\n      return getIntrinsicTags(this.tagsV2);\n    }\n    return intrinsicsV1;\n  };\n\n  getTags = (scope?: TraceqlSearchScope) => {\n    if (this.tagsV2 && scope) {\n      if (scope === TraceqlSearchScope.Unscoped) {\n        return getUnscopedTags(this.tagsV2);\n      }\n      return getTagsByScope(this.tagsV2, scope);\n    } else if (this.tagsV1) {\n      // This is needed because the /api/v2/search/tag/${tag}/values API expects \"status\" and the v1 API expects \"status.code\"\n      // so Tempo doesn't send anything and we inject it here for the autocomplete\n      if (!this.tagsV1.find((t) => t === 'status')) {\n        this.tagsV1.push('status');\n      }\n      return this.tagsV1;\n    }\n    return [];\n  };\n\n  getTraceqlAutocompleteTags = (scope?: string) => {\n    if (this.tagsV2) {\n      if (!scope) {\n        // have not typed a scope yet || unscoped (.) typed\n        return getUnscopedTags(this.tagsV2);\n      } else if (scope === TraceqlSearchScope.Unscoped) {\n        return getUnscopedTags(this.tagsV2);\n      }\n      return getTagsByScope(this.tagsV2, scope);\n    } else if (this.tagsV1) {\n      // This is needed because the /api/v2/search/tag/${tag}/values API expects \"status\" and the v1 API expects \"status.code\"\n      // so Tempo doesn't send anything and we inject it here for the autocomplete\n      if (!this.tagsV1.find((t) => t === 'status')) {\n        this.tagsV1.push('status');\n      }\n      return this.tagsV1;\n    }\n    return [];\n  };\n\n  getAutocompleteTags = () => {\n    if (this.tagsV2) {\n      return getAllTags(this.tagsV2);\n    } else if (this.tagsV1) {\n      // This is needed because the /api/search/tag/${tag}/values API expects \"status.code\" and the v2 API expects \"status\"\n      // so Tempo doesn't send anything and we inject it here for the autocomplete\n      if (!this.tagsV1.find((t) => t === 'status.code')) {\n        this.tagsV1.push('status.code');\n      }\n      return this.tagsV1;\n    }\n    return [];\n  };\n\n  async getOptionsV1(tag: string): Promise<Array<SelectableValue<string>>> {\n    const encodedTag = this.encodeTag(tag);\n    const response = await this.request(`/api/search/tag/${encodedTag}/values`);\n    let options: Array<SelectableValue<string>> = [];\n    if (response && response.tagValues) {\n      options = response.tagValues.map((v: string) => ({\n        value: v,\n        label: v,\n      }));\n    }\n    return options;\n  }\n\n  async getOptionsV2(tag: string, query?: string): Promise<Array<SelectableValue<string>>> {\n    const encodedTag = this.encodeTag(tag);\n    const response = await this.request(\n      `/api/v2/search/tag/${encodedTag}/values`,\n      query\n        ? { q: getTemplateSrv().replace(query, {}, VariableFormatID.Pipe), limit: this.getTagsLimit() }\n        : { limit: this.getTagsLimit() }\n    );\n    let options: Array<SelectableValue<string>> = [];\n    if (response && response.tagValues) {\n      response.tagValues.forEach((v: { type: string; value?: string }) => {\n        if (v.value) {\n          options.push({\n            type: v.type,\n            value: v.value,\n            label: v.value,\n          });\n        }\n      });\n    }\n    return options;\n  }\n\n  /**\n   * Encode (serialize) a given tag for use in a URL.\n   *\n   * @param tag the tag to encode\n   * @returns the encoded tag\n   */\n  private encodeTag = (tag: string): string => {\n    // If we call `encodeURIComponent` only once, we still get an error when issuing a request to the backend\n    // Reference: https://stackoverflow.com/a/37456192\n    return encodeURIComponent(encodeURIComponent(tag));\n  };\n\n  generateQueryFromFilters({\n    traceqlFilters,\n    adhocFilters,\n  }: {\n    traceqlFilters?: TraceqlFilter[];\n    adhocFilters?: AdHocVariableFilter[];\n  }) {\n    if (!traceqlFilters && !adhocFilters) {\n      return '';\n    }\n\n    const allFilters = [\n      ...this.generateQueryFromTraceQlFilters(traceqlFilters || []),\n      ...this.generateQueryFromAdHocFilters(adhocFilters || []),\n    ];\n\n    return `{${allFilters.join(' && ')}}`;\n  }\n\n  private generateQueryFromTraceQlFilters(filters: TraceqlFilter[]) {\n    if (!filters) {\n      return '';\n    }\n\n    return filters\n      .filter((f) => f.tag && f.operator && f.value?.length)\n      .map((f) => filterToQuerySection(f, filters, this));\n  }\n\n  private generateQueryFromAdHocFilters = (filters: AdHocVariableFilter[]) => {\n    return filters\n      .filter((f) => f.key && f.operator && f.value)\n      .map((f) => `${f.key}${f.operator}${this.adHocValueHelper(f)}`);\n  };\n\n  adHocValueHelper = (f: AdHocVariableFilter) => {\n    if (this.getIntrinsics().find((t) => t === f.key) && enumIntrinsics.includes(f.key)) {\n      return f.value;\n    }\n    if (parseInt(f.value, 10).toString() === f.value) {\n      return f.value;\n    }\n    return `\"${f.value}\"`;\n  };\n}\n","import type { languages } from 'monaco-editor';\nimport { Grammar } from 'prismjs';\n\nexport const languageConfiguration: languages.LanguageConfiguration = {\n  // the default separators except `@$`\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^`~!#%^&*()\\-=+\\[{\\]}\\\\|;:'\",.<>\\/?\\s]+)/g,\n  brackets: [\n    ['{', '}'],\n    ['(', ')'],\n  ],\n  autoClosingPairs: [\n    { open: '{', close: '}' },\n    { open: '(', close: ')' },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" },\n  ],\n  surroundingPairs: [\n    { open: '{', close: '}' },\n    { open: '(', close: ')' },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" },\n  ],\n  folding: {},\n};\n\nexport const operators = ['=', '!=', '>', '<', '>=', '<=', '=~', '!~'];\nexport const keywordOperators = ['=', '!='];\nexport const stringOperators = ['=', '!=', '=~', '!~'];\nexport const numberOperators = ['=', '!=', '>', '<', '>=', '<='];\n\nexport const intrinsicsV1 = [\n  'duration',\n  'kind',\n  'name',\n  'rootName',\n  'rootServiceName',\n  'status',\n  'statusMessage',\n  'traceDuration',\n];\nexport const intrinsics = intrinsicsV1.concat([\n  'event:name',\n  'event:timeSinceStart',\n  'instrumentation:name',\n  'instrumentation:version',\n  'link:spanID',\n  'link:traceID',\n  'span:duration',\n  'span:id',\n  'span:kind',\n  'span:name',\n  'span:status',\n  'span:statusMessage',\n  'trace:duration',\n  'trace:id',\n  'trace:rootName',\n  'trace:rootService',\n]);\nexport const scopes: string[] = ['event', 'instrumentation', 'link', 'resource', 'span'];\n\nexport const enumIntrinsics = ['kind', 'span:kind', 'status', 'span:status'];\n\nconst aggregatorFunctions = ['avg', 'count', 'max', 'min', 'sum'];\nconst functions = aggregatorFunctions.concat([\n  'by',\n  'count_over_time',\n  'min_over_time',\n  'max_over_time',\n  'avg_over_time',\n  'sum_over_time',\n  'histogram_over_time',\n  'quantile_over_time',\n  'rate',\n  'select',\n]);\n\nconst keywords = intrinsics.concat(scopes);\n\nconst statusValues = ['ok', 'unset', 'error', 'false', 'true'];\n\nconst language: languages.IMonarchLanguage = {\n  ignoreCase: false,\n  defaultToken: '',\n  tokenPostfix: '.traceql',\n\n  keywords,\n  operators,\n  statusValues,\n  functions,\n\n  symbols: /[=><!~?:&|+\\-*\\/^%]+/,\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  digits: /\\d+(_+\\d+)*/,\n  octaldigits: /[0-7]+(_+[0-7]+)*/,\n  binarydigits: /[0-1]+(_+[0-1]+)*/,\n\n  tokenizer: {\n    root: [\n      // comments\n      [/\\/\\/.*/, 'comment'], // line comment\n      [/\\/\\*.*\\*\\//, 'comment'], // block comment\n\n      // durations\n      [/[0-9]+(.[0-9]+)?(us|µs|ns|ms|s|m|h)/, 'number'],\n\n      // trace ID\n      [/^\\s*[0-9A-Fa-f]+\\s*$/, 'tag'],\n\n      // keywords\n      [\n        // match only predefined keywords\n        `(?:${keywords.join('|')})`,\n        {\n          cases: {\n            '@keywords': 'keyword',\n            '@default': 'tag', // fallback, but should never happen\n          },\n        },\n      ],\n\n      // functions and predefined values\n      [\n        // Inside (double) quotes, all characters are allowed, with the exception of `\\` and `\"` that must be escaped (`\\\\` and `\\\"`).\n        // Outside quotes, some more characters are prohibited, such as `!` and `=`.\n        /(?:\\w|^[^{}()=~!<>&|,\" ]|\"(?:\\\\\"|\\\\\\\\|[^\\\\\"])*\")+/,\n        {\n          cases: {\n            '@functions': 'predefined',\n            '@statusValues': 'type',\n            '@default': 'tag', // fallback, used for tag names\n          },\n        },\n      ],\n\n      // strings\n      [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'], // non-teminated string\n      [/'([^'\\\\]|\\\\.)*$/, 'string.invalid'], // non-teminated string\n      [/([^\\w])(\")/, [{ token: '' }, { token: 'string', next: '@string_double' }]],\n      [/([^\\w])(')/, [{ token: '' }, { token: 'string', next: '@string_single' }]],\n      [/([^\\w])(`)/, [{ token: '' }, { token: 'string', next: '@string_back' }]],\n\n      // delimiters and operators\n      [/[{}()\\[\\]]/, 'delimiter.bracket'],\n      [\n        /@symbols/,\n        {\n          cases: {\n            '@operators': 'delimiter',\n            '@default': '',\n          },\n        },\n      ],\n\n      // numbers\n      [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, 'number.float'],\n      [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, 'number.float'],\n      [/0(@octaldigits)[Ll]?/, 'number.octal'],\n      [/0[bB](@binarydigits)[Ll]?/, 'number.binary'],\n      [/(@digits)[fFdD]/, 'number.float'],\n      [/(@digits)[lL]?/, 'number'],\n    ],\n\n    string_double: [\n      [/[^\\\\\"]+/, 'string'],\n      [/@escapes/, 'string.escape'],\n      [/\\\\./, 'string.escape.invalid'],\n      [/\"/, 'string', '@pop'],\n    ],\n\n    string_single: [\n      [/[^\\\\']+/, 'string'],\n      [/@escapes/, 'string.escape'],\n      [/\\\\./, 'string.escape.invalid'],\n      [/'/, 'string', '@pop'],\n    ],\n\n    string_back: [\n      [/[^\\\\`]+/, 'string'],\n      [/@escapes/, 'string.escape'],\n      [/\\\\./, 'string.escape.invalid'],\n      [/`/, 'string', '@pop'],\n    ],\n  },\n};\n\n// For \"TraceQL\" tab (Monarch editor for TraceQL)\nexport const languageDefinition = {\n  id: 'traceql',\n  extensions: ['.traceql'],\n  aliases: ['tempo', 'traceql'],\n  mimetypes: [],\n  def: {\n    language,\n    languageConfiguration,\n  },\n};\n\n// For \"Search\" tab (query builder)\nexport const traceqlGrammar: Grammar = {\n  comment: {\n    pattern: /\\/\\/.*/,\n  },\n  'span-set': {\n    pattern: /\\{[^}]*}/,\n    inside: {\n      filter: {\n        pattern:\n          /([\\w:.\\/-]+)\\s*(=|!=|<=|>=|=~|!~|>|<)\\s*(\"[^\"]*\"|[\\w.\\/-]+)(\\s*(\\&\\&|\\|\\|)\\s*([\\w:.\\/-]+)\\s*(=|!=|<=|>=|=~|!~|>|<)\\s*(\"[^\"]*\"|[\\w.\\/-]+))*/g,\n        inside: {\n          comment: {\n            pattern: /#.*/,\n          },\n          'label-key': {\n            pattern: /[a-z_.][\\w./_-]*(:[\\w./_-]+)?(?=\\s*(=|!=|>|<|>=|<=|=~|!~))/,\n            alias: 'attr-name',\n          },\n          'label-value': {\n            pattern: /(\"(?:\\\\.|[^\\\\\"])*\")|(\\w+)/,\n            alias: 'attr-value',\n          },\n        },\n      },\n      punctuation: /[}{&|]/,\n    },\n  },\n  number: /\\b-?\\d+((\\.\\d*)?([eE][+-]?\\d+)?)?\\b/,\n  operator: new RegExp(`/[-+*/=%^~]|&&?|\\\\|?\\\\||!=?|<(?:=>?|<|>)?|>[>=]?|`, 'i'),\n  punctuation: /[{};()`,.]/,\n};\n","import { DataSourceApi, parseDuration } from '@grafana/data';\nimport { getDataSourceSrv } from '@grafana/runtime';\n\nimport { generateId } from './SearchTraceQLEditor/TagsInput';\nimport { TraceqlFilter, TraceqlSearchScope } from './dataquery.gen';\nimport { TempoQuery } from './types';\n\nconst LIMIT_MESSAGE = /.*range specified by start and end.*exceeds.*/;\nconst LIMIT_MESSAGE_METRICS = /.*metrics query time range exceeds the maximum allowed duration of.*/;\n\nexport function mapErrorMessage(errorMessage: string) {\n  if (errorMessage && (LIMIT_MESSAGE.test(errorMessage) || LIMIT_MESSAGE_METRICS.test(errorMessage))) {\n    return 'The selected time range exceeds the maximum allowed duration. Please select a shorter time range.';\n  } else {\n    return errorMessage;\n  }\n}\n\nexport const getErrorMessage = (message: string | undefined, prefix?: string) => {\n  const err = message ? ` (${message})` : '';\n  let errPrefix = prefix ? prefix : 'Error';\n  const msg = `${errPrefix}${err}. Please check the server logs for more details.`;\n  return mapErrorMessage(msg);\n};\n\nexport async function getDS(uid?: string): Promise<DataSourceApi | undefined> {\n  if (!uid) {\n    return undefined;\n  }\n\n  const dsSrv = getDataSourceSrv();\n  try {\n    return await dsSrv.get(uid);\n  } catch (error) {\n    console.error('Failed to load data source', error);\n    return undefined;\n  }\n}\n\nexport const migrateFromSearchToTraceQLSearch = (query: TempoQuery) => {\n  let filters: TraceqlFilter[] = [];\n  if (query.spanName) {\n    filters.push({\n      id: 'span-name',\n      scope: TraceqlSearchScope.Span,\n      tag: 'name',\n      operator: '=',\n      value: [query.spanName],\n      valueType: 'string',\n    });\n  }\n  if (query.serviceName) {\n    filters.push({\n      id: 'service-name',\n      scope: TraceqlSearchScope.Resource,\n      tag: 'service.name',\n      operator: '=',\n      value: [query.serviceName],\n      valueType: 'string',\n    });\n  }\n  if (query.minDuration || query.maxDuration) {\n    filters.push({\n      id: 'duration-type',\n      value: 'trace',\n    });\n  }\n  if (query.minDuration) {\n    filters.push({\n      id: 'min-duration',\n      tag: 'duration',\n      operator: '>',\n      value: [query.minDuration],\n      valueType: 'duration',\n    });\n  }\n  if (query.maxDuration) {\n    filters.push({\n      id: 'max-duration',\n      tag: 'duration',\n      operator: '<',\n      value: [query.maxDuration],\n      valueType: 'duration',\n    });\n  }\n  if (query.search) {\n    const tags = query.search.split(' ');\n    for (const tag of tags) {\n      const [key, value] = tag.split('=');\n      if (key && value) {\n        filters.push({\n          id: generateId(),\n          scope: TraceqlSearchScope.Unscoped,\n          tag: key,\n          operator: '=',\n          value: [value.replace(/(^\"|\"$)/g, '')], // remove quotes at start and end of string\n          valueType: value.startsWith('\"') && value.endsWith('\"') ? 'string' : undefined,\n        });\n      }\n    }\n  }\n\n  const migratedQuery: TempoQuery = {\n    datasource: query.datasource,\n    filters,\n    limit: query.limit,\n    query: query.query,\n    queryType: 'traceqlSearch',\n    refId: query.refId,\n  };\n  return migratedQuery;\n};\n\nexport const stepToNanos = (step?: string) => {\n  if (!step) {\n    return 0;\n  }\n\n  const match = step.match(/(\\d+)(.+)/);\n\n  const rawLength = match?.[1];\n  const unit = match?.[2];\n\n  if (rawLength) {\n    if (unit === 'ns') {\n      return parseInt(rawLength, 10);\n    }\n    if (unit === 'µs') {\n      return parseInt(rawLength, 10) * 1000;\n    }\n    if (unit === 'ms') {\n      return parseInt(rawLength, 10) * 1000000;\n    }\n    const duration = parseDuration(step);\n    return (\n      (duration.seconds || 0) * 1000000000 +\n      (duration.minutes || 0) * 60000000000 +\n      (duration.hours || 0) * 3600000000000\n    );\n  }\n\n  return 0;\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__6089__;","module.exports = __WEBPACK_EXTERNAL_MODULE__7781__;","module.exports = __WEBPACK_EXTERNAL_MODULE__8531__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2007__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3241__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1308__;","module.exports = __WEBPACK_EXTERNAL_MODULE__8146__;","module.exports = __WEBPACK_EXTERNAL_MODULE__5959__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1269__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3059__;","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default { randomUUID };\n","let getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n    if (!getRandomValues) {\n        if (typeof crypto === 'undefined' || !crypto.getRandomValues) {\n            throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n        }\n        getRandomValues = crypto.getRandomValues.bind(crypto);\n    }\n    return getRandomValues(rnds8);\n}\n","import validate from './validate.js';\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n    byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n    return (byteToHex[arr[offset + 0]] +\n        byteToHex[arr[offset + 1]] +\n        byteToHex[arr[offset + 2]] +\n        byteToHex[arr[offset + 3]] +\n        '-' +\n        byteToHex[arr[offset + 4]] +\n        byteToHex[arr[offset + 5]] +\n        '-' +\n        byteToHex[arr[offset + 6]] +\n        byteToHex[arr[offset + 7]] +\n        '-' +\n        byteToHex[arr[offset + 8]] +\n        byteToHex[arr[offset + 9]] +\n        '-' +\n        byteToHex[arr[offset + 10]] +\n        byteToHex[arr[offset + 11]] +\n        byteToHex[arr[offset + 12]] +\n        byteToHex[arr[offset + 13]] +\n        byteToHex[arr[offset + 14]] +\n        byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n    const uuid = unsafeStringify(arr, offset);\n    if (!validate(uuid)) {\n        throw TypeError('Stringified UUID is invalid');\n    }\n    return uuid;\n}\nexport default stringify;\n","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n    if (native.randomUUID && !buf && !options) {\n        return native.randomUUID();\n    }\n    options = options || {};\n    const rnds = options.random ?? options.rng?.() ?? rng();\n    if (rnds.length < 16) {\n        throw new Error('Random bytes length must be >= 16');\n    }\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n    if (buf) {\n        offset = offset || 0;\n        if (offset < 0 || offset + 16 > buf.length) {\n            throw new RangeError(`UUID byte range ${offset}:${offset + 15} is out of buffer bounds`);\n        }\n        for (let i = 0; i < 16; ++i) {\n            buf[offset + i] = rnds[i];\n        }\n        return buf;\n    }\n    return unsafeStringify(rnds);\n}\nexport default v4;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"public/plugins/tempo/\";","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t4231: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = globalThis[\"webpackChunktempo\"] = globalThis[\"webpackChunktempo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","__webpack_require__.nc = undefined;","\n  import amdMetaModule from 'amd-module';\n\n  __webpack_public_path__ =\n    amdMetaModule && amdMetaModule.uri\n      ? amdMetaModule.uri.slice(0, amdMetaModule.uri.lastIndexOf('/') + 1)\n      : 'public/plugins/tempo/';\n  ","import { DashboardLoadedEvent } from '@grafana/data';\nimport { getTemplateSrv, reportInteraction } from '@grafana/runtime';\n\nimport pluginJson from './plugin.json';\nimport { TempoQuery } from './types';\n\ntype TempoOnDashboardLoadedTrackingEvent = {\n  grafana_version?: string;\n  dashboard_id?: string;\n  org_id?: number;\n  service_map_query_count: number;\n  traceql_query_count: number;\n  upload_query_count: number;\n  service_map_queries_with_template_variables_count: number;\n  traceql_queries_with_template_variables_count: number;\n};\n\nexport const onDashboardLoadedHandler = ({\n  payload: { dashboardId, orgId, grafanaVersion, queries },\n}: DashboardLoadedEvent<TempoQuery>) => {\n  try {\n    const tempoQueries = queries[pluginJson.id];\n\n    if (!tempoQueries?.length) {\n      return;\n    }\n\n    let stats: TempoOnDashboardLoadedTrackingEvent = {\n      grafana_version: grafanaVersion,\n      dashboard_id: dashboardId,\n      org_id: orgId,\n      service_map_query_count: 0,\n      traceql_query_count: 0,\n      upload_query_count: 0,\n      service_map_queries_with_template_variables_count: 0,\n      traceql_queries_with_template_variables_count: 0,\n    };\n\n    for (const query of tempoQueries) {\n      if (query.hide) {\n        continue;\n      }\n\n      if (query.queryType === 'serviceMap') {\n        stats.service_map_query_count++;\n        if (query.serviceMapQuery && hasTemplateVariables(query.serviceMapQuery)) {\n          stats.service_map_queries_with_template_variables_count++;\n        }\n      } else if (query.queryType === 'traceql') {\n        stats.traceql_query_count++;\n        if (hasTemplateVariables(query.query)) {\n          stats.traceql_queries_with_template_variables_count++;\n        }\n      } else if (query.queryType === 'upload') {\n        stats.upload_query_count++;\n      }\n    }\n\n    reportInteraction('grafana_tempo_dashboard_loaded', stats);\n  } catch (error) {\n    console.error('error in tempo tracking handler', error);\n  }\n};\n\nconst hasTemplateVariables = (val?: string | string[]): boolean => {\n  return (Array.isArray(val) ? val : [val]).some((v) => getTemplateSrv().containsTemplate(v));\n};\n","import { lazy, Suspense } from 'react';\n\nimport { DataSourcePlugin, DashboardLoadedEvent, type QueryEditorProps } from '@grafana/data';\nimport { getAppEvents } from '@grafana/runtime';\nimport { LoadingPlaceholder } from '@grafana/ui';\n\nimport type { ConfigEditorProps } from './configuration/ConfigEditor';\nimport { TempoDatasource } from './datasource';\nimport { onDashboardLoadedHandler } from './tracking';\nimport type { TempoQuery } from './types';\n\n// Lazy load the QueryField and ConfigEditor components to reduce the size of the initial bundle\nconst TempoQueryFieldLazy = lazy(() => import('./QueryField'));\nconst ConfigEditorLazy = lazy(() => import('./configuration/ConfigEditor'));\nconst CheatSheetLazy = lazy(() => import('./CheatSheet'));\n\nfunction TempoQueryField(props: QueryEditorProps<TempoDatasource, TempoQuery>) {\n  return (\n    <Suspense fallback={<LoadingPlaceholder text={'Loading editor'} />}>\n      <TempoQueryFieldLazy {...props} />\n    </Suspense>\n  );\n}\n\nfunction ConfigEditor(props: ConfigEditorProps) {\n  return (\n    <Suspense fallback={<LoadingPlaceholder text={'Loading editor'} />}>\n      <ConfigEditorLazy {...props} />\n    </Suspense>\n  );\n}\n\nfunction CheatSheet() {\n  return (\n    <Suspense fallback={null}>\n      <CheatSheetLazy />\n    </Suspense>\n  );\n}\n\nexport const plugin = new DataSourcePlugin(TempoDatasource)\n  .setQueryEditor(TempoQueryField)\n  .setConfigEditor(ConfigEditor)\n  .setQueryEditorHelp(CheatSheet);\n\n// Subscribe to on dashboard loaded event so that we can track plugin adoption\ngetAppEvents().subscribe<DashboardLoadedEvent<TempoQuery>>(DashboardLoadedEvent, onDashboardLoadedHandler);\n"],"names":["inProgress","dataWebpackPrefix","tslib_1","react_1","useAsyncFn_1","__importDefault","exports","fn","deps","_a","default","loading","state","callback","useEffect","Object","defineProperty","value","useMountedState_1","initialState","lastCallId","useRef","isMounted","useState","set","useCallback","args","_i","arguments","length","callId","current","prevState","__assign","apply","then","error","mountedRef","get","f","k","Symbol","for","l","m","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","e","h","call","defaultProps","$$typeof","type","props","_owner","Fragment","jsx","jsxs","module","ANY","Comparator","constructor","comp","options","parseOptions","loose","trim","split","join","debug","this","parse","semver","operator","version","r","re","t","COMPARATORLOOSE","COMPARATOR","match","TypeError","undefined","SemVer","toString","test","er","cmp","intersects","Range","includePrerelease","startsWith","includes","safeRe","SPACE_CHARACTERS","range","raw","formatted","replace","map","parseRange","filter","first","isNullSet","isAny","i","comps","format","memoKey","FLAG_INCLUDE_PRERELEASE","FLAG_LOOSE","cached","cache","hr","HYPHENRANGELOOSE","HYPHENRANGE","hyphenReplace","COMPARATORTRIM","comparatorTrimReplace","TILDETRIM","tildeTrimReplace","CARETTRIM","caretTrimReplace","rangeList","parseComparator","replaceGTE0","rangeMap","Map","comparators","size","has","delete","result","values","some","thisComparators","isSatisfiable","rangeComparators","every","thisComparator","rangeComparator","testSet","remainingComparators","slice","testComparator","pop","otherComparator","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","id","toLowerCase","replaceTilde","TILDELOOSE","TILDE","_","M","pr","ret","replaceCaret","CARETLOOSE","CARET","z","replaceXRange","XRANGELOOSE","XRANGE","gtlt","xM","xm","xp","anyX","STAR","GTE0PRE","GTE0","incPr","$0","from","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","prerelease","allowed","major","minor","patch","MAX_LENGTH","MAX_SAFE_INTEGER","compareIdentifiers","LOOSE","FULL","num","build","compare","other","compareMain","comparePre","compareBuild","inc","release","identifier","identifierBase","Error","PRERELEASELOOSE","PRERELEASE","base","Number","push","isNaN","s","eq","neq","gt","gte","lt","lte","op","String","rtl","coerceRtlRegex","COERCERTLFULL","COERCERTL","next","exec","index","lastIndex","COERCEFULL","COERCE","versionA","versionB","version1","version2","v1","v2","comparison","v1Higher","highVersion","lowVersion","highHasPre","prefix","throwErrors","parsed","list","sort","v","internalRe","constants","identifiers","valid","clean","diff","rcompare","compareLoose","rsort","coerce","satisfies","toComparators","maxSatisfying","minSatisfying","minVersion","validRange","outside","gtr","ltr","simplifyRange","subset","src","tokens","SEMVER_SPEC_VERSION","RELEASE_TYPES","rcompareIdentifiers","MAX_SAFE_COMPONENT_LENGTH","MAX_SAFE_BUILD_LENGTH","process","env","NODE_DEBUG","console","numeric","anum","bnum","max","firstKey","keys","looseOption","freeze","emptyOpts","safeSrc","R","LETTERDASHNUMBER","safeRegexReplacements","createToken","name","isGlobal","safe","token","makeSafeRegex","RegExp","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","BUILDIDENTIFIER","MAINVERSION","BUILD","FULLPLAIN","MAINVERSIONLOOSE","LOOSEPLAIN","XRANGEIDENTIFIER","XRANGEIDENTIFIERLOOSE","GTLT","XRANGEPLAIN","XRANGEPLAINLOOSE","COERCEPLAIN","LONETILDE","LONECARET","r1","r2","versions","maxSV","rangeObj","forEach","min","minSV","minver","setMin","comparator","compver","hilo","gtfn","ltefn","ltfn","ecomp","high","low","prev","ranges","simplified","original","minimumVersionWithPreRelease","minimumVersion","simpleSubset","sub","dom","eqSet","Set","gtltComp","higher","lower","hasDomLT","hasDomGT","higherGT","lowerLT","add","needDomLTPre","needDomGTPre","sawNonNull","OUTER","simpleSub","simpleDom","isSub","timeoutMap","TemporaryAlert","style","theme","useTheme2","css","position","zIndex","portal","top","right","visible","setVisible","timer","setTimer","clearTimeout","text","setTimeout","severity","Alert","className","elevated","onRemove","title","BarGaugeDisplayMode","TableCellDisplayMode","VariableFormatID","datasource","updateFilter","isTagsLoading","tags","setError","hideScope","hideTag","hideValue","query","addVariablesToOptions","isMulti","allowCustomValue","styles","useStyles2","getStyles","alertText","setAlertText","scopedTag","useMemo","filterScopedTag","languageProvider","tagQuery","setTagQuery","tagValuesQuery","setTagValuesQuery","updateOptions","tag","getOptionsV2","isFetchError","status","message","isLoadingValues","useAsync","Array","isArray","find","o","label","valueType","scopeOptions","TraceqlSearchScope","getTags","optionsOfFirstType","uniqueOptionType","operatorList","allOperators","keywordOperators","stringOperators","numberOperators","operatorOptions","operatorSelectableValue","formatTagOptions","filterTag","uniq","tagOptions","OPTIONS_LIMIT","queryLowerCase","filterdOptions","tagValueOptions","currentOptions","isCustomValue","newCustomOptions","val","opt","Stack","gap","width","Select","dropdown","inputId","withTemplateVariableOptions","scope","onChange","placeholder","aria-label","isLoading","onInputChange","action","onCloseMenu","isClearable","virtualized","onCreateOption","concat","allowCreateWhileLoading","getTemplateSrv","getVariables","boxShadow","AccessoryButton","getButtonStyles","Button","cx","button","paddingLeft","spacing","paddingRight","vertical","display","flexDirection","horizontal","addTag","marginLeft","deleteFilter","filters","staticTags","hideValues","requireTagAndValue","generateQueryWithoutFilter","handleOnAdd","generateId","Span","getFilteredTags","validInput","div","SearchField","variant","icon","onClick","tooltip","span","uuidv4","interpolateFilters","scopedVars","updatedFilter","Pipe","isRegExpOperator","valueHelper","getEscapedValues","getEscapedRegexValues","scopeHelper","lp","getIntrinsics","Event","Instrumentation","Link","Resource","tagHelper","durationType","filterToQuerySection","getTagWithoutScope","filterTitle","startCase","getUnscopedTags","scopes","Intrinsic","flat","getIntrinsicTags","intrinsics","getAllTags","getTagsByScope","replaceAt","array","description","MetricsQueryType","SearchStreamingState","SearchTableType","TempoVariableQueryType","variableOptions","refId","TempoVariableQueryEditor","setLabel","setType","labelOptions","setLabelOptions","labelQuery","setLabelQuery","labelNamesQuery","labelNames","handleBlur","InlineFieldRow","InlineField","labelWidth","newType","onBlur","newLabel","newLabelValue","secondsMetric","totalsMetric","failedMetric","histogramMetric","nativeHistogramMetric","rateMetric","expr","topk","params","errorRateMetric","durationMetric","nativeHistogramDurationMetric","defaultTableFilter","serviceMapMetrics","mapPromMetricsToServiceMap","responses","frames","data","reduce","acc","frameDTO","frame","toDataFrame","DataFrameView","getMetricFrames","nodesMap","edgesMap","collectMetricData","collectIsInstrumented","nodes","edges","createDF","fields","MutableDataFrame","meta","preferredVisualisationType","Fields","FieldType","string","config","displayName","subTitle","mainStat","number","unit","secondaryStat","arc","color","fixedColor","mode","FieldColorModeId","Fixed","isInstrumented","boolean","source","target","createServiceMapDataFrames","nodeId","node","namespace","total","seconds","NaN","Math","round","failed","edgeId","edge","sourceName","sourceNamespace","targetName","targetNamespace","convertToDataFrames","stat","metric","valueName","row","serverId","server_service_namespace","server","clientId","client_service_namespace","client","connection_type","createConstMap","res","len","toUpperCase","TMP_CLOUD_PROVIDER","TMP_CLOUD_ACCOUNT_ID","TMP_CLOUD_REGION","TMP_CLOUD_AVAILABILITY_ZONE","TMP_CLOUD_PLATFORM","TMP_AWS_ECS_CONTAINER_ARN","TMP_AWS_ECS_CLUSTER_ARN","TMP_AWS_ECS_LAUNCHTYPE","TMP_AWS_ECS_TASK_ARN","TMP_AWS_ECS_TASK_FAMILY","TMP_AWS_ECS_TASK_REVISION","TMP_AWS_EKS_CLUSTER_ARN","TMP_AWS_LOG_GROUP_NAMES","TMP_AWS_LOG_GROUP_ARNS","TMP_AWS_LOG_STREAM_NAMES","TMP_AWS_LOG_STREAM_ARNS","TMP_CONTAINER_NAME","TMP_CONTAINER_ID","TMP_CONTAINER_RUNTIME","TMP_CONTAINER_IMAGE_NAME","TMP_CONTAINER_IMAGE_TAG","TMP_DEPLOYMENT_ENVIRONMENT","TMP_DEVICE_ID","TMP_DEVICE_MODEL_IDENTIFIER","TMP_DEVICE_MODEL_NAME","TMP_FAAS_NAME","TMP_FAAS_ID","TMP_FAAS_VERSION","TMP_FAAS_INSTANCE","TMP_FAAS_MAX_MEMORY","TMP_HOST_ID","TMP_HOST_NAME","TMP_HOST_TYPE","TMP_HOST_ARCH","TMP_HOST_IMAGE_NAME","TMP_HOST_IMAGE_ID","TMP_HOST_IMAGE_VERSION","TMP_K8S_CLUSTER_NAME","TMP_K8S_NODE_NAME","TMP_K8S_NODE_UID","TMP_K8S_NAMESPACE_NAME","TMP_K8S_POD_UID","TMP_K8S_POD_NAME","TMP_K8S_CONTAINER_NAME","TMP_K8S_REPLICASET_UID","TMP_K8S_REPLICASET_NAME","TMP_K8S_DEPLOYMENT_UID","TMP_K8S_DEPLOYMENT_NAME","TMP_K8S_STATEFULSET_UID","TMP_K8S_STATEFULSET_NAME","TMP_K8S_DAEMONSET_UID","TMP_K8S_DAEMONSET_NAME","TMP_K8S_JOB_UID","TMP_K8S_JOB_NAME","TMP_K8S_CRONJOB_UID","TMP_K8S_CRONJOB_NAME","TMP_OS_TYPE","TMP_OS_DESCRIPTION","TMP_OS_NAME","TMP_OS_VERSION","TMP_PROCESS_PID","TMP_PROCESS_EXECUTABLE_NAME","TMP_PROCESS_EXECUTABLE_PATH","TMP_PROCESS_COMMAND","TMP_PROCESS_COMMAND_LINE","TMP_PROCESS_COMMAND_ARGS","TMP_PROCESS_OWNER","TMP_PROCESS_RUNTIME_NAME","TMP_PROCESS_RUNTIME_VERSION","TMP_PROCESS_RUNTIME_DESCRIPTION","TMP_SERVICE_NAME","TMP_SERVICE_NAMESPACE","TMP_SERVICE_INSTANCE_ID","TMP_SERVICE_VERSION","TMP_TELEMETRY_SDK_NAME","TMP_TELEMETRY_SDK_LANGUAGE","TMP_TELEMETRY_SDK_VERSION","TMP_TELEMETRY_AUTO_VERSION","TMP_WEBENGINE_NAME","TMP_WEBENGINE_VERSION","TMP_WEBENGINE_DESCRIPTION","SemanticResourceAttributes","createNodeGraphFrames","view","traceDuration","traceEndTime","traceStartTime","Infinity","startTime","duration","findTraceDuration","spanMap","getSpan","children","parentId","parentIds","makeSpanMap","spanID","parentSpanID","childrenDuration","getNonOverlappingDuration","selfDuration","stats","getStats","serviceName","operationName","main","secondary","convertTraceToGraph","nodesFrame","edgesFrame","makeFrames","tail","prevStart","prevEnd","start","end","toFixedNoTrailingZeros","parseFloat","toFixed","getAttributeValue","stringValue","boolValue","Boolean","intValue","parseInt","doubleValue","arrayValue","arValue","resourceToProcess","resource","serviceTags","attribute","attributes","SERVICE_NAME","getSpanTags","spanTags","getSpanKind","kind","getReferences","references","links","link","traceId","spanId","traceID","getLogs","logs","events","event","timestamp","timeUnixNano","transformTrace","response","instanceSettings","nodeGraph","emptyDataQueryResponse","traceToProfilesData","jsonData","traceToProfilesOptions","tracesToProfiles","profilesDataSourceSettings","datasourceUid","getDataSourceSrv","getInstanceSettings","customQuery","dataLink","url","internal","uid","datasourceName","labelSelector","groupBy","profileTypeId","queryType","spanSelector","origin","DataLinkConfigOrigin","Datasource","field","formatTraceQLResponse","tableType","Spans","spanDynamicAttrs","hasNameAttribute","trace","getSpanSets","ss","attr","displayNameFromDS","spans","custom","hidden","panelsState","time","localeCompare","startTimeUnixNano","spanSet","transformSpanToTraceData","createTableFrameFromTraceQlQueryAsSpans","Raw","createDataFrame","JSON","stringify","createDataFrameFromTraceQlQuery","nestedFrames","uniqueRowIdFields","traceData","durationMs","traceService","rootServiceName","traceName","rootTraceName","transformToTraceData","spanSets","traceSubFrame","createTableFrameFromTraceQlQuery","subFrame","createTheme","getDisplayProcessor","spanStartTimeUnixMs","traceIdHidden","durationNanos","attrs","Value","bool_value","double_value","int_value","string_value","traceFormat","combineResponses","currentResult","newResult","cloneQueryResponse","newFrame","currentFrame","frame1","frame2","frameType1","frameType2","DataFrameType","TimeSeriesMulti","field1","field2","shallowCompare","labels","customType1","frameType","customType2","shouldCombine","dest","totalFields","sourceField","findSourceField","nanos","getCombinedMetadataStats","combineFrames","cloneDataFrame","mergedErrors","errors","mergedError","mergedTraceIds","traceIds","referenceField","sourceFields","candidates","candidate","TOTAL_BYTES_STAT","destStats","sourceStats","destStat","sourceStat","eitherStat","getLiveStreamKey","doTempoMetricsStreaming","ds","LoadingState","NotStarted","step","stepToNanos","getGrafanaLiveSrv","getStream","LiveChannelScope","DataSource","path","timeRange","toISOString","pipe","takeWhile","evt","frameState","Done","fieldCache","messageFrame","dataFrameFromJSON","FieldCache","getFieldByName","Streaming","scan","curr","timeFieldIndex","findIndex","accFrame","duplicatesMap","indexesToRemove","indexes","dataTopic","removeDuplicateTimeFieldValues","sortDataFrame","mergeFrames","metricsDataFrame","metrics","elapsedTime","progressThresholds","steps","ThresholdsMode","Absolute","capitalize","totalBlocks","completedJobs","totalJobs","cellOptions","thresholds","TempoVariableSupport","CustomVariableSupport","request","executeVariableQuery","targets","super","editor","DEFAULT_LIMIT","DEFAULT_SPSS","FeatureName","featuresToTempoVersion","TempoDatasource","DataSourceWithBackend","Promise","LabelNames","LabelValues","labelValuesQuery","fetchTags","getAutocompleteTags","labelName","tagsV2","flatMap","tagV2","scopeAndTag","getOptionsV1","option","getTagKeys","getTagValues","generateQueryFromFilters","adhocFilters","isFeatureAvailable","featureName","actualVersion","tempoVersion","isStreamingSearchEnabled","streamingEnabled","search","liveEnabled","isStreamingMetricsEnabled","isTraceQlMetricsQuery","isTraceIdQuery","subQueries","filteredTargets","hide","clear","of","nativeSearch","spanName","maxDuration","minDuration","migratedQuery","migrateFromSearchToTraceQLSearch","traceqlSearch","traceql","appliedQuery","applyVariables","queryValue","reportInteraction","datasourceType","app","grafana_version","buildInfo","hasQuery","handleTraceIdQuery","streaming","handleMetricsStreamingQuery","handleTraceQlMetricsQuery","handleTraceQlQuery","traceqlSearchTargets","queryFromFilters","traceqlFilters","handleStreamingQuery","performance","now","_request","limit","spss","unix","reportTempoQueryMetrics","success","latencyMs","traces","catchError","err","getErrorMessage","statusCode","statusText","upload","uploadedJson","isTraceData","batches","isServiceGraphData","df","librarySpan","instrumentationLibrarySpans","parentSpanId","code","statusMessage","instrumentationLibraryName","instrumentationLibrary","instrumentationLibraryVersion","traceState","endTimeUnixNano","transformFromOTEL","enabled","serviceMap","hasServiceMapQuery","serviceMapQuery","histogramType","tempoDsUid","tempoDatasourceUid","serviceMapRequest","makePromServiceMapRequest","queryPrometheus","toArray","errorRes","nodeLength","edgeLength","serviceMapIncludeNamespace","getFieldConfig","concatMap","serviceMapResponse","makeServiceGraphViewRequest","buildExpr","rates","rateQuery","rateResponse","serviceGraphViewMetrics","errorRateBySpanName","durationsBySpanName","CoreApp","Explore","spanNameField","spanNameLabels","spanNames","errorAndDurationResponse","serviceGraphView","secondResponse","rate","errorRate","x","filterable","makePromLink","buildLinkExpr","decimals","Lcd","Gauge","errorRateNames","errorRateValues","errorRateObj","getRateAlignedValues","durationObj","delimiter","checkedDurationMetric","makeTempoLink","getServiceGraphViewDataFrames","errorAndDurationQuery","merge","mapErrorMessage","applyTemplateVariables","interpolateVariablesInQueries","queries","getRef","expandedQuery","templateSrv","validTargets","EMPTY","makeTraceIdRequest","traceIDField","dataLinks","getDataLinks","requestTime","SpansPerSpanSet","doTempoSearchStreaming","finalize","traceQuery","timeShiftEnabled","dateTime","subtract","rangeUtil","intervalToMs","spanStartTimeShift","spanEndTimeShift","metadataRequest","lastValueFrom","method","hideFromInspector","apiUrl","urlUtil","serializeParams","req","getBackendSrv","fetch","testDatasource","observables","headers","mergeMap","Date","setMinutes","getMinutes","requestId","interval","intervalMs","timezone","Traces","forkJoin","observableResults","erroredResult","getQueryDisplayText","tracesToLogs","spanBar","tagLimit","init","TempoLanguageProvider","variables","instant","exemplar","targetField","tempoField","namespaceFields","serverSumBy","makeHistogramLink","makeTempoLinkServiceMap","createHistogramLink","serviceNamespace","serviceNamespaceVar","serviceNameVar","replaceVariables","NodeGraphDataFrameFieldNames","peerAttribute","extraSumByFields","sumSubExprs","groupSubExprs","interactionName","timeRangeSeconds","extraParams","serviceMapQueryMatch","replaceAll","item","rateResp","objToAlign","rateNames","LanguageProvider","v1Resp","v2Resp","getTagsLimit","setV2Tags","setV1Tags","tagNames","encodedTag","encodeTag","tagValues","generateQueryFromTraceQlFilters","generateQueryFromAdHocFilters","initialValues","tagsV1","startTask","intrinsicsV1","Unscoped","getTraceqlAutocompleteTags","encodeURIComponent","adHocValueHelper","enumIntrinsics","assign","operators","functions","keywords","languageDefinition","extensions","aliases","mimetypes","def","language","ignoreCase","defaultToken","tokenPostfix","statusValues","symbols","escapes","digits","octaldigits","binarydigits","tokenizer","root","cases","string_double","string_single","string_back","languageConfiguration","wordPattern","brackets","autoClosingPairs","open","close","surroundingPairs","folding","traceqlGrammar","comment","pattern","inside","alias","punctuation","LIMIT_MESSAGE","LIMIT_MESSAGE_METRICS","errorMessage","getDS","dsSrv","endsWith","rawLength","parseDuration","minutes","hours","__WEBPACK_EXTERNAL_MODULE__6089__","__WEBPACK_EXTERNAL_MODULE__7781__","__WEBPACK_EXTERNAL_MODULE__8531__","__WEBPACK_EXTERNAL_MODULE__2007__","__WEBPACK_EXTERNAL_MODULE__3241__","__WEBPACK_EXTERNAL_MODULE__1308__","__WEBPACK_EXTERNAL_MODULE__8146__","__WEBPACK_EXTERNAL_MODULE__5959__","__WEBPACK_EXTERNAL_MODULE__1269__","__WEBPACK_EXTERNAL_MODULE__3059__","extendStatics","setPrototypeOf","__proto__","__extends","__","create","__rest","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","__param","paramIndex","decorator","__esDecorate","ctor","descriptorIn","contextIn","initializers","extraInitializers","accept","descriptor","done","context","access","addInitializer","unshift","__runInitializers","thisArg","useValue","__propKey","__setFunctionName","configurable","__metadata","metadataKey","metadataValue","metadata","__awaiter","_arguments","P","generator","resolve","reject","fulfilled","rejected","__generator","body","y","sent","trys","ops","Iterator","verb","iterator","__createBinding","k2","__esModule","writable","enumerable","__exportStar","__values","__read","ar","__spread","__spreadArrays","il","j","jl","__spreadArray","pack","__await","__asyncGenerator","asyncIterator","AsyncIterator","resume","fulfill","settle","shift","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","__setModuleDefault","ownKeys","getOwnPropertyNames","__importStar","mod","__classPrivateFieldGet","receiver","__classPrivateFieldSet","__classPrivateFieldIn","__addDisposableResource","async","dispose","inner","asyncDispose","stack","_SuppressedError","SuppressedError","suppressed","__disposeResources","fail","hasError","__rewriteRelativeImportExtension","preserveJsx","tsx","ext","cm","randomUUID","crypto","bind","getRandomValues","rnds8","Uint8Array","byteToHex","unsafeStringify","arr","offset","buf","rnds","random","rng","RangeError","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","amdO","getter","definition","chunkId","all","promises","u","globalThis","Function","window","obj","prop","script","needAttach","scripts","document","getElementsByTagName","getAttribute","createElement","charset","timeout","nc","setAttribute","onScriptComplete","onerror","onload","doneFns","parentNode","removeChild","head","appendChild","toStringTag","baseURI","self","location","href","installedChunks","installedChunkData","promise","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","runtime","chunkLoadingGlobal","lastIndexOf","hasTemplateVariables","containsTemplate","TempoQueryFieldLazy","lazy","ConfigEditorLazy","CheatSheetLazy","plugin","DataSourcePlugin","setQueryEditor","Suspense","fallback","LoadingPlaceholder","setConfigEditor","setQueryEditorHelp","getAppEvents","subscribe","DashboardLoadedEvent","payload","dashboardId","orgId","grafanaVersion","tempoQueries","pluginJson","dashboard_id","org_id","service_map_query_count","traceql_query_count","upload_query_count","service_map_queries_with_template_variables_count","traceql_queries_with_template_variables_count"],"sourceRoot":""}